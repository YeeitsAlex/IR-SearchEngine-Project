http://password.csufresno.edu
<!DOCTYPE doctype html>
<html class="no-js" lang="">
 <head>
  <meta charset="utf-8"/>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <title>
   Password Management
  </title>
  <link href="//www.fresnostate.edu/omniresources/tpl/default/css/tpl.min.css?nocache=true&amp;backend=web01" rel="stylesheet"/>
  <meta content="width=device-width, initial-scale=1" name="viewport"/>
  <link href="https://idm.fresnostate.edu/pwreset/../css/app.css?nocache=true" rel="stylesheet" type="text/css"/>
 </head>
 <body>
  <nav class="navbar navbar-default">
   <div class="container navbar__container no-gutter">
    <a class="navbar__logo-link" href="https://www.fresnostate.edu">
     <span class="sr-only">
      Fresno State
     </span>
    </a>
    <div class="navbar__group navbar-header">
     <div class="navbar__group-item">
      <a href="#">
       <img alt="help support Fresno State" class="navbar__give-now" height="34" src="//www.fresnostate.edu/omniresources/images/donate-button-top.gif" width="160"/>
      </a>
     </div>
     <div class="navbar__group-item--stretch">
      <form action="https://www.fresnostate.edu/search" method="get">
       <input name="page" type="hidden" value="1"/>
       <input name="applied_filters" type="hidden" value=""/>
       <input name="sort" type="hidden" value="relevance"/>
       <input name="sortdir" type="hidden" value="desc"/>
       <input name="pagesize" type="hidden" value="10"/>
       <input name="col" type="hidden" value="8"/>
       <input name="oe" type="hidden" value="UTF-8"/>
       <div class="input-group navbar__button-group">
        <input class="form-control navbar__search-box" maxlength="235" name="query" placeholder="Search Fresno State" type="text">
         <div class="input-group-btn">
          <button class="btn btn-default navbar__go-button" type="submit">
           Go
          </button>
         </div>
        </input>
       </div>
      </form>
     </div>
    </div>
   </div>
  </nav>
 </body>
</html>
<button aria-expanded="false" aria-haspopup="true" class="btn btn-default dropdown-toggle navbar__quick-links-button" data-toggle="dropdown" type="button">
 Quick Links
 <span class="caret">
 </span>
</button>
<ul class="dropdown-menu">
 <li>
  <a href="http://www.fresnostate.edu/academics/blackboard/">
   Blackboard
  </a>
 </li>
 <li>
  <a href="http://directory.csufresno.edu/">
   Campus Directory
  </a>
 </li>
 <li>
  <a href="http://www.fresnostate.edu/map/">
   Campus Maps
  </a>
 </li>
 <li>
  <a href="http://www.fresnostate.edu/catalog/">
   Catalog
  </a>
 </li>
 <li>
  <a href="http://www.fresnostate.edu/home/about/commentform.html">
   Comment Form
  </a>
 </li>
 <li>
  <a href="http://www.fresnostate.edu/events/">
   Events Calendar
  </a>
 </li>
 <li>
  <a href="https://email.csufresno.edu/index.php">
   Email
  </a>
 </li>
 <li>
  <a href="https://library.fresnostate.edu/">
   Henry Madden Library
  </a>
 </li>
 <li>
  <a href="https://my.fresnostate.edu/psp/mfs/EMPLOYEE/EMPL/h/?tab=PAPP_GUEST">
   My Fresno State
  </a>
 </li>
 <li>
  <a href="http://fresnostate.edu/help/">
   Tech Help Center
  </a>
 </li>
</ul>
<div class="navbar__tiny-group">
 <div class="input-group navbar__tiny-group-inputs-container">
  <div class="input-group-btn navbar__tiny-group-search-btn-container">
   <button aria-controls="searchbox-collapse" aria-expanded="false" class="btn btn-default navbar__tiny-group-search-btn collapsed" data-target="#searchbox-collapse" data-toggle="collapse" type="submit">
    <i class="fa fa-search">
    </i>
    <span class="sr-only">
     Search
    </span>
   </button>
  </div>
  <div class="input-group-btn navbar__tiny-group-links-btn-container">
   <button aria-controls="quicklinks-collapse" aria-expanded="false" class="btn btn-default collapsed navbar__tiny-group-links-btn" data-target="#quicklinks-collapse" data-toggle="collapse" type="button">
    Quick Links
    <span class="caret">
    </span>
   </button>
  </div>
 </div>
</div>
<!-- end .navbar__group -->
<form action="https://www.fresnostate.edu/search" class="navbar__tiny-search-form collapse" id="searchbox-collapse" method="get">
 <input name="page" type="hidden" value="1"/>
 <input name="applied_filters" type="hidden" value=""/>
 <input name="sort" type="hidden" value="relevance"/>
 <input name="sortdir" type="hidden" value="desc"/>
 <input name="pagesize" type="hidden" value="10"/>
 <input name="col" type="hidden" value="8"/>
 <input name="oe" type="hidden" value="UTF-8"/>
 <div class="input-group">
  <input class="form-control navbar__tiny-search" name="query" placeholder="Search Fresno State" type="text">
   <div class="input-group-btn dropdown">
    <button class="btn btn-default" type="submit">
     Go
    </button>
   </div>
  </input>
 </div>
</form>
<!-- end .container-fluid -->
<div class="collapse navbar__quick-links-collapse" id="quicklinks-collapse">
 <nav class="navbar navbar-collapse no-gutter">
  <div class="col-xs-6 no-gutter">
   <ul class="nav nav-pills nav-stacked no-gutter">
    <li>
     <a href="http://www.fresnostate.edu/academics/blackboard/">
      Blackboard
     </a>
    </li>
    <li>
     <a class="navbar__quick-links-collapse-link" href="http://directory.csufresno.edu/">
      Campus Directory
     </a>
    </li>
    <li>
     <a class="navbar__quick-links-collapse-link" href="http://www.fresnostate.edu/map/">
      Campus Maps
     </a>
    </li>
    <li>
     <a class="navbar__quick-links-collapse-link" href="http://www.fresnostate.edu/catalog/">
      Catalog
     </a>
    </li>
    <li>
     <a class="navbar__quick-links-collapse-link" href="http://www.fresnostate.edu/home/about/commentform.html">
      Comment Form
     </a>
    </li>
   </ul>
  </div>
  <div class="col-xs-6 no-gutter">
   <ul class="nav nav-pills nav-stacked no-gutter">
    <li>
     <a class="navbar__quick-links-collapse-link" href="http://www.fresnostate.edu/events/">
      Events Calendar
     </a>
    </li>
    <li>
     <a class="navbar__quick-links-collapse-link" href="https://email.csufresno.edu/index.php">
      Email
     </a>
    </li>
    <li>
     <a class="navbar__quick-links-collapse-link" href="https://library.fresnostate.edu/">
      Henry Madden Library
     </a>
    </li>
    <li>
     <a class="navbar__quick-links-collapse-link" href="https://my.fresnostate.edu/psp/mfs/EMPLOYEE/EMPL/h/?tab=PAPP_GUEST">
      My Fresno State
     </a>
    </li>
    <li>
     <a href="http://fresnostate.edu/help/">
      Tech Help Center
     </a>
    </li>
   </ul>
  </div>
 </nav>
</div>
<div class="container banner">
 <h1 class="banner__title">
  Password Management
 </h1>
 <h2 class="banner__subtitle">
 </h2>
</div>
<ol class="container breadcrumb">
 <li>
  <a href="https://idm.fresnostate.edu/pwreset">
   Password Management
  </a>
 </li>
 <li>
  Change Password
 </li>
</ol>
<div class="container content">
 <!-- Checking Session ID:     -->
 <!-- Status false for Session id where sessionid is:::  ::: -->
 <!-- Return fValidSessionID object for sessionid  : -->
 <!-- Array
(
    [status] => 1
    [err] => 
)
 -->
 <!-- Creating new session ID. -->
 <!-- SQL to insert new sessionID into pwreset table: insert into pwreset (sessionid,stage) values ('ddee74acb1229f6eaf10271163414d8dd1a65dbf', '1' )  -->
 <!-- POSTED VARS:
Array
(
)
-->
 <!-- sid is:    ddee74acb1229f6eaf10271163414d8dd1a65dbf  -->
 <!-- 
sid is:    ddee74acb1229f6eaf10271163414d8dd1a65dbf
submit is:  :::==:::
Array
(
    [status] => 0
    [err] => 
    [sessionid] => ddee74acb1229f6eaf10271163414d8dd1a65dbf
    [username] => 
    [passwd] => 
    [cmsid] => 
    [cn] => 
    [gn] => 
    [sn] => 
    [sq1] => 
    [sq2] => 
    [sq3] => 
    [source] => 
    [stage] => 1
    [mtime] => 2019-03-09 22:52:11
    [valid_sid] => 1
)

-->
 <!-- Session id before loading page: 
 Array
(
    [status] => 0
    [err] => 
    [sessionid] => ddee74acb1229f6eaf10271163414d8dd1a65dbf
    [username] => 
    [passwd] => 
    [cmsid] => 
    [cn] => 
    [gn] => 
    [sn] => 
    [sq1] => 
    [sq2] => 
    [sq3] => 
    [source] => 
    [stage] => 1
    [mtime] => 2019-03-09 22:52:11
    [valid_sid] => 1
)
-->
 <!-- Retrieved session object before loading page: 
 Array
(
    [status] => 0
    [err] => 
    [sessionid] => ddee74acb1229f6eaf10271163414d8dd1a65dbf
    [username] => 
    [passwd] => 
    [cmsid] => 
    [cn] => 
    [gn] => 
    [sn] => 
    [sq1] => 
    [sq2] => 
    [sq3] => 
    [source] => 
    [stage] => 1
    [mtime] => 2019-03-09 22:52:11
    [valid_sid] => 1
)
-->
 <a id="maintext" name="maintext">
 </a>
 <h1>
  Change Password
 </h1>
 <p>
  The following pages will guide you through the process of changing your password.
 </p>
 <p>
  <strong>
   Before you change your password
  </strong>
  , you must turn off or disable wi-fi on all devices (such as
  <strong>
   laptops
  </strong>
  ,
  <strong>
   tablets
  </strong>
  , and
  <strong>
   cell phones
  </strong>
  ) that are currently using Fresno State wireless internet.
 </p>
 <p>
  Once your password is changed, re-enable each device one at a time and update its settings with the new password.
  <a href="http://fresnostate.edu/help/fac-staff/security/passwordupdate/index.html">
   Visit the Help Desk website for details on updating specific devices
  </a>
  .
 </p>
 <div class="info__tip">
  <p>
   <span class="icon-exclamation-circle info__icon">
   </span>
   <strong>
    Why is this important?
   </strong>
  </p>
  <p>
   Your devices will automatically try to connect with the old password, which can cause your account to be locked.
  </p>
  <p>
   <a href="http://www.fresnostate.edu/help">
    Contact the Technology Services Help Desk for assistance
   </a>
   if your account becomes locked.
  </p>
 </div>
 <!-- <p>Click the below button to confirm you have read the above information and begin changing your password:</p> -->
 <form action="https://idm.fresnostate.edu/pwreset/index.php" class="form form--disable_devices" method="get">
  <input name="devices-confirmed" type="hidden" value="true">
   <button class="button form__button form__button" type="submit">
    <!-- I will update the Wi-Fi passwords of my wireless devices after changing my password -->
    Once you have read the information above, click here to change your password.
   </button>
  </input>
 </form>
 <h2>
  Secret Questions
 </h2>
 <p>
  A separate page exists to help you
  <a href="https://idm.fresnostate.edu/pwreset/../questions">
   manage your Secret Question and Answers
  </a>
  .
 </p>
 <h2>
  Other Passwords
 </h2>
 <ul>
  <li>
   Mobile devices use a separate Google Apps password, which can be changed on the
   <a href="https://googleapps.fresnostate.edu/mobilepassword">
    the Google Apps mobile (POP/IMAP) password management page
   </a>
   .
  </li>
  <li>
   If you need access to your Fresno State hosted web page and are receiving password errors,
   <a href="http://fresnostate.edu/help/">
    contact the Technology Services Help Desk
   </a>
   to change the "shell" account password on the server where your web pages are stored.
  </li>
 </ul>
 <p>
  If you have questions or need further assistance,
  <a href="http://fresnostate.edu/help/">
   contact the Technology Services Help Desk
  </a>
  .
 </p>
</div>
<footer class="container">
 <div class="row footer__row">
  <div class="col-xs-12 col-sm-4 footer_col">
   <ul class="list-unstyled">
    <li>
     <strong>
      Technology Services
     </strong>
    </li>
    <li style="padding-top:5px;">
     2225 E. San Ramon M/S MF93
    </li>
    <li>
     Fresno, CA 93740
    </li>
    <li>
     <strong>
      <abbr title="Phone Number">
       P
      </abbr>
     </strong>
     559.278.3923
    </li>
    <li>
     <strong>
      <abbr title="Fax Number">
       F
      </abbr>
     </strong>
     559.278.4660
    </li>
    <li>
     <a href="//www.fresnostate.edu/copyright">
      © 2019
     </a>
     <a href="mailto:sysadmin@csufresno.edu">
      Email Us
     </a>
    </li>
    <li>
     Last Updated Oct 12, 2016
    </li>
   </ul>
  </div>
  <div class="col-xs-12 col-sm-3 footer_col">
   <ul class="list-unstyled">
    <li>
     <a href="//www.fresnostate.edu/accessibility/" onclick="_gaq.push(['_trackEvent', 'Footer Links', 'Click', 'Accessibility']);" title="Accessibility website link in footer">
      Accessibility
     </a>
    </li>
    <li>
     <a href="//www.fresnostate.edu/commentform/" onclick="_gaq.push(['_trackEvent', 'Footer Links', 'Click', 'Comment Form']);" title="Comment form link in footer to leave feedback or ask questions">
      Comment Form
     </a>
    </li>
    <li>
     <a href="//www.fresnostate.edu/home/about/disclaimer.html" onclick="_gaq.push(['_trackEvent', 'Footer Links', 'Click', 'Disclaimer']);" title="Disclaimer link in footer">
      Disclaimer
     </a>
    </li>
    <li>
     <a href="//www.fresnostate.edu/president/pchre/" onclick="_gaq.push(['_trackEvent', 'Footer Links', 'Click', 'Diversity']);" title="Diversity and inclusion link in footer">
      Diversity and Inclusion
     </a>
    </li>
    <li>
     <a href="//www.fresnostate.edu/adminserv/police/emergency/" onclick="_gaq.push(['_trackEvent', 'Footer Links', 'Click', 'Emergencies']);" title="Emergency link to Police website in footer">
      Emergencies
     </a>
    </li>
    <li>
     <a href="//www.fresnostate.edu/academics/wasc/" onclick="_gaq.push(['_trackEvent', 'Footer Links', 'Click', 'WASC']);" title="WASC Accreditation link in footer">
      WASC Accreditation
     </a>
    </li>
   </ul>
  </div>
  <div class="col-xs-12 col-sm-5 footer_col">
   <a href="https://www.fresnostate.edu/advancement/giving/givenow.html" onclick="_gaq.push(['_trackEvent', 'footer', 'Click', 'give now']);" title="Give Now">
    <img alt="Footer 4 logo" height="54" src="//www.fresnostate.edu/omniresources/images/footer-col4-image.png" width="153"/>
   </a>
  </div>
 </div>
</footer>
<script src="//www.fresnostate.edu/omniresources/tpl/default/js/jquery.min.js">
</script>
<script src="//www.fresnostate.edu/omniresources/tpl/default/js/bootstrap.min.js">
</script>
<script src="https://idm.fresnostate.edu/pwreset/../js/app.min.js?nocache=true">
</script>
<script>
 var label_prefix = 'form__checklist_item--',
        is_debug = true,
        min_length = 9,
        max_length = 32,
        upper_regex = /[A-Z]/,
        lower_regex = /[a-z]/,
        number_regex = /[0-9]/,
        char_regex = /[^A-Za-z0-9\s]/,
        letters_regex = /[A-Za-z]/g,
        non_letters_regex = /[^A-Za-z]/g,
        service_url = "https:\/\/idm.fresnostate.edu\/pwreset\/..\/service\/",
        $pw1 = $('.pw1').first(),
        $pw1_shadow = $('.pw1_shadow')
        $pw2 = $('.pw2').first(),
        $pw2_shadow = $('.pw2_shadow'),
        $show_pw = $('.pw_reset__show_pw').first(),
        $hide_pw = $('.pw_reset__hide_pw').first(),
        $help = $('.form__help_text'),
        common_name = $help.data('cn') + '',
        given_name = $help.data('gn') + '',
        surname = $help.data('sn') + '',
        username = $help.data('username') + '',
        sample_passwords = ["I<3Pizzas","2.BE.or.not.2.BE","G0!Raid3rs!","Horse-Staple-55-Battery-Post","IbJ$5twnh,aIwr!","Iwnftso66.","Tuna432!!cat","bR746a8*t","H1$$2o^@t"];

    var entityMap = {
      "&": "&amp;",
      "<": "&lt;",
      ">": "&gt;",
      '"': '&quot;',
      "'": '&#39;',
      "/": '&#x2F;'
    };

    function escapeHtml(string) {
      return String(string).replace(/[&<>"'\/]/g, function (s) {
        return entityMap[s];
      });
    }

    function setFlag(label) {
        var $label = $('.' + label_prefix + label).first();
        if ($label.length) {
            $label.addClass('isOK');
        }
    }

    function clearFlag(label) {
        var $label = $('.' + label_prefix + label).first();
        if ($label.length) {
            $label.removeClass('isOK');
        }
    }

    function regexCheck(regex, string, check_label) {
        // reset regex index
        regex.lastIndex = 0;
        if (regex.exec(string)) {
            setFlag(check_label);
        } else {
            clearFlag(check_label);
        }
    }

    function showPass(e){
        if (e) {
          e.preventDefault();
        }
        $('.pw_reset__show_pw, .pw1, .pw2').hide().removeClass('isActive');
        $('.pw_reset__hide_pw, .pw1_shadow, .pw2_shadow').show().addClass('isActive');
    }

    function hidePass(e){
        if (e) {
          e.preventDefault();
        }
        $('.pw_reset__hide_pw, .pw1_shadow, .pw2_shadow').hide().removeClass('isActive');
        $('.pw_reset__show_pw, .pw1, .pw2').show().addClass('isActive');
    }

    function debug(message) {
      if (is_debug) {
        console.log(message);
      }
    }

    function setHelpText(message, owner) {
      if (typeof owner === 'undefined') {
        owner = '';
      }

      if ($help.data('owner') === '' || $help.data('owner') === owner) {
        if ('' === message || typeof message === 'undefined') {
          $help.hide();
          owner = '';
        } else {
          $help.show();
        }
        $help.html(message).data('owner', owner);
      }
    }

    function processInputs(e){
        var pw1 = $pw1.val(),
            pw1_shadow = $pw1_shadow.val(),
            pw2 = $pw2.val(),
            pw2_shadow = $pw2_shadow.val(),
            pw_letters = '';

        // sync values between password and text fields
        switch (this.name) {
            case 'pw1':
                pw1_shadow = pw1;
                $pw1_shadow.val(pw1_shadow)
            break;
            case 'pw1_shadow':
                pw1 = pw1_shadow;
                $pw1.val(pw1);
            break;
            case 'pw2':
                pw2_shadow = pw2;
                $pw2_shadow.val(pw2_shadow)
            break;
            case 'pw2_shadow':
                pw2 = pw2_shadow;
                $pw2.val(pw2);
            break;
        }

        debug(this);
        debug('Comparing ' + $pw1.val() + ' to ' + $pw2.val());

        // whitespace check
        if (pw1 !== $.trim(pw1)) {
            $pw1.val($.trim(pw1));
            pw1 = $pw1.val();
            $pw1_shadow.val(pw1);
            pw1_shadow = pw1;
            debug('Whitespace removed from pw1');
        }

        if (pw2 !== $.trim(pw2)) {
          $pw2.val($.trim(pw2));
          pw2 = $pw2.val();
          $pw2_shadow.val(pw2);
          pw2_shadow = pw2;
          debug('Whitespace removed from pw2');
        }

        // length check
        if (pw1.length >= min_length && pw1.length <= max_length) {
            setFlag('count');
        } else {
            clearFlag('count');
        }

        // match check
        if (pw1 === pw2 && pw1 !== '') {
            setFlag('match');
        } else {
            clearFlag('match');
        }

        // sample passwords
        if (sample_passwords.indexOf(pw1) === -1) {
          debug('password passes example test')
          setFlag('example');
          setHelpText('', 'example');
        } else {
          setHelpText('<h4 class="form__help_title">Warning: Sample password detected</h4><p>The accordion below contains a handful of sample passwords. They cannot be used as actual passwords because they would be easily guessible by bad actors.</p><p>You must not use <strong>'+ pw1 +'</strong> as your password.</p>', 'example');
          clearFlag('example');
        }

        // word check
          pw_letters = pw1.match(letters_regex);
          if (pw_letters && pw_letters.length > 3) {
            debug('Checking the password for words');
            // this relies on AJAX and happens asynchonously
            checkStringForWord(pw1);
          } else if (0 === pw1.length){
            debug('Clearing word flag because no text is entered');
            clearFlag('word');
            setHelpText('', 'word');
          } else if (pw1.length) {
            debug('Setting word flag because text is entered, and there are not enough letters for a word');
            setFlag('word');
            setHelpText('', 'word');
          }

        // username check
        if ($.trim(username) !== '' && -1 !== pw1.toLowerCase().indexOf(username.toLowerCase())) {
          clearFlag('username');
          setHelpText('<h4 class="form__help_title">Warning: User ID detected</h4><p>Your password cannot contain your user ID (the part of your email address before the @ sign):</p><p><strong>'+username+'</strong></p><p>Your first and last names (<strong>'+given_name+' '+surname+'</strong>) are also not allowed. This helps defend your password against dictionary attacks.</p>', 'username');
        } else {
          setFlag('username');
          setHelpText('', 'username');
        }

        // username-backwards check
        if ($.trim(username) !== '' && -1 !== pw1.toLowerCase().indexOf(username.toLowerCase().split('').reverse().join(''))) {
          clearFlag('username-backwards');
          setHelpText('<h4 class="form__help_title">Warning: Backwards user ID detected</h4><p>Your password cannot contain your user ID (the part of your email address before the @ sign) printed forwards <strong>or backwards</strong>:</p><p><strong>'+username.toLowerCase().split('').reverse().join('')+'</strong> &nbsp; &#8594; &nbsp; <strong>'+username.toLowerCase()+'</strong></p><p>Your first and last names (<strong>'+given_name+' '+surname+'</strong>) are also not allowed. This helps defend your password against dictionary attacks.</p>', 'username-backwards');
        } else {
          setFlag('username-backwards');
          setHelpText('', 'username-backwards');
        }

        // surname check
        if ($.trim(surname) !== '' && -1 !== pw1.toLowerCase().indexOf(surname.toLowerCase())) {
          clearFlag('surname');
          setHelpText('<h4 class="form__help_title">Warning: Last name detected</h4><p>Your password cannot contain your last name:</p><p><strong>'+surname+'</strong></p><p>Your first name (<strong>'+given_name+'</strong>) and your username (<strong>'+username+'</strong>) are also not allowed. This helps defend your password against dictionary attacks.</p>', 'surname');
        } else {
          setFlag('surname');
          setHelpText('', 'surname');
        }

        // given_name check
        if ($.trim(given_name) !== '' && -1 !== pw1.toLowerCase().indexOf(given_name.toLowerCase())) {
          clearFlag('given_name');
          setHelpText('<h4 class="form__help_title">Warning: First name detected</h4><p>Your password cannot contain your first name:</p><p><strong>'+given_name+'</strong></p><p>Your last name (<strong>'+surname+'</strong>) and your username (<strong>'+username+'</strong>) are also not allowed. This helps defend your password against dictionary attacks.</p>', 'given_name');
        } else {
          setFlag('given_name');
          setHelpText('', 'given_name');
        }

        // uppercase check
        regexCheck(upper_regex, pw1, 'upper');

        // lowercase check
        regexCheck(lower_regex, pw1, 'lower');

        // number check
        regexCheck(number_regex, pw1, 'number');

        // special char
        regexCheck(char_regex, pw1, 'symbol');



        // show or hide the show password button
        if (pw1.length > 0 || pw2.length > 0) {
          if ($pw1.css('display') !== 'none') {
            $show_pw.show();
          } else {
            $hide_pw.show();
          }
        } else {
          $hide_pw.hide().removeClass('isActive');
          $show_pw.hide().removeClass('isActive');
        }

        checkSubmitButton();
    }

    function checkSubmitButton(){
      var checks = $('.form__checklist_item'),
        passed_checks = $('.form__checklist_item.isOK'),
        some_checks_fail = (checks.length !== passed_checks.length);
        debug('submit state:' + checks.length + ' compared to ' + passed_checks.length);
        debug(some_checks_fail);
      setSubmitButtonState(some_checks_fail);
    }

    function setSubmitButtonState(disable) {
      $('.pw_reset__submit').prop('disabled', disable);
    }

    function closeAllInfoBlocks($except_block) {
      var $blocks = $('.info__block.isActive');
      $blocks.each(function(){
        var $this = $(this);
        if (!$this.is($except_block)) {
          debug('open block found that does not match the except block; closing it!')
          $this.children('.info__content').slideUp(200);
          $this.removeClass('isActive')
        }
      });
    }

    function toggleInfo(e) {
      if (e) {
        e.preventDefault();
      }
      var $block = $(this).closest('.info__block'),
          $content = $block.children('.info__content');

      if($block.hasClass('isActive')) {
        debug('closing block')
        $block.removeClass('isActive');
        $content.slideUp(200);
        closeAllInfoBlocks($block);
      } else {
        debug('opening block')
        $block.addClass('isActive');
        $content.slideDown(200);
        closeAllInfoBlocks($block);
        dynamicScroll($block);
      }
    }

    function processWordCheck(is_word, tested_password, word) {
      var $pw1 = $('.pw1').first(),
        pw1 = $pw1.val();
      if (tested_password === pw1){
        if (true === is_word) {
          debug('A word was found; removing flag, adding help text, and ensuring the submit button is disabled');
          clearFlag('word');
          setHelpText('<h4 class="form__help_title">Warning: Dictionary word detected</h4><p>A dictionary word was found in your password:</p><p><span class="form__help_revealed_password">'+generateRevealedPassword(pw1, true)+'</span><button data-word="'+escapeHtml(word)+'" class="form__help_hidden_word button">show dictionary word</button></p><p>Single dictionary words are not allowed (but multi-word phrases are OK). The way words are detected can be confusing &mdash; <a class="form__help_link form__help_link--inline" href="#word">click here for a complete explanation</a>.</p>', 'word');
          // disable submit button
          setSubmitButtonState(true);
        } else {
          debug('No words were found; adding flag and removing help text; running submit button check');
          setFlag('word');
          setHelpText('', 'word');
          checkSubmitButton();
        }
      } else {
        debug('tested "' + tested_password + '"; current pw is "' + pw1 + '"');
      }
    }

    function processWordCheckFailure(){
      debug('word check failed?');
    }

    function generateRevealedPassword(string, hide, is_complex) {
      var placeholder_class = 'form__help_revealed_placeholder',
        letter_class = 'form__help_revealed_letter',
        item_class,
        regex_result,
        reveal;
      reveal = string.replace(/./g, function(match){
        var result;
        // reset regex & check to see if we're dealing with a letter
        letters_regex.lastIndex = 0;
        regex_result = letters_regex.exec(match);
        switch(true) {
          case hide === true && regex_result !== null:
            // show letter placeholder
            result = '<span class="'+placeholder_class+' '+letter_class+'">&#9724;</span>';
          break;

          case hide === true && regex_result === null:
            // show non-letter placeholder
            result = '<span class="'+placeholder_class+'">&#9724;</span>';
          break;

          case hide !== true && regex_result !== null:
          // show letter
            result = '<span class="'+letter_class+'">'+match+'</span>';
          break;

          case hide !== true && regex_result === null:
            // show non-letter placeholder
            result = '<span class="'+placeholder_class+'">&#9724;</span>';
          break;
          default:
            debug('got to here?');
            debug((!hide && !regex_result));
        }
        debug(result);
        return result;
      });

      if (!hide && is_complex) {

        reveal = reveal + ' <span class="form__help_revealed_symbol">&#8594;</span> <span class="form__help_revealed_word">' + string.replace(non_letters_regex, '').toLowerCase() + '</span>';
        debug('performing complex reveal!');
      }
      return reveal;
    }

    $('.form__help').on('click', '.form__help_hidden_word', function(e){
      e.preventDefault();
      var word = $(this).data('word').toLowerCase(),
        password = $pw1.val(),
        lower_password = password.toLowerCase(),
        $reveal = $('.form__help_revealed_password').first(),
        revealed,
        is_complex;
        // reset the regex
        letters_regex.lastIndex = 0;
        if (letters_regex.exec($reveal.text())) {
          // hide everything
          revealed = generateRevealedPassword(password, true);
          $reveal.html(revealed);
          $(this).html('show dictionary word');
        } else {
          // reveal letters
          is_complex = (word !== password);
          revealed = generateRevealedPassword(password, false, is_complex);
          debug('reveal is complex: ' + is_complex);
          debug(word);
          $reveal.html(revealed);
          $(this).html('hide dictionary word');
        }
    });

    function dynamicScroll($el, animation_length) {
      if (typeof animation_length === 'undefined') {
        animation_length = 500;
      }
      var target_position = $el.offset().top,
        progressFunction = function(animation, progress, remainingMS) {
          if (target_position !== $el.offset().top) {
            target_position = $el.offset().top;
            debug('Target has moved! resetting to ' + target_position + ' in ' + remainingMS + 'MS');
            $(this).stop().animate({scrollTop: target_position}, {
              duration: remainingMS,
              progress: progressFunction
            });
          }
        };
      $('html,body').animate({
            scrollTop: target_position,
          }, {
            duration: animation_length,
            progress: progressFunction,
      });
    }

    function checkStringForWord(check_string) {
      $.ajax(service_url, {
        data: {
          'action': 'wordCheck',
          'string': check_string
        },
        method: 'POST',
      }).then(function(data){
        if ('submitted_string_is_word' in data && 'submitted_string' in data && 'tested_string' in data) {
          debug('Proper response received from word check service; processing...');
          processWordCheck(data.submitted_string_is_word, data.submitted_string, data.tested_string)
        } else {
          processWordCheckFailure();
        }
        debug('Word check service response:');
        debug(data);
      });
    }

    $('.pw_reset__hide_pw').on('click', hidePass);
    $('.pw_reset__show_pw').on('click', showPass);
    $('.pw_reset__text-input').on('input propertychange', processInputs);
    $('.info__title').on('click', toggleInfo);

    $('.form__help').on('click', '.form__help_link', function(e){
      e.preventDefault();
      var id = $(this).attr('href'),
          $block = $(id).closest('.info__block'),
          $content = $block.children('.info__content').first();
      $content.slideDown(200);
      $block.addClass('isActive');
      closeAllInfoBlocks($block, 0);
      dynamicScroll($block);
    });

    $('.info__top_link a').on('click', function(e){
      e.preventDefault();
      var id = $(this).attr('href'),
        $block = $(id).first();
        dynamicScroll($block);
    });
</script>

