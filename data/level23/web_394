https://giving.uta.edu
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html id="HTML" lang="en-us" xmlns="http://www.w3.org/1999/xhtml">
 <head id="PageHead">
  <title>
   Giving Home Page - The University of Texas at Arlington
  </title>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <meta content="http://schemas.microsoft.com/intellisense/ie5" name="vs_targetSchema"/>
  <link href="/stylesheet43.636229719570700000.css?id=43&amp;nodefaults=1&amp;iuqt=1" rel="stylesheet" type="text/css"/>
  <link href="/stylesheet42.636231572293530000.css?id=42&amp;nodefaults=1&amp;iuqt=1" rel="stylesheet" type="text/css"/>
  <link href="/stylesheet0.636211341268530000.css?id=0&amp;iuqt=1" rel="stylesheet" type="text/css"/>
  <link href="/stylesheet49.636837854562830000.css?id=49&amp;nodefaults=1&amp;iuqt=1" rel="stylesheet" type="text/css"/>
  <link href="/Client/Styles/IE8Menu.css?&amp;iuqt=1" rel="stylesheet" type="text/css"/>
  <link href="view.image?id=2077" rel="SHORTCUT ICON" type="image/x-icon"/>
  <link href="view.image?id=2077" rel="ICON" type="image/x-icon"/>
  <meta content="width=device-width; initial-scale=1.0; maximum-scale=1.0; user-scalable=0;" name="viewport"/>
  <base id="baseId" target="_self"/>
  <meta content="11/18/2015 8:04:19 PM" name="last-modified"/>
 </head>
 <body id="BodyId" style="margin: 0px; padding: 0px; border: 0px">
  <form action="/" id="form1" method="post" onsubmit="javascript:return WebForm_OnSubmit();">
   <div class="aspNetHidden">
    <input id="ScriptManager1_HiddenField" name="ScriptManager1_HiddenField" type="hidden" value=""/>
    <input id="__EVENTTARGET" name="__EVENTTARGET" type="hidden" value=""/>
    <input id="__EVENTARGUMENT" name="__EVENTARGUMENT" type="hidden" value=""/>
    <input id="__VIEWSTATE" name="__VIEWSTATE" type="hidden" value="OErm3KVEA9NMKCgt2q1UBT2KKjXYTeV7C1AzcTzIafDCG7M/PfGBcg37qi0NGFCAEDsRcd+QVSSgxGXkgSxPwdSQmH1NfS/S9K/5JOaQN+dgyYHKO/UUv00/Y2wT+Pb+PsgB7pOIOBsn4oz+fXdlop3dPZdYW6yOEdFkK3/W/Ug03gsnT2aVnSE5T6wrHkkIW+qw9qPkDr/ZHOxHoxjz+quJKUayIdyT660kGtSrws/ihoMKIyudQ8SiNedL15vhyWEF9c3LlME0sjWfzCyM6KN4Ys6HRRsKY+hJGBbUeVFMw9J7rSHzkzcX1M3vwNbzWqFTfKHRXUDQ/wghQqS2X2EJreLAv+z3ZMpGMJhu4ZlKwsJw8om0MiRTHS2S9bJMQrDXV5YGNPP2cj9Mm9lanh9J8mOq5JrmULO4A3aq9wJHjcf2hWoC8jw50kw00uQtSAiQcAGSSVierq6hIonEYYk83sWs/DGHTek1nsQlX81UeIZfIY1WB7fbZpRrt/g1Ods57qLfBbcHDR9wXy7RbNAzKVcrdHV8Qb98cMXWMWjccgxJAWz8D6jueTk9kbECa57XWQqwoRsSuRTebN38OVGBWuKtU9JQSIxLBxutuTCyLBE2YgBfYT0E9EmIJScwvJgsuDAdUO7aGE+EkC05a5KdChHANT8WR3sQsdgfmTNXfgGlbQq8WhrG0bXCL6y4qim0nwKQugtoQLNy0GYGE5jz89CKRqlyRNIHMuBFzJY7UlA0VntplLwmpId6lbdozF+usGiGTUDHKlgF25gaK6GA3NdEBPO0DaSr6MmwFIDpjsuBztxRP0BUuDjJt+ipIW6u6eFeJjbSJ6WCGjLNcLkltl1cxlM5WIyd0o4OH4X1yaIDKaeCOC7u8kcNsP+C6xD9pUxSq4m/7WPQ8hZDiEHDG0LwECARGvPoSaqky5b/ghZnBIQNoNZOVOQU6PrPz/omawXBl9CsDdfFENImlhv9+IPabqsYwB9687iYQ43REi+Gpdt5j5GoHd2mE8/JynPY3w=="/>
   </div>
   <script type="text/javascript">
    //<![CDATA[
var theForm = document.forms['form1'];
if (!theForm) {
    theForm = document.form1;
}
function __doPostBack(eventTarget, eventArgument) {
    if (!theForm.onsubmit || (theForm.onsubmit() != false)) {
        theForm.__EVENTTARGET.value = eventTarget;
        theForm.__EVENTARGUMENT.value = eventArgument;
        theForm.submit();
    }
}
//]]>
   </script>
   <script src="/WebResource.axd?d=xRq5NMjT-e9F93GGgnF584bd7eKA1eRH3r9zTaJQB4sqdSYeEhHX3iHsWAW8RMKlUhMCKFNBcJIqNLQ5WvRkfky7DOY1&amp;t=636765251060000000" type="text/javascript">
   </script>
   <script src="/Client/Scripts/API/BBAPI-min.js" type="text/javascript">
   </script>
   <script src="/Client/Scripts/Bbnccore-min.js" type="text/javascript">
   </script>
   <script type="text/javascript">
    //<![CDATA[
var LOGGEDIN = "";//]]>
   </script>
   <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js" type="text/javascript">
   </script>
   <script src="/Client/Scripts/jquery/jquery-migrate-1.3.0.js" type="text/javascript">
   </script>
   <script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js" type="text/javascript">
   </script>
   <script type="text/javascript">
    //<![CDATA[
BLACKBAUD.netcommunity.jQuery.setVersionReference();//]]>
   </script>
   <script src="/Client/Scripts/jquery/jquery.validate.js" type="text/javascript">
   </script>
   <script src="/Client/Scripts/jquery/additional-methods.js" type="text/javascript">
   </script>
   <script src="/Client/Scripts/jquery/jquery.maskedinput-1.1.4.js" type="text/javascript">
   </script>
   <script type="text/javascript">
    //<![CDATA[
ROOT_PATH = 'https://giving.uta.edu/'; BLACKBAUD.api.pageInformation.rootPath = 'https://giving.uta.edu/';BLACKBAUD.netcommunity.WebMethodsURL = 'https://giving.uta.edu/webservices/webmethods.asmx';BLACKBAUD.netcommunity.images = BLACKBAUD.netcommunity.images || {}; BLACKBAUD.netcommunity.images.imageUrlPrefix = 'https://giving.uta.edu/view.image?id=';modallvl = 0; ;var isIE = (window.ActiveXObject || "ActiveXObject" in window);;var DebugMode = false; ;var isAdminPage = false;;BLACKBAUD.netcommunity.bbAppFxRoot = '';;BLACKBAUD.netcommunity.bbAppFxDB = '1f312de5-5086-4b3b-848a-a37d0f93e075';;BLACKBAUD.netcommunity.PageID = 373; BLACKBAUD.api.pageInformation.pageId = 373;;//]]>
   </script>
   <script src="/ScriptResource.axd?d=zR1Bwjf_hN0XyxhjcMNJ_amo-aW6gPkAW-FO8FXkP44331bWFzCF8SqvsHp7lWrKiHOC-3ToMCKGCoFegxEZwKtH44HXMIGXBzMWmIZoXa-dFHzW0&amp;t=ffffffffec54f2d7" type="text/javascript">
   </script>
   <script src="/ScriptResource.axd?d=y_l8TKjSet61Kk44Z9fkEmFr6ikIqWHfCu5zOBhryvH1QIoeypGoBPCkdLLMumlAWTFxZXR0saE-3K_tvXRgYhqUaZxRBjRXXW3x25StuCEbi4v1RvGjwN7_kPrBkqPqZzS9Rw2&amp;t=ffffffffec54f2d7" type="text/javascript">
   </script>
   <script src="/Client/Scripts/webkit.js" type="text/javascript">
   </script>
   <script type="text/javascript">
    //<![CDATA[
function WebForm_OnSubmit() {
BLACKBAUD.netcommunity.setBrowserDateTimeForServer('hidBrowserDateTime');
return true;
}
//]]>
   </script>
   <div class="aspNetHidden">
    <input id="__VIEWSTATEGENERATOR" name="__VIEWSTATEGENERATOR" type="hidden" value="8CAEDFE0"/>
    <input id="__VIEWSTATEENCRYPTED" name="__VIEWSTATEENCRYPTED" type="hidden" value=""/>
   </div>
   <script type="text/javascript">
    //<![CDATA[
Sys.WebForms.PageRequestManager._initialize('ScriptManager1', 'form1', [], [], [], 90, '');
//]]>
   </script>
   <div class="container" id="home">
    <div id="wrapPage">
     <div class="gutter clearfix">
      <div id="wrapHeader">
       <div class="gutter clearfix">
        <div id="wrapHeaderTop">
         <div class="gutter clearfix">
          <div id="wrapUtility">
           <div class="gutter clearfix">
            <!--START MENU-->
            <ul class="menu utilityMenu">
             <li class=" menuItem1 first givenow">
              <a href="https://giving.uta.edu/Give">
               Give Now
              </a>
             </li>
             <li class="menuItem2 last address">
              <a href="https://www.uta.edu/php-lib/machform/view.php?id=1120" target="/">
               Update Your Address
              </a>
             </li>
            </ul>
            <!--END MENU-->
           </div>
          </div>
          <div id="wrapSearch">
           <div class="gutter clearfix">
            <!--START MENU-->
            <ul class="menu utilityMenu">
             <li class="menuItem1 first last">
              <a href="https://giving.uta.edu/login">
               Login
              </a>
             </li>
            </ul>
            <!--END MENU-->
            <!--Start QuickSearch-->
            <table border="0" class="QuickSearchFormTable" id="PC1901_tableMainAdd">
             <tr>
              <td>
               <label class="BBFieldCaption QuickSearchFieldCaption" for="PC1901_txtQuickSearch" id="PC1901_lblTxtSearch">
                Search:
               </label>
              </td>
              <td>
               <input class="QuickSearchTextbox" id="PC1901_txtQuickSearch" maxlength="255" name="PC1901$txtQuickSearch" onkeydown="javascript:if (isEnterPressed(event)) {try{document.getElementById('PC1901_btnQuickSearch').click();return false;} catch(e) {}} else return true;" type="text"/>
              </td>
              <td>
               <label for="PC1901_btnQuickSearch" id="PC1901_lblQuickSearch" style="display: none; visibility: hidden;">
                Search
               </label>
               <input class="BBFormSubmitButton QuickSearchButton" id="PC1901_btnQuickSearch" name="PC1901$btnQuickSearch" type="submit" value=" "/>
              </td>
             </tr>
            </table>
            <!--End QuickSearch-->
            <div style="text-align: right;">
             <span style="font-size: 8pt;">
              <span>
              </span>
              <span>
              </span>
             </span>
            </div>
           </div>
          </div>
         </div>
        </div>
        <div id="wrapHeaderBottom">
         <div class="gutter clearfix">
          <div id="wrapLogo">
           <div class="gutter clearfix">
            <p>
             <a href="http://www.uta.edu/uta/" target="//blank">
              <p>
               <img alt="" height="82" src="https://giving.uta.edu/image/template/UTA-logo-giving.png" width="555"/>
              </p>
             </a>
            </p>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
      <div id="wrapNav">
       <div class="gutter clearfix">
        <!--START MENU-->
        <ul class="menu mainMenu givingMenu">
         <li class=" menuItem1 selected first parent">
          <a class="selected" href="https://giving.uta.edu/Home">
           Home
          </a>
         </li>
         <li class=" menuItem2 parent">
          <a href="https://giving.uta.edu/support-uta">
           Giving
          </a>
          <ul class="nccUlMenuSub1">
           <li class=" menuItem1 first">
            <a href="https://giving.uta.edu/Give">
             Give Now
            </a>
           </li>
           <li class=" menuItem2">
            <a href="https://giving.uta.edu/WaysToGive">
             Ways To Give
            </a>
           </li>
           <li class=" menuItem3 parent">
            <a href="https://giving.uta.edu/AnnualGiving">
             Annual Giving
            </a>
            <ul class="nccUlMenuSub2">
             <li class=" menuItem1 first">
              <a href="https://giving.uta.edu/AnnualGiving/StudentSuccess">
               Student Success
              </a>
             </li>
             <li class="menuItem2 last">
              <a href="https://giving.uta.edu/AnnualGiving/FAQ">
               Frequently Asked Questions
              </a>
             </li>
            </ul>
           </li>
           <li class=" menuItem4 parent">
            <a href="https://giving.uta.edu/cfr">
             Corporate and Foundation Relations
            </a>
            <ul class="nccUlMenuSub2">
             <li class=" menuItem1 first">
              <a href="https://giving.uta.edu/giving/Corporate_Foundation/Contact_Information" title="Corporate Foundation Staff">
               Contact Information
              </a>
             </li>
             <li class=" menuItem2">
              <a href="https://giving.uta.edu/giving/Corporate_Foundation/Campus_Visits" title="Corporate Foundation Campus Visit">
               Campus Visits
              </a>
             </li>
             <li class="menuItem3 last">
              <a href="https://giving.uta.edu/giving/Corporate_Foundation/Faculty_Administrators">
               Faculty and Administrators
              </a>
             </li>
            </ul>
           </li>
           <li class=" menuItem5">
            <a href="http://uta.giftlegacy.com/" target="//blank">
             Gift and Estate Planning
            </a>
           </li>
           <li class=" menuItem6">
            <a href="https://giving.uta.edu/gifts-in-kind">
             Gifts-in-Kind
            </a>
           </li>
           <li class=" menuItem7">
            <a href="https://giving.uta.edu/Endowment">
             Creating an Endowment
            </a>
           </li>
           <li class="menuItem8 last">
            <a href="https://giving.uta.edu/Brick">
             College Park Brick Campaign
            </a>
           </li>
          </ul>
         </li>
         <li class=" menuItem3 parent">
          <a href="http://www.uta.edu/strategicplan/index.php" target="//blank">
           Priority Initiatives
          </a>
          <ul class="nccUlMenuSub1">
           <li class=" menuItem1 first">
            <a href="http://www.uta.edu/strategicplan/plan/themes/health.php" target="_blank">
             Health and the Human Condition
            </a>
           </li>
           <li class=" menuItem2">
            <a href="http://www.uta.edu/strategicplan/themes/communities.php" target="_blank">
             Sustainable Urban Communities
            </a>
           </li>
           <li class=" menuItem3">
            <a href="http://www.uta.edu/strategicplan/plan/themes/impact.php" target="_blank">
             Global Environmental Impact
            </a>
           </li>
           <li class="menuItem4 last">
            <a href="http://www.uta.edu/strategicplan/plan/themes/data.php" target="_blank">
             Data-Driven Discovery
            </a>
           </li>
          </ul>
         </li>
         <li class=" menuItem4 parent">
          <a href="https://giving.uta.edu/supporters">
           Meet Mav Supporters
          </a>
          <ul class="nccUlMenuSub1">
           <li class=" menuItem1 first">
            <a href="https://giving.uta.edu/donor-stories">
             Donor Stories
            </a>
           </li>
           <li class=" menuItem2">
            <a href="https://giving.uta.edu/DonorEvent">
             Donor Event Photos
            </a>
           </li>
           <li class=" menuItem3">
            <a href="https://giving.uta.edu/1895Society">
             1895 Society
            </a>
           </li>
           <li class=" menuItem4">
            <a href="https://giving.uta.edu/RankinSociety">
             Edward E. Rankin Legacy Society
            </a>
           </li>
           <li class=" menuItem5">
            <a href="https://giving.uta.edu/NeddermanSociety">
             Nedderman Society
            </a>
           </li>
           <li class="menuItem6 last">
            <a href="https://giving.uta.edu/CarlisleSociety">
             Carlisle Society
            </a>
           </li>
          </ul>
         </li>
         <li class=" menuItem5 parent">
          <a href="https://alumni.uta.edu/AlumniHome">
           Alumni
          </a>
          <ul class="nccUlMenuSub1">
           <li class=" menuItem1 first">
            <a href="https://alumni.uta.edu/alumni/events/home">
             Alumni Events
            </a>
           </li>
           <li class="menuItem2 last">
            <a href="https://alumni.uta.edu/contact">
             Contact Us
            </a>
           </li>
          </ul>
         </li>
         <li class=" menuItem6 parent">
          <a href="https://giving.uta.edu/newsfeed">
           News
          </a>
          <ul class="nccUlMenuSub1">
           <li class="menuItem1 first last">
            <a href="https://giving.uta.edu/newsfeed">
             UTA News Feed
            </a>
           </li>
          </ul>
         </li>
         <li class="menuItem7 last parent">
          <a href="https://giving.uta.edu/giving/development-leadership">
           Development Leadership
          </a>
          <ul class="nccUlMenuSub1">
           <li class="menuItem1 first last">
            <a href="https://giving.uta.edu/Staff">
             Development Staff
            </a>
           </li>
          </ul>
         </li>
        </ul>
        <!--END MENU-->
       </div>
      </div>
      <div id="wrapMedia">
       <div class="gutter clearfix">
        <div id="PC3250_Content">
         <!--
/**********************************************
Display Simple Slider Slideshow 1.4.5
***********************************************
Author(s): Harrison DeStefano
Developer: Harrison DeStefano
Contributors: J. Schultz 
Updated: Harrison DeStefano
Created: October 22, 2013
Updated: May 30, 2014
***********************************************
CHANGE LOG
***********************************************
11/15/2013  v1.4.1
- updated clone technique so height is no longer requred
- updated styles to reflect above change
- removed unused variables and commented out code
- hoisted some variables to avoid declaring twice
1/12/2014 v1.4.2
- added new animation for fading slides
- add css for new fade effects
- removed need variable from animateSlides() as it is no longer in use
- remove bindSwipeEvents() from animateSlides as it is no longer in use
- added pagination() Fn to clean up code
- added missing callback functions for AfterSlideTransition and BeforeSlideTransition
- added function to prevent doubble click when transitions are in progress
1/12/2014 v1.4.3
- Support for wraping slide image in anchor
02/14/2014  v1.4.4
- added pagination function which combines all class changes in one function
- corrects bug that did not properly loop pagination when last element active
- fixed bindSwipeEvents() return false for anchors
05/09/2014
- remove old code that is not used
05/30/2014 v1.4.5
- updated swipe to support tap
- updated swipe to support vertical scroll
**********************************************/
-->
         <style>
          #simpleSlider .gutter, #simpleSlider ul, #simpleSlider ul li, #simpleSlider img {
		border: 0 none;
		list-style: none outside none;
		margin: 0;
		outline: 0 none;
		padding: 0;
	}
	#simpleSlider {
		display: block;
		overflow: hidden;
		position: relative;
		width: 100%;
	}
	#simpleSlider #slides {
		overflow: hidden;
		height: 63%;
	}
	#simpleSlider #simpleSliderMask{
		position: absolute;
		z-index: 4;
	}
	#simpleSlider .cantSee{
		visibility: hidden;
	}
	#simpleSlider .slideGutter {
		left: 0;
		position: relative;
	}
	#simpleSlider .slide {
		float: left;
	}
	#simpleSlider .slide > .gutter {
		position: relative;
		width: 100%;
	}
	#simpleSlider .slide .image img {
		max-width: 100%;
	}
	#simpleSlider .slide .caption {
		position: absolute;
		z-index: 2;
		bottom: 10%;
		left: 5%;
	}
	#simpleSlider .slide .title {
		position: absolute;
		z-index: 3;
		bottom: 35%;
		left: 5%;
	}
	#simpleSlider #navigation {
		bottom: 0;
		position: absolute;
	}
	#simpleSlider #navigation > * {
		float: left;
	}
	#simpleSlider #pagination {
		bottom: 0;
		position: absolute;
		right: 0;
	}
	#simpleSlider #pagination ul li {
		display: inline;
	}
         </style>
         <script type="text/JavaScript">
          function createSimpleSlider(args) {
    // Load all data from settings
    $(document).ready(function() {
        var settings = args.settings;
        var slides = args.settings.slidesObj;
        var transitionTime = args.settings.transitionTime;
        var transitionType = args.settings.transitionType;
        var transitionEffect = args.settings.transitionEffect;

        var domStructure = args.settings.domStructure;
        var navPrevTxt = args.settings.navPrevTxt;
        var navNextTxt = args.settings.navNextTxt;
        var responsive = args.settings.responsive;
        var autoAdvanceSlides = args.settings.autoAdvanceSlides;
        var autoAdvanceDelay = args.settings.autoAdvanceDelay;
        // unused: var autoAdvanceReset = args.settings.autoAdvanceReset;
        var slideshowConatiner = $('#' + args.elementId);
        var simpleSlider = '#' + args.elementId + ' #simpleSlider';
        var partNumber = args.elementId.split('_')[0];
		var callbackBuildComplete = args.settings.callbackBuildComplete;
	    var callbackBeforeSlideTransition = args.settings.callbackBeforeSlideTransition;
	    var callbackAfterSlideTransition = args.settings.callbackAfterSlideTransition;
		
        // Do math and reset time in objects
        // Need to reset the data in object to milliseconds
        autoAdvanceDelay = parseInt(autoAdvanceDelay) * 1000;

        // Build
        function domBuilder() {
            // Vars
            var slideshowHTML = '';
            var counter = 1;
            // Build the dom structure
            if (domStructure === 'strict') {
                slideshowHTML = '<div id=simpleSlider><div id="slides"><div class="slideGutter"></div></div><div id="navigation"><div class="prev navigation"><a class="' + partNumber + '_prev" href="#">' + navPrevTxt + '</a></div><div class="next navigation"><a class="' + partNumber + '_next" href="#">' + navNextTxt + '</a></div></div><div id="pagination"><ul id="' + partNumber + '_pagination" class="pagination"></ul></div></div>';
            } else if (domStructure === 'loose') {
                slideshowHTML = '<div id=simpleSlider><div class="prev navigation"><a class="' + partNumber + '_prev" href="#">' + navPrevTxt + '</a></div><div class="next navigation"><a class="' + partNumber + '_next" href="#">' + navNextTxt + '</a></div><ul id="' + partNumber + '_pagination" class="pagination"></ul><div id="slides"><div class="slideGutter"></div></div></div>';
            } else {
                slideshowHTML = '<div id=simpleSlider><div id="slides"><div class="slideGutter"></div></div><div id="navigation"><div class="prev navigation"><a class="' + partNumber + '_next" href="#">' + navPrevTxt + '</a></div><div class="next navigation"><a class="' + partNumber + '_next" href="#">' + navNextTxt + '</a></div></div><div id="pagination"><ul id="' + partNumber + '_pagination" class="pagination"></ul></div></div>';
            }
            // Append a parent container to hold the slides
            slideshowConatiner.append(slideshowHTML);
            // Loop object literal
            $.each(slides, function() {
                // DOM elements
                var slideHTML = '';
                var imageHTML = '';
                var titleHTML = '';
                var captionHTML = '';
                var paginationHTML = '';
                var wrapAnchorURL = '';
                // Loop inner object literal
                $.each(this, function(key, value) {

                	if(key == 'wrapAnchorURL'){
                		wrapAnchorURL = value;
                	}

                    // Loop array and build DOM elements for img, caption and title
                    if (key == 'src') {
                    	//imageHTML = '<div class="image"><a href="'+[i].+'"><img src="' + value + '"></a></div>';
                        imageHTML = '<div class="image"><img src="' + value + '"></div>';
                    } else if (key == 'title') {
                        titleHTML = '<div class="' + key + '">' + value + '</div>';
                    } else if (key == 'caption') {
                        captionHTML = '<div class="' + key + '">' + value + '</div>';
                    }
                    // Set first slide to active
                    if (counter == 1) {
                        slideHTML = '<div id="slide' + counter + '" class="slide active first"><div class="gutter">' + imageHTML + titleHTML + captionHTML + '</div></div>';
                        paginationHTML = '<li><a href="#" class="active first">' + counter + '</a></li>';
                    } else if (counter === slides.length) {
                        slideHTML = '<div id="slide' + counter + '" class="slide last"><div class="gutter">' + imageHTML + titleHTML + captionHTML + '</div></div>';
                        paginationHTML = '<li><a href="#" class="last">' + counter + '</a></li>';
                    } else {
                        slideHTML = '<div id="slide' + counter + '" class="slide"><div class="gutter">' + imageHTML + titleHTML + captionHTML + '</div></div>';
                        paginationHTML = '<li><a href="#">' + counter + '</a></li>';
                    }
                });
                // Add the object literal contnets to the DOM
                $(simpleSlider + ' .slideGutter').append(slideHTML);
                $(simpleSlider + ' ul.pagination').append(paginationHTML);
                // Wrap slide in anchor
                if(wrapAnchorURL != ''){
	            	$(simpleSlider + ' #slide'+counter+' .image img').wrap('<a href="'+wrapAnchorURL+'"></a>');

                }
                // Update the counter
                counter = counter + 1;
            });
            //new clone loop tecnique
            if (transitionType == 'loop') {
                $(simpleSlider + ' .slideGutter').append($(simpleSlider + ' .slide.first').clone().removeClass('first').attr('id', 'clone'));
            }
        }

        // Set width and height the first time our plugin runs
        function resizeElements() {
            var slideTotal = $(simpleSlider + ' .slide').length;
            var slideTotalWidth = (slideTotal * 100) + '%';
            var orginalWidth = (100 / slideTotal) + '%';
            // Set the img and image containter width
            $(simpleSlider + ' .image img').each(function() {
                // Run check for IE 8 <, hasLayout needs width set inline
                if (navigator.userAgent.match('MSIE 8.0') || navigator.userAgent.match('MSIE 7.0')) {
                    //alert(navigator.userAgent);
                    //$(this).attr('style="width:"'+orginalWidth+'"');
                } else {
                    //$(this).width(orginalWidth); // setting the img width necessary to avoid margin bewteen images
                }
                $(this).closest('.slide').width(orginalWidth);
            });
            // Reset orginal width
            orginalWidth = $(simpleSlider).width();
            
            // Set the slideGutter width
            $(simpleSlider + ' .slideGutter').css('width', slideTotalWidth);
        }// end resizeElements

        // Actions based on user input
        function inputActions(element) {
            // Vars -- setting them later in case things change from looping
            var activeSlide, activePagination, containerWidth, slideGutter, slideIndexPrev, curSlideGutterPos;
            var slideWidth = $(simpleSlider + ' .slide').width();
            // Loop Vars
            var posToMove, initialPos, newPos, elementText, slideIndex;


            if(transitionEffect === 'fade'){
	        	// Build a mask from the active slide and cover the slideGutter
	            var ativeSlideContents = $(simpleSlider + ' .slide.active').html();
	           	var mask = '<div id="simpleSliderMask" class="slide">'+ativeSlideContents+'</div>';
	           	$(mask).insertBefore(simpleSlider + ' .slideGutter');
            }

            //position at end for looping
            if (transitionType == 'loop' && $(element).hasClass('prev') && $(simpleSlider + ' #slide1').hasClass('active')) {
                initialPos = (($(simpleSlider + ' .slide').length - 1) * Math.abs(slideWidth)) * -1;
                $(simpleSlider + ' .slideGutter').css('left', initialPos);
                $(simpleSlider + ' #slide1').removeClass('active');
                $(simpleSlider + ' #clone').addClass('active');
            }
            //setting them now
            activeSlide = $(simpleSlider + ' .slide.active');
            activePagination = $('ul#' + partNumber + '_pagination a.active');
            containerWidth = $(simpleSlider).width();
            slideGutter = $(simpleSlider + ' .slideGutter');
            slideIndexPrev = $(simpleSlider + ' .slide.active').prev('.slide').index();
            curSlideGutterPos = parseInt($(simpleSlider + ' .slideGutter').css('left'));

            // Loop specific methods
            if (transitionType == 'loop') {

                if ($(element).hasClass('next')) {

                    // Get the simple slider container width and set to negative
                    posToMove = (Math.abs(containerWidth) + Math.abs(curSlideGutterPos)) * -1;
                    // Move the slide gutter
                    animateSlides(slideGutter, posToMove);
                    // Set current slide and pagnation to active
                    activeSlide.removeClass('active').next('.slide').addClass('active');
                    updatePagination(activePagination, 'forward');
                } else if ($(element).hasClass('prev')) {

                    newPos = (Math.abs(slideIndexPrev) * Math.abs(slideWidth) * -1);
                    // Move the slide gutter
                    animateSlides(slideGutter, newPos);
                    // Set current slide and pagnation to active
                    activeSlide.removeClass('active').prev('.slide').addClass('active');
                    updatePagination(activePagination, 'backward');
                } else {
                    // Pagination
                     pagination(element, slideWidth, activeSlide, element, slideGutter);
                }
            }
            // Timeline specific methods
            else if (transitionType == 'timeline') {
                // Navigation
                if ($(element).hasClass('next')) {
                    if (activeSlide.hasClass('last')) {
                        // Tranisition type of
                        animateSlides(slideGutter, 0);
                        activeSlide.removeClass('active');
                        $(simpleSlider + ' .slide.first').addClass('active');
                    } else {
                        // Get the simple slider container width and set to negative
                        posToMove = (Math.abs(containerWidth) + Math.abs(curSlideGutterPos)) * -1;
                        // Move the slide gutter
                        animateSlides(slideGutter, posToMove);
                        // Set current slide to the active slide
                        activeSlide.removeClass('active').next('.slide').addClass('active');
                    }
                    updatePagination(activePagination, 'forward');
                } else if ($(element).hasClass('prev')) {
                    // Previous Slide
                    if (activeSlide.hasClass('first')) {
                        activeSlide.removeClass('active');
                        $(simpleSlider + ' .slide.last').addClass('active');
                        slideIndex = $(simpleSlider + ' .slide.active').index();
                        newPos = (Math.abs(slideIndex) * Math.abs(slideWidth) * -1);
                        animateSlides(slideGutter, newPos);
                    } else {
                        newPos = (Math.abs(slideIndexPrev) * Math.abs(slideWidth) * -1);
                        // Set current slide to the active slide
                        activeSlide.removeClass('active').prev('.slide').addClass('active');
                        animateSlides(slideGutter, newPos);
                    }
                    updatePagination(activePagination, 'backward');
                } else {
                    // Pagination
                    pagination(element, slideWidth, activeSlide, element, slideGutter);
                }
            }
        }// end inputActions
        //function to handle updating active pagination
        function updatePagination(activePagination, direction) {
            if (direction === 'forward') {
                if(activePagination.hasClass('last')) {
                    activePagination.removeClass('active').closest('ul').find('a.first').addClass('active');
                } else {
                    activePagination.removeClass('active').parent().next('li').find('a').addClass('active');
                }
            } else {
                if(activePagination.hasClass('first')) {
                    activePagination.removeClass('active').closest('ul').find('a.last').addClass('active');
                } else {
                    activePagination.removeClass('active').parent().prev('li').find('a').addClass('active');
                }
            }

        }
		// Pagination
		function pagination(element, slideWidth, activeSlide, element, slideGutter){
            elementText = parseInt($(element).text()) - 1;
            newPos = (Math.abs(elementText) * Math.abs(slideWidth) * -1);
            if(transitionEffect === 'fade'){
	            elementText = elementText + 1;
            }
            // Set current slide to the active slide
            activeSlide.removeClass('active');
            $(simpleSlider + ' .slide').eq(elementText).addClass('active');
            // Update Pagination
            $(element).addClass('active');
            $(element).parent().siblings().children().removeClass('active');
            animateSlides(slideGutter, newPos);
		}
        // Function that animates slides
        function animateSlides(element, pos, need) {
			// Callback
			if(callbackBeforeSlideTransition != 'undefined'){
				var H = new Function (callbackBeforeSlideTransition);
				H();
			}
            if(transitionEffect === 'fade'){

	           	// Set the slideGutter to hidden before animation process. Do this incase the mask is not 100% of the container
	           	$(simpleSlider + ' .slideGutter').addClass('cantSee');

	           	// Animate the slidegutter
	           	$(element).animate({
			        left : pos
			    }, transitionTime, function() {

			        // Display the slideGutter before fading out the mask
			        $(simpleSlider + ' .slideGutter').removeClass('cantSee');

			        // Fade out and remove the mask
			        //
			       	$(simpleSlider + ' #simpleSliderMask').delay(transitionTime).fadeOut(400, function(){

				    	$(this).remove();

				    	$(simpleSlider +' #slides').removeClass('animating');

				    	if(callbackAfterSlideTransition != 'undefined'){

							var A=new Function (callbackAfterSlideTransition);

							A();

						}

			       	});

				    //new clone technique
			        if ($(simpleSlider + ' #clone').hasClass('active')) {
			            $(simpleSlider + ' #clone').removeClass('active');
			            $(simpleSlider + ' #slide1').addClass('active');
			            $(simpleSlider + ' .slideGutter').css('left', '0');
			        }


			    });


            }

			else {
			    $(element).animate({
			        left : pos
			    }, transitionTime, function() {

			        //new clone technique
			        if ($(simpleSlider + ' #clone').hasClass('active')) {
			            $(simpleSlider + ' #clone').removeClass('active');
			            $(simpleSlider + ' #slide1').addClass('active');
			            $(simpleSlider + ' .slideGutter').css('left', '0');
			        }

			        $(simpleSlider +' #slides').removeClass('animating');

			        if(callbackAfterSlideTransition != 'undefined'){

						var A=new Function (callbackAfterSlideTransition);

						A();

					}

			    });
			}
        }// end animateSlides

        function slideshowClickEvents() {
            // Navigation Events
            //
            $('a.' + partNumber + '_prev, a.' + partNumber + '_next').click(function(event) {

                var element = $(this);

                // Check if the slideGutter is moving .slide
                if (!$(simpleSlider +' #slides').hasClass('animating')) {

                     inputActions($(this).parent());
                }

                $(simpleSlider +' #slides').addClass('animating');
                event.preventDefault();
            });
            // Pagaination Events
            $('ul#' + partNumber + '_pagination a').click(function(event) {

                // Check if the slideGutter is moving .slide
                if (!$(simpleSlider +' #slides').hasClass('animating')) {

                     inputActions($(this));
                }

                $(simpleSlider +' #slides').addClass('animating');
                event.preventDefault();
            });
        }// end slideshowClickEvents

        // User-Invoked Swipe Events
        function bindSwipeEvents() {
            // Vars for swipe events
            var downPos = 0;
            var downPosSlide = 0;
            var upPos = 0;
            var checkSwipe = false;
            var startY;
            var endY;
			var surface = $(simpleSlider + '  img,  ' + simpleSlider + ' .slideGutter.clone img');
            
            surface.bind('touchstart', function(e) {
                downPos = e.originalEvent.touches[0].pageX;
            });
            surface.bind('touchmove', function(e) {
                upPos = e.originalEvent.touches[0].pageY;
                downPosSlide = e.originalEvent.touches[0].pageX;
                parseInt(upPos);
                checkSwipe = true;
            });
            surface.bind('touchend', function(e) {
         	  	switch(upPos){
	            	case 0:
	            		if(checkSwipe === false){
		            		$(this).trigger('click');
	            		}
	            	break;
	            	default:
	            		if(checkSwipe === true){
	            			checkSwipe = false;
							swipe(downPos, upPos, downPosSlide);
						}	
	            	break;
            	}
                // revert vars
                upPos = 0;
            });
        }// end bindSwipeEvents

        function swipe(downPos, upPos, downPosSlide) {
            var divPos = downPos - downPosSlide;
            var simplerSliderWidth = $(simpleSlider + ' .slide.active').width();
            var swipedPrcnt = simplerSliderWidth / Math.abs(divPos);
            var totalPos;
            // Define a total number of pixels to scroll
            if (upPos > 0 && swipedPrcnt <= 2) {
                if (divPos < 0) {
                    // Slide to previous slide
                    $('a.' + partNumber + '_prev').click();
                } else {
                    // Slide to next slide
                    $('a.' + partNumber + '_next').click();
                }
            }
            
            // Zero out for next round
            downPos = 0;
            downPosSlide = 0;
            upPos = 0;
            totalPos = 0;
        }// end swipe

        // Function that advances slides when page loads
        function autoAdvance() {
            if (autoAdvanceSlides == 'true') {
                var setInit = '';
                var jqueryVersion = jQuery.fn.jquery;
                var elementToAdvance, need;
                setInit = window.setInterval(function() {
                    // Run advance function with element to advance
                    var elementToAdvance = $(simpleSlider + ' .next');
                    inputActions(elementToAdvance);
                }, autoAdvanceDelay);
                // Actions to prefrom based on jQuery version
                jqueryVersion = jQuery.fn.jquery;
                // if < jQuery version 1.5.1
                if (jqueryVersion <= '1.5.1') {
                    $(simpleSlider).mouseenter(function() {
                        clearTimeout(setInit);
                    });
                    $(simpleSlider).mouseleave(function() {
                        need = 'clear';
                        setInit = window.setInterval(function() {
                            // Run advance function with element to advance
                            elementToAdvance = $(simpleSlider + ' .next');
                            inputActions(elementToAdvance);
                        }, autoAdvanceDelay);
                    });
                } else {
                    $(simpleSlider).on({
                        mouseenter : function() {
                            clearTimeout(setInit);
                        },
                        mouseleave : function() {
                            need = 'clear';
                            setInit = window.setInterval(function() {
                                // Run advance function with element to advance
                                elementToAdvance = $(simpleSlider + ' .next');
                                inputActions(elementToAdvance);
                            }, autoAdvanceDelay);
                        }
                    });
                }
            }
        }// end autoAdvance

        // Actions to preform on window resize e.g., effected elements are img, slide and slideGutter
        function dynamicActions() {
            if (responsive == 'true') {
                window.onresize = function() {
                    // Simplified
                    // keep active slide centered by repositing slideGutter
                    // active slide index * width
                    var slideIndex = $(simpleSlider + ' .slide.active').index();
                    var slideWidth = $(simpleSlider + ' .slide').width();
                    var newPos = (Math.abs(slideIndex) * Math.abs(slideWidth)) * -1;
                    $(simpleSlider + ' .slideGutter').css('left', newPos);

                };
            }
        }// end dynamicActions

        // Call functions
        domBuilder();
        resizeElements();
        slideshowClickEvents();
        autoAdvance();
        dynamicActions();
        bindSwipeEvents();
        //Callback
        if (callbackBuildComplete != 'undefined') {
            var F = new Function(callbackBuildComplete);
            return (F());
        }
    });
    // end document ready
} // end createSimpleSlider
         </script>
        </div>
       </div>
      </div>
      <div id="wrapContentOuter">
       <div id="wrapContentInner">
        <div id="wrapContent">
         <div class="gutter clearfix">
          <div id="contentPrimary">
           <div class="gutter clearfix">
            <div id="wrapSectionPrimary">
             <div class="sectionA">
              <div class="gutter">
              </div>
             </div>
             <div class="sectionB">
              <div class="gutter">
              </div>
             </div>
             <div class="sectionC">
              <div class="gutter">
              </div>
             </div>
            </div>
            <div id="wrapSectionSecondary">
             <div class="sectionA">
              <div class="gutter">
              </div>
             </div>
             <div class="sectionB">
              <div class="gutter">
              </div>
             </div>
             <div class="sectionC">
              <div class="gutter">
              </div>
             </div>
            </div>
           </div>
          </div>
          <div id="contentSecondary">
           <div class="gutter clearfix">
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
      <div id="wrapFooter">
       <div class="gutter clearfix">
        <div id="footerLeft">
         <div class="gutter clearfix">
          <!--START MENU-->
          <ul class="menu socialIcons">
           <li class=" menuItem1 first facebook">
            <a href="http://www.facebook.com/pages/The-University-of-Texas-at-Arlington/123889354300036">
             Facebook
            </a>
           </li>
           <li class=" menuItem2 twitter">
            <a href="http://twitter.com/utarlington">
             Twitter
            </a>
           </li>
           <li class=" menuItem3 linkedin">
            <a href="http://www.linkedin.com/edu/school?id=19517">
             Linked In
            </a>
           </li>
           <li class=" menuItem4 youtube">
            <a href="http://www.youtube.com/utarlington">
             YouTube
            </a>
           </li>
           <li class=" menuItem5 flickr">
            <a href="http://www.flickr.com/photos/utamagazine/sets/">
             Flickr
            </a>
           </li>
           <li class="menuItem6 last more">
            <a href="http://www.uta.edu/social/index.php">
             More Social Media Sites
            </a>
           </li>
          </ul>
          <!--END MENU-->
          <p>
           © 2015
           <a href="http://www.uta.edu">
            The University of Texas at Arlington
           </a>
           <br/>
           <a href="http://maps.google.com/maps?q=701+S.+Nedderman+Dr.+Arlington,+Texas" title="Map this location">
            701 S. Nedderman Drive • Arlington, TX 76019
           </a>
           • 817-272-2011
          </p>
          <p>
           <a href="http://www.uta.edu/uta/about/careers.php">
            Careers
           </a>
           |
           <a href="https://giving.uta.edu/development-staff">
            Contact Us
           </a>
           |
           <a href="http://www.thecb.state.tx.us/apps/resumes/">
            Institutional Resume
           </a>
           |
           <a href="http://www.uta.edu/safety/">
            Emergency Preparedness
           </a>
           |
           <a href="https://giving.uta.edu/Privacy_Policy">
            Site Policies
           </a>
           <br/>
           <a href="http://www.utsystem.edu/">
            UT System
           </a>
           |
           <a href="http://www.texas.gov/">
            State of Texas
           </a>
           |
           <a href="http://www.tsl.state.tx.us/trail/">
            Statewide Search
           </a>
           |
           <a href="http://www.texashomelandsecurity.com/">
            Homeland Security
           </a>
           |
           <a href="http://sao.fraud.state.tx.us">
            Report Fraud
           </a>
          </p>
         </div>
        </div>
        <div id="footerRight">
         <div class="gutter clearfix">
          <!--START MENU-->
          <ul class="menu footerLinks">
           <li class=" menuItem1 first">
            <a href="http://www.uta.edu/uta/about/">
             About Us
            </a>
           </li>
           <li class=" menuItem2">
            <a href="http://www.uta.edu/uta/student-life/">
             Student Life
            </a>
           </li>
           <li class=" menuItem3">
            <a href="http://www.uta.edu/uta/admissions.php">
             Admissions
            </a>
           </li>
           <li class=" menuItem4">
            <a href="http://www.uta.edu/giving/">
             Giving
            </a>
           </li>
           <li class=" menuItem5">
            <a href="http://www.uta.edu/uta/academics/">
             Academics
            </a>
           </li>
           <li class=" menuItem6">
            <a href="http://www.utamavs.com/">
             Athletics
            </a>
           </li>
           <li class=" menuItem7">
            <a href="http://www.uta.edu/uta/research.php">
             Research
            </a>
           </li>
           <li class="menuItem8 last">
            <a href="http://www.uta.edu/news/">
             News Center
            </a>
           </li>
          </ul>
          <!--END MENU-->
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
   <div class="scripts">
    <script src="/file/rwd/custom.js" type="text/javascript">
    </script>
    <script src="/file/rwd/rwd.js" type="text/javascript">
    </script>
    <script src="/file/rwd/parts.js" type="text/javascript">
    </script>
   </div>
   <input id="hidBrowserDateTime" name="hidBrowserDateTime" type="hidden"/>
   <script type="text/javascript">
    //<![CDATA[
$(function(){ if(typeof(createSimpleSlider) !== 'undefined' && createSimpleSlider){ createSimpleSlider({settings : Sys.Serialization.JavaScriptSerializer.deserialize('{"transitionTime":"300","transitionTimeDelay":"0","transitionType":"loop","transitionEffect":"slide","domStructure":"loose","navPrevTxt":"prev","navNextTxt":"next","responsive":"true","autoAdvanceSlides":"true","autoAdvanceDelay":"6","autoAdvanceReset":"10","callbackBuildComplete":"","callbackBeforeSlideTransition":"","callbackAfterSlideTransition":"","wrapSlideInAnchor":true,"slidesObj":[{"title":"","caption":"","alt":"","src":"https://giving.uta.edu/image/ce/583_College_Park_Center_Exterior.jpg","wrapAnchorURL":""},{"title":"","caption":"","alt":"","src":"https://giving.uta.edu/image/ce/Cancer.jpg","wrapAnchorURL":""},{"title":"","caption":"","alt":"","src":"https://giving.uta.edu/image/ce/Glass-Art.jpg","wrapAnchorURL":""},{"title":"","caption":"","alt":"","src":"https://giving.uta.edu/image/ce/Student-and-Professor.jpg","wrapAnchorURL":""},{"title":"","caption":"","alt":"","src":"https://giving.uta.edu/image/ce/UTA-Racing-2.jpg","wrapAnchorURL":""},{"title":"","caption":"","alt":"","src":"https://giving.uta.edu/image/ce/Smart-hospital.jpg","wrapAnchorURL":""},{"title":"","caption":"","alt":"","src":"https://giving.uta.edu/image/ce/Roadside.jpg","wrapAnchorURL":""},{"title":"","caption":"","alt":"","src":"https://giving.uta.edu/image/ce/FW-Mainstage.jpg","wrapAnchorURL":""}],"environment":{"canWrapAnchor":true}}'), elementId : 'PC3250_Content' }); } });var BBNCAnalyticsURL = BuildBBNCAnalyticsURL('https://giving.uta.edu/', 'pagename;pid', 'Giving+Home+Page;373');//]]>
   </script>
   <script>
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-297365-37', 'auto');
  ga('send', 'pageview');
   </script>
  </form>
 </body>
</html>

