https://pulse.utah.edu
<!DOCTYPE html>
<html lang="en-US">
 <head>
  <meta content="IE=10.000" http-equiv="X-UA-Compatible"/>
  <meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" name="viewport"/>
  <meta content="text/html;charset=utf-8" http-equiv="content-type"/>
  <meta content="no-cache,no-store" http-equiv="cache-control"/>
  <meta content="no-cache" http-equiv="pragma"/>
  <meta content="-1" http-equiv="expires"/>
  <meta content="Connecting to University of Utah" name="mswebdialog-title"/>
  <title>
   Sign In
  </title>
  <script type="text/javascript">
   //<![CDATA[
function LoginErrors(){this.userNameFormatError = 'Enter your user ID in the format \u0026quot;domain\\user\u0026quot; or \u0026quot;user@domain\u0026quot;.'; this.passwordEmpty = 'Enter your password.'; this.passwordTooLong = 'Password must be shorter than 128 characters.';}; var maxPasswordLength = 128;
//]]>
  </script>
  <script type="text/javascript">
   //<![CDATA[
// Copyright (c) Microsoft Corporation.  All rights reserved.
function InputUtil(errTextElementID, errDisplayElementID) {

    if (!errTextElementID)  errTextElementID = 'errorText'; 
    if (!errDisplayElementID)  errDisplayElementID = 'error'; 

    this.hasFocus = false;
    this.errLabel = document.getElementById(errTextElementID);
    this.errDisplay = document.getElementById(errDisplayElementID);
};
InputUtil.prototype.canDisplayError = function () {
    return this.errLabel && this.errDisplay;
}
InputUtil.prototype.checkError = function () {
    if (!this.canDisplayError){
        throw new Error ('Error element not present');
    }
    if (this.errLabel && this.errLabel.innerHTML) {
        this.errDisplay.style.display = '';        
        var cause = this.errLabel.getAttribute('for');
        if (cause) {
            var causeNode = document.getElementById(cause);
            if (causeNode && causeNode.value) {
                causeNode.focus();
                this.hasFocus = true;
            }
        }
    }
    else {
        this.errDisplay.style.display = 'none';
    }
};
InputUtil.prototype.setInitialFocus = function (input) {
    if (this.hasFocus) return;
    var node = document.getElementById(input);
    if (node) {
        if ((/^\s*$/).test(node.value)) {
            node.focus();
            this.hasFocus = true;
        }
    }
};
InputUtil.prototype.setError = function (input, errorMsg) {
    if (!this.canDisplayError) {
        throw new Error('Error element not present');
    }
    input.focus();

    if (errorMsg) {
        this.errLabel.innerHTML = errorMsg;
    }
    this.errLabel.setAttribute('for', input.id);
    this.errDisplay.style.display = '';
};
InputUtil.makePlaceholder = function (input) {
    var ua = navigator.userAgent;

    if (ua != null && 
        (ua.match(/MSIE 9.0/) != null || 
         ua.match(/MSIE 8.0/) != null ||
         ua.match(/MSIE 7.0/) != null)) {
        var node = document.getElementById(input);
        if (node) {
            var placeholder = node.getAttribute("placeholder");
            if (placeholder != null && placeholder != '') {
                var label = document.createElement('input');
                label.type = "text";
                label.value = placeholder;
                label.readOnly = true;
                label.style.position = 'absolute';
                label.style.borderColor = 'transparent';
                label.className = node.className + ' hint';
                label.tabIndex = -1;
                label.onfocus = function () { this.nextSibling.focus(); };

                node.style.position = 'relative';
                node.parentNode.style.position = 'relative';
                node.parentNode.insertBefore(label, node);
                node.onkeyup = function () { InputUtil.showHint(this); };
                node.onblur = function () { InputUtil.showHint(this); };
                node.style.background = 'transparent';

                node.setAttribute("placeholder", "");
                InputUtil.showHint(node);
            }
        }
    }
};
InputUtil.focus = function (inputField) {
    var node = document.getElementById(inputField);
    if (node) node.focus();
};
InputUtil.hasClass = function(node, clsName) {
    return node.className.match(new RegExp('(\\s|^)' + clsName + '(\\s|$)'));
};
InputUtil.addClass = function(node, clsName) {
    if (!this.hasClass(node, clsName)) node.className += " " + clsName;
};
InputUtil.removeClass = function(node, clsName) {
    if (this.hasClass(node, clsName)) {
        var reg = new RegExp('(\\s|^)' + clsName + '(\\s|$)');
        node.className = node.className.replace(reg, ' ');
    }
};
InputUtil.showHint = function (node, gotFocus) {
    if (node.value && node.value != '') {
        node.previousSibling.style.display = 'none';
    }
    else {
        node.previousSibling.style.display = '';
    }
};
//]]>
  </script>
  <link href="/adfs/portal/css/style.css?id=A64A11E6F5C41BEA65F20DFF15CB120DCAC17F2A7A8429426A63484D3E4A446F" rel="stylesheet" type="text/css"/>
  <style>
   .illustrationClass {background-image:url(/adfs/portal/illustration/illustration.png?id=2F69CAA1192DC635A596A18F0B6366CB8646991CFB8AF7AA962BA0FEAA08B54D);}
  </style>
 </head>
 <body class="body" dir="ltr">
  <div id="noScript" style="position:static; width:100%; height:100%; z-index:100">
   <h1>
    JavaScript required
   </h1>
   <p>
    JavaScript is required. This web browser does not support JavaScript or JavaScript in this web browser is not enabled.
   </p>
   <p>
    To find out if your web browser supports JavaScript or to enable JavaScript, see web browser help.
   </p>
  </div>
  <script language="JavaScript" type="text/javascript">
   document.getElementById("noScript").style.display = "none";
  </script>
  <div id="fullPage">
   <div class="float" id="brandingWrapper">
    <div id="branding">
    </div>
   </div>
   <div class="float" id="contentWrapper">
    <div id="content">
     <div id="header">
      <img alt="University of Utah" class="logoImage" src="/adfs/portal/logo/logo.png?id=E4312AF5B1304C48CFE370E79315B06ED9E20577CBD8514D52B6AB65FE7E02A9"/>
     </div>
     <div id="workArea">
      <div class="groupMargin" id="authArea">
       <div id="loginArea">
        <div class="groupMargin" id="loginMessage">
         Sign in with your organizational account
        </div>
        <form action="/adfs/ls/?wa=wsignin1.0&amp;wtrealm=urn%3asharepoint%3apulse.utah.edu&amp;wctx=https%3a%2f%2fpulse.utah.edu%2f_layouts%2f15%2fAuthenticate.aspx%3fSource%3d%252F&amp;wreply=https%3a%2f%2fpulse.utah.edu%2f_trust%2fdefault.aspx" autocomplete="off" id="loginForm" method="post" novalidate="novalidate" onkeypress="if (event &amp;&amp; event.keyCode == 13) Login.submitLoginRequest();">
         <div class="fieldMargin error smallText" id="error">
          <label for="" id="errorText">
          </label>
         </div>
         <div id="formsAuthenticationArea">
          <div id="userNameArea">
           <input autocomplete="off" class="text fullWidth" id="userNameInput" name="UserName" placeholder="someone@example.com" spellcheck="false" tabindex="1" type="email" value=""/>
          </div>
          <div id="passwordArea">
           <input autocomplete="off" class="text fullWidth" id="passwordInput" name="Password" placeholder="Password" tabindex="2" type="password"/>
          </div>
          <div id="kmsiArea" style="display:none">
           <input id="kmsiInput" name="Kmsi" tabindex="3" type="checkbox" value="true"/>
           <label for="kmsiInput">
            Keep me signed in
           </label>
          </div>
          <div class="submitMargin" id="submissionArea">
           <span class="submit" id="submitButton" onclick="return Login.submitLoginRequest();" onkeypress="if (event &amp;&amp; event.keyCode == 32) Login.submitLoginRequest();" tabindex="4">
            Sign in
           </span>
          </div>
         </div>
         <input id="optionForms" name="AuthMethod" type="hidden" value="FormsAuthentication"/>
        </form>
        <div id="authOptions">
         <form action="https://adfs.ad.utah.edu:443/adfs/ls/?wa=wsignin1.0&amp;wtrealm=urn%3asharepoint%3apulse.utah.edu&amp;wctx=https%3a%2f%2fpulse.utah.edu%2f_layouts%2f15%2fAuthenticate.aspx%3fSource%3d%252F&amp;wreply=https%3a%2f%2fpulse.utah.edu%2f_trust%2fdefault.aspx" id="options" method="post">
          <script type="text/javascript">
           function SelectOption(option) {
                    var i = document.getElementById('optionSelection');
                    i.value = option;
                    document.forms['options'].submit();
                    return false;
                }
          </script>
          <input id="optionSelection" name="AuthMethod" type="hidden"/>
          <div class="groupMargin">
          </div>
         </form>
        </div>
        <div class="groupMargin" id="introduction">
        </div>
        <script type="text/javascript">
         //<![CDATA[

            function Login() {
            }

            Login.userNameInput = 'userNameInput';
            Login.passwordInput = 'passwordInput';

            Login.initialize = function () {

                var u = new InputUtil();

                u.checkError();
                u.setInitialFocus(Login.userNameInput);
                u.setInitialFocus(Login.passwordInput);
            }();

            Login.submitLoginRequest = function () { 
                var u = new InputUtil();
                var e = new LoginErrors();

                var userName = document.getElementById(Login.userNameInput);
                var password = document.getElementById(Login.passwordInput);

                if (!userName.value || !userName.value.match('[@\\\\]')) {
                    u.setError(userName, e.userNameFormatError);
                    return false;
                }

                if (!password.value) {
                    u.setError(password, e.passwordEmpty);
                    return false;
                }

                if (password.value.length > maxPasswordLength) {
                    u.setError(password, e.passwordTooLong);
                    return false;
                }

                document.forms['loginForm'].submit();
                return false;
            };

            InputUtil.makePlaceholder(Login.userNameInput);
            InputUtil.makePlaceholder(Login.passwordInput);
        //]]>
        </script>
       </div>
      </div>
     </div>
     <div id="footerPlaceholder">
     </div>
    </div>
    <div id="footer">
     <div class="floatReverse" id="footerLinks">
      <div>
       <span id="copyright">
        © 2013 Microsoft
       </span>
       <a class="pageLink" href="http://it.utah.edu/help/" id="helpDesk">
        University Help Desk
       </a>
      </div>
     </div>
    </div>
   </div>
  </div>
  <script type="text/javascript">
   //<![CDATA[
// Copyright (c) Microsoft Corporation.  All rights reserved.

// This file contains several workarounds on inconsistent browser behaviors that administrators may customize.
"use strict";

// iPhone email friendly keyboard does not include "\" key, use regular keyboard instead.
// Note change input type does not work on all versions of all browsers.
if (navigator.userAgent.match(/iPhone/i) != null) {
    var emails = document.querySelectorAll("input[type='email']");
    if (emails) {
        for (var i = 0; i < emails.length; i++) {
            emails[i].type = 'text';
        }
    }
}

// In the CSS file we set the ms-viewport to be consistent with the device dimensions, 
// which is necessary for correct functionality of immersive IE. 
// However, for Windows 8 phone we need to reset the ms-viewport's dimension to its original
// values (auto), otherwise the viewport dimensions will be wrong for Windows 8 phone.
// Windows 8 phone has agent string 'IEMobile 10.0'
if (navigator.userAgent.match(/IEMobile\/10\.0/)) {
    var msViewportStyle = document.createElement("style");
    msViewportStyle.appendChild(
        document.createTextNode(
            "@-ms-viewport{width:auto!important}"
        )
    );
    msViewportStyle.appendChild(
        document.createTextNode(
            "@-ms-viewport{height:auto!important}"
        )
    );
    document.getElementsByTagName("head")[0].appendChild(msViewportStyle);
}

// If the innerWidth is defined, use it as the viewport width.
if (window.innerWidth && window.outerWidth && window.innerWidth !== window.outerWidth) {
    var viewport = document.querySelector("meta[name=viewport]");
    viewport.setAttribute('content', 'width=' + window.innerWidth + 'px; initial-scale=1.0; maximum-scale=1.0');
}

// Gets the current style of a specific property for a specific element.
function getStyle(element, styleProp) {
    var propStyle = null;

    if (element && element.currentStyle) {
        propStyle = element.currentStyle[styleProp];
    }
    else if (element && window.getComputedStyle) {
        propStyle = document.defaultView.getComputedStyle(element, null).getPropertyValue(styleProp);
    }

    return propStyle;
}

// The script below is used for downloading the illustration image 
// only when the branding is displaying. This script work together
// with the code in PageBase.cs that sets the html inline style
// containing the class 'illustrationClass' with the background image.
var computeLoadIllustration = function () {
    var branding = document.getElementById("branding");
    var brandingDisplay = getStyle(branding, "display");
    var brandingWrapperDisplay = getStyle(document.getElementById("brandingWrapper"), "display");

    if (brandingDisplay && brandingDisplay !== "none" &&
        brandingWrapperDisplay && brandingWrapperDisplay !== "none") {
        var newClass = "illustrationClass";

        if (branding.classList && branding.classList.add) {
            branding.classList.add(newClass);
        } else if (branding.className !== undefined) {
            branding.className += " " + newClass;
        }
        if (window.removeEventListener) {
            window.removeEventListener('load', computeLoadIllustration, false);
            window.removeEventListener('resize', computeLoadIllustration, false);
        }
        else if (window.detachEvent) {
            window.detachEvent('onload', computeLoadIllustration);
            window.detachEvent('onresize', computeLoadIllustration);
        }
    }
};

if (window.addEventListener) {
    window.addEventListener('resize', computeLoadIllustration, false);
    window.addEventListener('load', computeLoadIllustration, false);
}
else if (window.attachEvent) {
    window.attachEvent('onresize', computeLoadIllustration);
    window.attachEvent('onload', computeLoadIllustration);
}

//Custom Login Page Code - University of Utah

//keep from losing the hash and everything after on direct links
try
{
	var loginForm = document.getElementById('loginForm');
	loginForm.action = loginForm.action + encodeURIComponent(window.location.hash);
}
catch(err){}


//what page are we on Signin or Signout
var signInOutValue = getParameterByName('wa');

//Allows the uNID to be entered to login without the need for the domain\ or @ad.utah.edu
var AppendUPN = function()
{
	//alert("AppendUPN");
	var userName = document.getElementById(Login.userNameInput);
	//alert(userName);	
	var rval = false;
	if (userName.value)
	{
		var lowerUserName = userName.value.toLowerCase();
		var containAt = lowerUserName.indexOf("@");
		var containSlash = lowerUserName.indexOf("\\");
		if (containAt <=0 && containSlash <= 0) 
		{
			userName.value = "ad\\" + userName.value;
		}
		rval = true;
		//alert(rval);
	}
	else
	{
		alert("Please enter your uNID");
	}
	return rval;
};

// testForEnter() disables the enter keypress on all form objects except for submit button
// this function works in IE, chrome, safari, opera and firefox
function testForEnter(evt)
{
	//alert("testForEnter");
    var keyCode = evt.keyCode;
	var rval = false;
    if (keyCode == 13)
	{
        evt.returnValue = false;
		try
		{
			//this line errors on IE and causes any code after not to execute
			evt.stopPropagation(); // this line added for firefox
		}
		catch(err)
		{
			console.log(err.message);
		}
        if(evt.preventDefault) evt.preventDefault();
		rval = true;
	}
	return rval;
} //end of testForEnter()

if(signInOutValue) //if we have the parameter to check
{
	try
	{
		if(signInOutValue.indexOf("wsignin") >= 0) //if we are on the signin page
		{
			/*
			This does not work in Firefox
			document.getElementById('submitButton').onclick = EnterHandler();//new Function("if (AppendUPN()) return Login.submitLoginRequest();");
			document.getElementById('submitButton').onkeypress = EnterHandler();//new Function("if (testForEnter(this,event)) { if (AppendUPN()) Login.submitLoginRequest(); }");
			document.getElementById('loginForm').onkeypress = EnterHandler();//new Function("if (testForEnter(this,event)) { if (AppendUPN()) Login.submitLoginRequest(); }");
			document.getElementById('passwordInput').onclick = EnterHandler();//new Function("if (testForEnter(this,event)) { if (AppendUPN()) Login.submitLoginRequest(); }");
			document.getElementById('userNameInput').onclick = EnterHandler();//new Function("if (testForEnter(this,event)) { if (AppendUPN()) Login.submitLoginRequest(); }"); 
			*/
			try
			{
				document.getElementById('submitButton').addEventListener("click", SubmitClickHandler, false);
				document.getElementById('passwordInput').addEventListener("keydown", KeyPressHandler, false);
				document.getElementById('userNameInput').addEventListener("keydown", KeyPressHandler, false); 
			}
			catch(err)
			{
				console.log(err.message);
			}	
			document.getElementById("userNameInput").placeholder = 'uNID';
		}
	}	
	catch(err){
		console.log(err.message);
	}
}

function SubmitClickHandler(e)
{
	if(AppendUPN())
	{
		Login.submitLoginRequest();
	}
}

function KeyPressHandler(e)
{
	//alert("EnterHandler");
	if(testForEnter(e))
	{
		if(AppendUPN())
		{
			Login.submitLoginRequest();
		}
	}
}

//allows us to get a query string value for identifying the authenticating source
function getParameterByName(name) {
    name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
    var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
        results = regex.exec(location.search);
    return results == null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
}

//get authenticating source or logout source from queryString
var relyingPartyTrust = getParameterByName('wctx');

if(!relyingPartyTrust)
{
	relyingPartyTrust = getParameterByName('wreply'); //exists when logging out
}
	
//Pulse SharePoint Farms
try 
{
	//we don't set the same pieces in the if/elseif outside of the above if/elseif, because other apps may use adfs and we don't want to modify them inadvertently
	if(relyingPartyTrust && (relyingPartyTrust.indexOf("pulse.utah.edu") >= 0 || relyingPartyTrust.indexOf("test.hscintranet.utah.edu") >= 0 || relyingPartyTrust.indexOf("hscint3sp") >= 0)) //if Pulse PROD, DEV, or TEST
	{
		document.getElementById("branding").style.backgroundImage = "url(https://healthsciences.utah.edu/intranet-hsc/assets/LoginPage/Images/loginBackGround.jpg)"; //update background image (needs to be done here rather than to the theme as the theme applies to all apps authenticating against ADFS)
		document.getElementById("header").innerHTML = "<img class='logoImage' src='https://healthsciences.utah.edu/intranet-hsc/assets/LoginPage/Images/blank.gif' />" //overwrite default logo with empty image
		document.getElementById("header").style.marginBottom = "0px"; //makes it so the footer and everything else isn't so far below the header
		document.getElementById("loginMessage").innerHTML = "Pulse site, tools and resources for University of Utah Health.<br><br>Available to active employees, active students, and active POI."; //overwrites login Message
		document.getElementById("submitButton").style.background = "rgb(172, 22, 44)"; //if not set here, it will be transparent until an onmouseout/onmouseover event	
		document.getElementById("submitButton").onmouseover = function(){this.style.background = "rgb(140, 22, 44)";}; //darker red on hover (can't do :hover in inline css
		document.getElementById("submitButton").onmouseout = function(){this.style.background = "rgb(172, 22, 44)";}; //red in all other cases
		document.getElementById("footerPlaceholder").innerHTML = "<img src='https://healthsciences.utah.edu/intranet-hsc/assets/uofu_health_adfs.png' alt='University of Utah Health' style='width:260px;margin-top:-15px;' />"; //places UUHSC logo in Footer. Needs to be 260px to match ADFS Logo standards. margin-top:-15px is to fix the display on the iPhone 4s (3.5") screen having the logo cutoff on the bottom
		document.getElementById("helpDesk").innerHTML = ""; //removes helpdesk link as on smaller devices it hovers in the middle of the footer logo
	}
	else if(relyingPartyTrust && (relyingPartyTrust.indexOf("med.utah.edu") >= 0)) //if .med.utah.edu (when needed, we can modify this to be more specific, but as is for now
	{	
		//diff than above
		document.getElementById("branding").style.backgroundImage = "url(https://apps.med.utah.edu/_layouts/15/UUHSC.WES.SP.ClientCommons/images/logos/hsc/adfsloginbackground.png)"; //update background image (needs to be done here rather than to the theme as the theme applies to all apps authenticating against ADFS)	
		document.getElementById("header").innerHTML = "<img class='logoImage' src='https://healthsciences.utah.edu/intranet-hsc/assets/LoginPage/Images/blank.gif' />" //overwrite default logo with empty image
		document.getElementById("header").style.marginBottom = "0px"; //makes it so the footer and everything else isn't so far below the header
		//diff than above
		document.getElementById("loginMessage").innerHTML = "Apps and resources for University of Utah Health"; //overwrites login Message
		document.getElementById("submitButton").style.background = "rgb(172, 22, 44)"; //if not set here, it will be transparent until an onmouseout/onmouseover event	
		document.getElementById("submitButton").onmouseover = function(){this.style.background = "rgb(140, 22, 44)";}; //darker red on hover (can't do :hover in inline css
		document.getElementById("submitButton").onmouseout = function(){this.style.background = "rgb(172, 22, 44)";}; //red in all other cases
		document.getElementById("footerPlaceholder").innerHTML = "<img src='https://healthsciences.utah.edu/intranet-hsc/assets/uofu_health_adfs.png' alt='University of Utah Health' style='width:260px;margin-top:-15px;' />"; //places UUHSC logo in Footer. Needs to be 260px to match ADFS Logo standards. margin-top:-15px is to fix the display on the iPhone 4s (3.5") screen having the logo cutoff on the bottom
		document.getElementById("helpDesk").innerHTML = ""; //removes helpdesk link as on smaller devices it hovers in the middle of the footer logo
	}
}
catch(err){}

if(signInOutValue) //if we have the parameter to check
{
	try
	{
		var siteLoggedOutFromArray = relyingPartyTrust.split('/');

		if(signInOutValue.indexOf("wsignout") >= 0) //if we are on the signout page
		{
			////Pulse SharePoint Farms
			if(relyingPartyTrust && (relyingPartyTrust.indexOf("pulse.utah.edu") >= 0 || relyingPartyTrust.indexOf("test.hscintranet.utah.edu") >= 0 || relyingPartyTrust.indexOf("hscint3sp") >= 0))
			{
				var urlToRedirectTo = siteLoggedOutFromArray[0] + '//' + siteLoggedOutFromArray[2]; //removes extra url that contains signoutpage causing and endless loop
				window.setTimeout(function(){window.location.replace(urlToRedirectTo)}, 500);
			}
			else //all other servers
			{
				document.getElementById("instruction").innerHTML = "You have successfully signed out.<br /><br /><a style='font-size: 1.33em;color: red;' href='" + relyingPartyTrust + "'>Log Back In</a>";
			}			
		}
	}
	catch(err){}
}
	
//]]>
  </script>
 </body>
</html>

