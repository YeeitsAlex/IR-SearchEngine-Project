http://email.emory.edu
<!DOCTYPE html>
<html lang="en-US">
 <head>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <meta content="width=device-width, initial-scale=1.0, user-scalable=1" name="viewport"/>
  <meta content="text/html;charset=utf-8" http-equiv="content-type"/>
  <meta content="no-cache,no-store" http-equiv="cache-control"/>
  <meta content="no-cache" http-equiv="pragma"/>
  <meta content="-1" http-equiv="expires"/>
  <meta content="Connecting to Emory University Login Server" name="mswebdialog-title"/>
  <title>
   Sign In
  </title>
  <script type="text/javascript">
   //<![CDATA[
function LoginErrors(){this.userNameFormatError = 'Enter your user ID in the format \u0026quot;domain\\user\u0026quot; or \u0026quot;user@domain\u0026quot;.'; this.passwordEmpty = 'Enter your password.'; this.passwordTooLong = 'Password is too long (\u0026gt; 128 characters).';}; var maxPasswordLength = 128;
//]]>
  </script>
  <script type="text/javascript">
   //<![CDATA[
// Copyright (c) Microsoft Corporation.  All rights reserved.
function InputUtil(errTextElementID, errDisplayElementID) {

    if (!errTextElementID)  errTextElementID = 'errorText'; 
    if (!errDisplayElementID)  errDisplayElementID = 'error'; 

    this.hasFocus = false;
    this.errLabel = document.getElementById(errTextElementID);
    this.errDisplay = document.getElementById(errDisplayElementID);
};
InputUtil.prototype.canDisplayError = function () {
    return this.errLabel && this.errDisplay;
}
InputUtil.prototype.checkError = function () {
    if (!this.canDisplayError){
        throw new Error ('Error element not present');
    }
    if (this.errLabel && this.errLabel.innerHTML) {
        this.errDisplay.style.display = '';        
        var cause = this.errLabel.getAttribute('for');
        if (cause) {
            var causeNode = document.getElementById(cause);
            if (causeNode && causeNode.value) {
                causeNode.focus();
                this.hasFocus = true;
            }
        }
    }
    else {
        this.errDisplay.style.display = 'none';
    }
};
InputUtil.prototype.setInitialFocus = function (input) {
    if (this.hasFocus) return;
    var node = document.getElementById(input);
    if (node) {
        if ((/^\s*$/).test(node.value)) {
            node.focus();
            this.hasFocus = true;
        }
    }
};
InputUtil.prototype.setError = function (input, errorMsg) {
    if (!this.canDisplayError) {
        throw new Error('Error element not present');
    }
    input.focus();

    if (errorMsg) {
        this.errLabel.innerHTML = errorMsg;
    }
    this.errLabel.setAttribute('for', input.id);
    this.errDisplay.style.display = '';
};
InputUtil.makePlaceholder = function (input) {
    var ua = navigator.userAgent;

    if (ua != null && 
        (ua.match(/MSIE 9.0/) != null || 
         ua.match(/MSIE 8.0/) != null ||
         ua.match(/MSIE 7.0/) != null)) {
        var node = document.getElementById(input);
        if (node) {
            var placeholder = node.getAttribute("placeholder");
            if (placeholder != null && placeholder != '') {
                var label = document.createElement('input');
                label.type = "text";
                label.value = placeholder;
                label.readOnly = true;
                label.style.position = 'absolute';
                label.style.borderColor = 'transparent';
                label.className = node.className + ' hint';
                label.tabIndex = -1;
                label.onfocus = function () { this.nextSibling.focus(); };

                node.style.position = 'relative';
                node.parentNode.style.position = 'relative';
                node.parentNode.insertBefore(label, node);
                node.onkeyup = function () { InputUtil.showHint(this); };
                node.onblur = function () { InputUtil.showHint(this); };
                node.style.background = 'transparent';

                node.setAttribute("placeholder", "");
                InputUtil.showHint(node);
            }
        }
    }
};
InputUtil.focus = function (inputField) {
    var node = document.getElementById(inputField);
    if (node) node.focus();
};
InputUtil.hasClass = function(node, clsName) {
    return node.className.match(new RegExp('(\\s|^)' + clsName + '(\\s|$)'));
};
InputUtil.addClass = function(node, clsName) {
    if (!this.hasClass(node, clsName)) node.className += " " + clsName;
};
InputUtil.removeClass = function(node, clsName) {
    if (this.hasClass(node, clsName)) {
        var reg = new RegExp('(\\s|^)' + clsName + '(\\s|$)');
        node.className = node.className.replace(reg, ' ');
    }
};
InputUtil.showHint = function (node, gotFocus) {
    if (node.value && node.value != '') {
        node.previousSibling.style.display = 'none';
    }
    else {
        node.previousSibling.style.display = '';
    }
};
InputUtil.updatePlaceholder = function (input, placeholderText) {
    var node = document.getElementById(input);
    if (node) {
        var ua = navigator.userAgent;
        if (ua != null &&
            (ua.match(/MSIE 9.0/) != null ||
            ua.match(/MSIE 8.0/) != null ||
            ua.match(/MSIE 7.0/) != null)) {
            var label = node.previousSibling;
            if (label != null) {
                label.value = placeholderText;
            }
        }
        else {
            node.placeholder = placeholderText;
        }
    }
};

//]]>
  </script>
  <link href="/adfs/portal/css/style.css?id=D74D4D6943F32AE6F7F11D14D601DBB0E1A58919176EE512150366B6279AAF99" rel="stylesheet" type="text/css"/>
  <style>
   .illustrationClass {background-image:url(/adfs/portal/illustration/illustration.jpg?id=257D4C0B04565F2B2FF73324502BB15B2BF57E12E3FA6E8A702C374F2E2299DE);}
  </style>
 </head>
 <body class="body" dir="ltr">
  <div id="noScript" style="position:static; width:100%; height:100%; z-index:100">
   <h1>
    JavaScript required
   </h1>
   <p>
    JavaScript is required. This web browser does not support JavaScript or JavaScript in this web browser is not enabled.
   </p>
   <p>
    To find out if your web browser supports JavaScript or to enable JavaScript, see web browser help.
   </p>
  </div>
  <script language="JavaScript" type="text/javascript">
   document.getElementById("noScript").style.display = "none";
  </script>
  <div id="fullPage">
   <div class="float" id="brandingWrapper">
    <div id="branding">
    </div>
   </div>
   <div class="float" id="contentWrapper">
    <div id="content">
     <div id="header">
      <img alt="Emory University Login Server" class="logoImage" id="companyLogo" src="/adfs/portal/logo/logo.png?id=2EDC5A297C56A13FC33710767A86007BA803C5DEAFF90222D7C95D9E570E0764"/>
     </div>
     <div id="workArea">
      <div class="groupMargin" id="authArea">
       <div id="loginArea">
        <div class="groupMargin" id="loginMessage">
         Sign in with your organizational account
        </div>
        <form action="/adfs/ls/?client-request-id=4c7cf121-dc93-4c77-9254-c9bda21fdf72&amp;username=&amp;wa=wsignin1.0&amp;wtrealm=urn%3afederation%3aMicrosoftOnline&amp;wctx=estsredirect%3d2%26estsrequest%3drQIIAY2RPW_TQACGe3FrlC4g1J2COiGdfefvs8Tg5sPBDQopTbGzVI5951huepFjJ6TiBzBWsHVgqISEMjIhJH4AnSqxVSBWJgRMjDRiYewzPHrn570vYAnbW-gfClwaIsYwjOhy_Ud-e_3W3V_P26--zNov9z59PLvzLT8FVTri-VyicbkA94ZFMZ7YsszL4pDzTOKMpRFVDV2K-Ejms1B-D8AFAIuKaaiGZZrEQtggWFcUokh6qMeEaRgyZGhQI5EGiapZkEUDGpqqYuDQuqzc7DhlMVSW4nl6TH9Xqozno4MxnxSnAq9HhVfnTlJvbO-iNlKDp8l4uKu1XD90nz3qBoM5bBM1ZjuGr_T3S-Rj13Mg7XmtIkmChIdux9vrhttu3_SyZnfeSNNBLyK0l9XcbLpv1I8Z06Ycm9aBQqazhXCtdu8E8arAiB-dCyIf06M0vlgFf1bB2dpV1NcT_2vl84_mm3hjq5TfrpyvyYnp1Gt62nAyNHrc9KetCQnynXCo9INpZxw8zL0n_QaNzcNa9MCy8YkITkTxuwh-iuDFjZUP1Ws8cbm-oSBMIFIhRpvItBGysdX_Cw2" autocomplete="off" id="loginForm" method="post" novalidate="novalidate" onkeypress="if (event &amp;&amp; event.keyCode == 13) Login.submitLoginRequest();">
         <div class="fieldMargin error smallText" id="error">
          <span for="" id="errorText">
          </span>
         </div>
         <div id="formsAuthenticationArea">
          <div id="userNameArea">
           <label class="hidden" for="userNameInput" id="userNameInputLabel">
            User Account
           </label>
           <input autocomplete="off" class="text fullWidth" id="userNameInput" name="UserName" placeholder="someone@example.com" spellcheck="false" tabindex="1" type="email" value=""/>
          </div>
          <div id="passwordArea">
           <label class="hidden" for="passwordInput" id="passwordInputLabel">
            Password
           </label>
           <input autocomplete="off" class="text fullWidth" id="passwordInput" name="Password" placeholder="Password" tabindex="2" type="password"/>
          </div>
          <div id="kmsiArea" style="display:none">
           <input id="kmsiInput" name="Kmsi" tabindex="3" type="checkbox" value="true"/>
           <label for="kmsiInput">
            Keep me signed in
           </label>
          </div>
          <div class="submitMargin" id="submissionArea">
           <span class="submit" id="submitButton" onclick="return Login.submitLoginRequest();" onkeypress="if (event &amp;&amp; event.keyCode == 32) Login.submitLoginRequest();" role="button" tabindex="4">
            Sign in
           </span>
          </div>
         </div>
         <input id="optionForms" name="AuthMethod" type="hidden" value="FormsAuthentication"/>
        </form>
        <div id="authOptions">
         <form action="https://adfsfed.emory.edu:443/adfs/ls/?client-request-id=4c7cf121-dc93-4c77-9254-c9bda21fdf72&amp;username=&amp;wa=wsignin1.0&amp;wtrealm=urn%3afederation%3aMicrosoftOnline&amp;wctx=estsredirect%3d2%26estsrequest%3drQIIAY2RPW_TQACGe3FrlC4g1J2COiGdfefvs8Tg5sPBDQopTbGzVI5951huepFjJ6TiBzBWsHVgqISEMjIhJH4AnSqxVSBWJgRMjDRiYewzPHrn570vYAnbW-gfClwaIsYwjOhy_Ud-e_3W3V_P26--zNov9z59PLvzLT8FVTri-VyicbkA94ZFMZ7YsszL4pDzTOKMpRFVDV2K-Ejms1B-D8AFAIuKaaiGZZrEQtggWFcUokh6qMeEaRgyZGhQI5EGiapZkEUDGpqqYuDQuqzc7DhlMVSW4nl6TH9Xqozno4MxnxSnAq9HhVfnTlJvbO-iNlKDp8l4uKu1XD90nz3qBoM5bBM1ZjuGr_T3S-Rj13Mg7XmtIkmChIdux9vrhttu3_SyZnfeSNNBLyK0l9XcbLpv1I8Z06Ycm9aBQqazhXCtdu8E8arAiB-dCyIf06M0vlgFf1bB2dpV1NcT_2vl84_mm3hjq5TfrpyvyYnp1Gt62nAyNHrc9KetCQnynXCo9INpZxw8zL0n_QaNzcNa9MCy8YkITkTxuwh-iuDFjZUP1Ws8cbm-oSBMIFIhRpvItBGysdX_Cw2" id="options" method="post">
          <script type="text/javascript">
           function SelectOption(option) {
                    var i = document.getElementById('optionSelection');
                    i.value = option;
                    document.forms['options'].submit();
                    return false;
                }
          </script>
          <input id="optionSelection" name="AuthMethod" type="hidden"/>
          <div class="groupMargin" id="authOptionLinks">
          </div>
         </form>
        </div>
        <div class="groupMargin" id="introduction">
         <center>
          <h5>
           This system is intended for authorized users only, and unauthorized use is strictly prohibited.  By proceeding, you are acknowledging your agreement to these
           <a href="http://it.emory.edu/security/conditions.html" target="_blank">
            terms and conditions
           </a>
           .
          </h5>
          <br/>
          <p>
           <a href="https://mypassword.emory.edu/sspr" target="_blank">
            Password Maintenance
           </a>
           <a href="http://it.emory.edu/office365" target="_blank">
            Office 365 Help
           </a>
          </p>
          <br/>
          <p>
           <b>
            University Service Desk — 404-727-7777
            <br/>
            EHCIS Service Desk — 404-778-4357 (8-HELP)
           </b>
          </p>
         </center>
        </div>
        <script type="text/javascript">
         //<![CDATA[

            function Login() {
            }

            Login.userNameInput = 'userNameInput';
            Login.passwordInput = 'passwordInput';

            Login.initialize = function () {

                var u = new InputUtil();

                u.checkError();
                u.setInitialFocus(Login.userNameInput);
                u.setInitialFocus(Login.passwordInput);
            }();

            Login.submitLoginRequest = function () { 
                var u = new InputUtil();
                var e = new LoginErrors();

                var userName = document.getElementById(Login.userNameInput);
                var password = document.getElementById(Login.passwordInput);

                if (!userName.value || !userName.value.match('[@\\\\]')) {
                    u.setError(userName, e.userNameFormatError);
                    return false;
                }

                if (!password.value) {
                    u.setError(password, e.passwordEmpty);
                    return false;
                }

                if (password.value.length > maxPasswordLength) {
                    u.setError(password, e.passwordTooLong);
                    return false;
                }

                document.forms['loginForm'].submit();
                return false;
            };

            InputUtil.makePlaceholder(Login.userNameInput);
            InputUtil.makePlaceholder(Login.passwordInput);
        //]]>
        </script>
       </div>
      </div>
     </div>
     <div id="footerPlaceholder">
     </div>
    </div>
    <div id="footer">
     <div class="floatReverse" id="footerLinks">
      <div>
       <span id="copyright">
        © 2016 Microsoft
       </span>
      </div>
     </div>
    </div>
   </div>
  </div>
  <script type="text/javascript">
   //<![CDATA[
// Copyright (c) Microsoft Corporation.  All rights reserved.

var prev = null;

// Only build the radioButtons if Login.userNameInput exists

if ((typeof Login != 'undefined') && ('userNameInput' in Login)) {
    BuildRadioButtons();
}

// This file contains several workarounds on inconsistent browser behaviors that administrators may customize.
"use strict";

// iPhone email friendly keyboard does not include "\" key, use regular keyboard instead.
// Note change input type does not work on all versions of all browsers.
if (navigator.userAgent.match(/iPhone/i) != null) {
    var emails = document.querySelectorAll("input[type='email']");
    if (emails) {
        for (var i = 0; i < emails.length; i++) {
            emails[i].type = 'text';
        }
    }
}

// In the CSS file we set the ms-viewport to be consistent with the device dimensions,
// which is necessary for correct functionality of immersive IE.
// However, for Windows 8 phone we need to reset the ms-viewport's dimension to its original
// values (auto), otherwise the viewport dimensions will be wrong for Windows 8 phone.
// Windows 8 phone has agent string 'IEMobile 10.0'
if (navigator.userAgent.match(/IEMobile\/10\.0/)) {
    var msViewportStyle = document.createElement("style");
    msViewportStyle.appendChild(
        document.createTextNode(
            "@-ms-viewport{width:auto!important}"
        )
    );
    msViewportStyle.appendChild(
        document.createTextNode(
            "@-ms-viewport{height:auto!important}"
        )
    );
    document.getElementsByTagName("head")[0].appendChild(msViewportStyle);
}

// If the innerWidth is defined, use it as the viewport width.
if (window.innerWidth && window.outerWidth && window.innerWidth !== window.outerWidth) {
    var viewport = document.querySelector("meta[name=viewport]");
    viewport.setAttribute('content', 'width=' + window.innerWidth + 'px; initial-scale=1.0; maximum-scale=1.0');
}

// Gets the current style of a specific property for a specific element.
function getStyle(element, styleProp) {
    var propStyle = null;

    if (element && element.currentStyle) {
        propStyle = element.currentStyle[styleProp];
    }
    else if (element && window.getComputedStyle) {
        propStyle = document.defaultView.getComputedStyle(element, null).getPropertyValue(styleProp);
    }

    return propStyle;
}

//BEGIN CUSTOM CODE
function EmoryLoginErrors() {
    this.UserNameIsTooLong = 'Invalid Network ID - Network ID cannot be greater than 8 characters.';
    this.UserNameIsEmail = 'Do not enter your email address. Please enter your Network ID.'
}

//Replace MS provided function to add custom errors
if (typeof Login != 'undefined') {
    Login.submitLoginRequest = function () {
        var u = new InputUtil();
        var e = new LoginErrors();
        var m = new EmoryLoginErrors();

        var userName = document.getElementById(Login.userNameInput);
        var password = document.getElementById(Login.passwordInput);

        if ((userName.value.indexOf('@') > 0) && ((userName.value.split('@')[0].indexOf('.')) > 0)) {
            u.setError(userName, m.UserNameIsEmail);
            return false;
        }

        if ((userName.value.indexOf('@') > 0) && (userName.value.split('@')[0].length > 8)) {
            u.setError(userName, m.UserNameIsTooLong);
            userName.value=userName.value.split('@')[0]
            userName.focus();
            return false;
        }

        if ((userName.value.indexOf('\\') > 0) && (userName.value.split('\\')[1].length > 8)) {
            u.setError(userName, m.UserNameIsTooLong);
            userName.focus();
            return false;
        }

        if (!userName.value || !userName.value.match('[@\\\\]')) {
            u.setError(userName, e.userNameFormatError);
            userName.focus();
            return false;
        }

        if (!password.value) {
            u.setError(password, e.passwordEmpty);
            return false;
        }

        if (password.value.length > maxPasswordLength) {
            u.setError(password, e.passwordTooLong);
            return false;
        }

        document.forms['loginForm'].submit();
        return false;
    };
}
//Call UPN Function
if (document.getElementById('submitButton') && (typeof Login != 'undefined') && ('submitLoginRequest' in Login)) {
    document.getElementById('submitButton').onclick = new Function('AppendUPN(); return Login.submitLoginRequest();');
}

if (document.getElementById('passwordInput')) {
    document.getElementById('passwordInput').onkeypress = runScript;
}


function getQueryStrings() {
    var assoc = {};
    var decode = function (s) { return decodeURIComponent(s.replace(/\+/g, " ")); };
    var queryString = location.search.substring(1);
    var keyValues = queryString.split('&');

    for (var i in keyValues) {
        var key = keyValues[i].split('=');
        if (key.length > 1) {
            assoc[decode(key[0])] = decode(key[1]);
        }
    }

    return assoc;
}

//UPN Function
var AppendUPN = function () {
    var userName = document.getElementById(Login.userNameInput);
    var lowerUserName = userName.value.toLowerCase();
    var loginType;

    var radios = document.getElementsByName('radioGroup');

    for (var i = 0, length = radios.length; i < length; i++) {
        if (radios[i].checked) {
            loginType = radios[i].value;
            break;
        }
    }

    var upnEU = lowerUserName.lastIndexOf('@emory.edu');
    var upnHC = lowerUserName.lastIndexOf('@eushc.org');
    var upnAtSign = lowerUserName.indexOf('@');

    if (loginType == "univ") {
        if (lowerUserName.indexOf('\\') != -1) {
            // Do nothing
        }
        else if (upnEU == -1 && upnAtSign == -1) {
            userName.value = userName.value + '@emory.edu';
        }
        else if (upnAtSign != -1 && upnHC == -1) {
            userName.value = userName.value.substring(0, upnAtSign) + '@emory.edu';
        }
    }

    if (loginType == "hc") {
        if (lowerUserName.indexOf('\\') != -1) {
            // Do nothing
        }
        else if (upnHC == -1 && upnAtSign == -1) {
            userName.value = userName.value + '@eushc.org';
        }
        else if (upnAtSign != -1 && upnEU == -1) {
            userName.value = userName.value.substring(0, upnAtSign) + '@eushc.org';
        }
    }
}

//Catch enter key
function runScript(e) {
    if (e.keyCode == 13) {
        AppendUPN();
        return Login.submitLoginRequest();
    }
}

function clearLoginId(myRadio) {

    if (myRadio.value !== prev) {

        var userNameInputElement = document.getElementById(Login.userNameInput);

        if (userNameInputElement) {
            userNameInputElement.value = "";
        }

        var errorElement = document.getElementById('error');

        if (errorElement) {
            errorElement.style.display = 'none';
        }

    }

    prev = myRadio.value;
}

//Build radio buttons
function BuildRadioButtons() {

    var qs = getQueryStrings();
    var myUsername = qs["username"];
    var EnteredUserName = document.getElementById(Login.userNameInput);
    var EnteredLowerUserName = EnteredUserName.value.toLowerCase();

    var radio1 = document.createElement('input');
    radio1.setAttribute('type', 'radio');
    radio1.setAttribute('value', 'univ');
    radio1.setAttribute('name', 'radioGroup');
    radio1.setAttribute('id', 'myRadioId1');
    radio1.setAttribute('onClick', 'clearLoginId(this);');

    var radio2 = document.createElement('input');
    radio2.setAttribute('type', 'radio');
    radio2.setAttribute('value', 'hc');
    radio2.setAttribute('name', 'radioGroup');
    radio2.setAttribute('id', 'myRadioId2');
    radio2.setAttribute('onClick', 'clearLoginId(this);');

    if (typeof myUsername === 'string') {
        var locHC = myUsername.lastIndexOf('@eushc.org');
    } else if (typeof EnteredLowerUserName === 'string') {
        var locHC = EnteredLowerUserName.lastIndexOf('@eushc.org');
    } else {
        var locHC = -1;
    }

    if (locHC == -1) {
        radio1.setAttribute('checked', 'true');
        prev = "univ"
    }
    else {
        radio2.setAttribute('checked', 'true');
        prev = "hc"
    }

    var label1 = document.createElement('label');
    label1.htmlFor = radio1.id;
    label1.innerHTML = ' Emory University';

    var label2 = document.createElement('label');
    label2.htmlFor = radio2.id;
    label2.innerHTML = ' Emory Healthcare';

    var container = document.getElementById('loginMessage');

    container.innerHTML = "Primary Organization <br><br>";
    container.appendChild(radio1);
    container.appendChild(label1);
    container.innerHTML = container.innerHTML + "<br>";
    container.appendChild(radio2);
    container.appendChild(label2);

}

// Change the sample text on the JRIC login page

if ((typeof Login != 'undefined') && ('userNameInput' in Login)) {

    var userNameInput = document.getElementById(Login.userNameInput);

    if (userNameInput) {
        userNameInput.placeholder = 'Network ID';
    }
}

// Display username/password box labels
var userNameLabel = document.getElementById('userNameInputLabel');
if (userNameLabel) {
    userNameLabel.className = "notHidden";
    userNameLabel.innerHTML = "Network ID";
}

var passwordInputLabel = document.getElementById('passwordInputLabel');
if (passwordInputLabel) {
    passwordInputLabel.className = "notHidden";
}

var copyrightText = document.getElementById('copyright');
if (copyrightText) {
    copyrightText.innerHTML = "&#169; Emory University | 201 Dowman Dr., Atlanta, Georgia 30322 USA 404.727.6123";
}

// END OF CUSTOM CODE

// The script below is used for downloading the illustration image
// only when the branding is displaying. This script work together
// with the code in PageBase.cs that sets the html inline style
// containing the class 'illustrationClass' with the background image.
var computeLoadIllustration = function () {
    var branding = document.getElementById("branding");
    var brandingDisplay = getStyle(branding, "display");
    var brandingWrapperDisplay = getStyle(document.getElementById("brandingWrapper"), "display");

    if (brandingDisplay && brandingDisplay !== "none" &&
        brandingWrapperDisplay && brandingWrapperDisplay !== "none") {
        var newClass = "illustrationClass";

        if (branding.classList && branding.classList.add) {
            branding.classList.add(newClass);
        } else if (branding.className !== undefined) {
            branding.className += " " + newClass;
        }
        if (window.removeEventListener) {
            window.removeEventListener('load', computeLoadIllustration, false);
            window.removeEventListener('resize', computeLoadIllustration, false);
        }
        else if (window.detachEvent) {
            window.detachEvent('onload', computeLoadIllustration);
            window.detachEvent('onresize', computeLoadIllustration);
        }
    }
};

if (window.addEventListener) {
    window.addEventListener('resize', computeLoadIllustration, false);
    window.addEventListener('load', computeLoadIllustration, false);
}
else if (window.attachEvent) {
    window.attachEvent('onresize', computeLoadIllustration);
    window.attachEvent('onload', computeLoadIllustration);
}
// Function to change illustration image. Usage example below.
function SetIllustrationImage(imageUri) {
    var illustrationImageClass = '.illustrationClass {background-image:url(' + imageUri + ');}';

    var css = document.createElement('style');
    css.type = 'text/css';

    if (css.styleSheet) css.styleSheet.cssText = illustrationImageClass;
    else css.appendChild(document.createTextNode(illustrationImageClass));

    document.getElementsByTagName("head")[0].appendChild(css);
}

// Example to change illustration image on HRD page after adding the image to active theme:
// PSH> Set-AdfsWebTheme -TargetName <activeTheme> -AdditionalFileResource @{uri='/adfs/portal/images/hrd.jpg';path='.\hrd.jpg'}
//
//if (typeof HRD != 'undefined') {
//    SetIllustrationImage('/adfs/portal/images/hrd.jpg');
//}
//]]>
  </script>
 </body>
</html>

