https://globalacademy.hms.harvard.edu
<!DOCTYPE html>
<!--[if lte IE 9]><html class="ie ie9 lte9" lang="en"><![endif]-->
<!--[if !IE]><!-->
<html lang="en">
 <!--<![endif]-->
 <head dir="ltr">
  <meta charset="utf-8"/>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <script type="text/javascript">
   (window.NREUM||(NREUM={})).loader_config={xpid:"XA4GVl5ACwAEV1JQAA=="};window.NREUM||(NREUM={}),__nr_require=function(t,n,e){function r(e){if(!n[e]){var o=n[e]={exports:{}};t[e][0].call(o.exports,function(n){var o=t[e][1][n];return r(o||n)},o,o.exports)}return n[e].exports}if("function"==typeof __nr_require)return __nr_require;for(var o=0;o<e.length;o++)r(e[o]);return r}({1:[function(t,n,e){function r(t){try{s.console&&console.log(t)}catch(n){}}var o,i=t("ee"),a=t(16),s={};try{o=localStorage.getItem("__nr_flags").split(","),console&&"function"==typeof console.log&&(s.console=!0,o.indexOf("dev")!==-1&&(s.dev=!0),o.indexOf("nr_dev")!==-1&&(s.nrDev=!0))}catch(c){}s.nrDev&&i.on("internal-error",function(t){r(t.stack)}),s.dev&&i.on("fn-err",function(t,n,e){r(e.stack)}),s.dev&&(r("NR AGENT IN DEVELOPMENT MODE"),r("flags: "+a(s,function(t,n){return t}).join(", ")))},{}],2:[function(t,n,e){function r(t,n,e,r,s){try{p?p-=1:o(s||new UncaughtException(t,n,e),!0)}catch(f){try{i("ierr",[f,c.now(),!0])}catch(d){}}return"function"==typeof u&&u.apply(this,a(arguments))}function UncaughtException(t,n,e){this.message=t||"Uncaught error with no additional information",this.sourceURL=n,this.line=e}function o(t,n){var e=n?null:c.now();i("err",[t,e])}var i=t("handle"),a=t(17),s=t("ee"),c=t("loader"),f=t("gos"),u=window.onerror,d=!1,l="nr@seenError",p=0;c.features.err=!0,t(1),window.onerror=r;try{throw new Error}catch(h){"stack"in h&&(t(8),t(7),"addEventListener"in window&&t(5),c.xhrWrappable&&t(9),d=!0)}s.on("fn-start",function(t,n,e){d&&(p+=1)}),s.on("fn-err",function(t,n,e){d&&!e[l]&&(f(e,l,function(){return!0}),this.thrown=!0,o(e))}),s.on("fn-end",function(){d&&!this.thrown&&p>0&&(p-=1)}),s.on("internal-error",function(t){i("ierr",[t,c.now(),!0])})},{}],3:[function(t,n,e){t("loader").features.ins=!0},{}],4:[function(t,n,e){function r(t){}if(window.performance&&window.performance.timing&&window.performance.getEntriesByType){var o=t("ee"),i=t("handle"),a=t(8),s=t(7),c="learResourceTimings",f="addEventListener",u="resourcetimingbufferfull",d="bstResource",l="resource",p="-start",h="-end",m="fn"+p,v="fn"+h,w="bstTimer",y="pushState",g=t("loader");g.features.stn=!0,t(6);var b=NREUM.o.EV;o.on(m,function(t,n){var e=t[0];e instanceof b&&(this.bstStart=g.now())}),o.on(v,function(t,n){var e=t[0];e instanceof b&&i("bst",[e,n,this.bstStart,g.now()])}),a.on(m,function(t,n,e){this.bstStart=g.now(),this.bstType=e}),a.on(v,function(t,n){i(w,[n,this.bstStart,g.now(),this.bstType])}),s.on(m,function(){this.bstStart=g.now()}),s.on(v,function(t,n){i(w,[n,this.bstStart,g.now(),"requestAnimationFrame"])}),o.on(y+p,function(t){this.time=g.now(),this.startPath=location.pathname+location.hash}),o.on(y+h,function(t){i("bstHist",[location.pathname+location.hash,this.startPath,this.time])}),f in window.performance&&(window.performance["c"+c]?window.performance[f](u,function(t){i(d,[window.performance.getEntriesByType(l)]),window.performance["c"+c]()},!1):window.performance[f]("webkit"+u,function(t){i(d,[window.performance.getEntriesByType(l)]),window.performance["webkitC"+c]()},!1)),document[f]("scroll",r,{passive:!0}),document[f]("keypress",r,!1),document[f]("click",r,!1)}},{}],5:[function(t,n,e){function r(t){for(var n=t;n&&!n.hasOwnProperty(u);)n=Object.getPrototypeOf(n);n&&o(n)}function o(t){s.inPlace(t,[u,d],"-",i)}function i(t,n){return t[1]}var a=t("ee").get("events"),s=t(19)(a,!0),c=t("gos"),f=XMLHttpRequest,u="addEventListener",d="removeEventListener";n.exports=a,"getPrototypeOf"in Object?(r(document),r(window),r(f.prototype)):f.prototype.hasOwnProperty(u)&&(o(window),o(f.prototype)),a.on(u+"-start",function(t,n){var e=t[1],r=c(e,"nr@wrapped",function(){function t(){if("function"==typeof e.handleEvent)return e.handleEvent.apply(e,arguments)}var n={object:t,"function":e}[typeof e];return n?s(n,"fn-",null,n.name||"anonymous"):e});this.wrapped=t[1]=r}),a.on(d+"-start",function(t){t[1]=this.wrapped||t[1]})},{}],6:[function(t,n,e){var r=t("ee").get("history"),o=t(19)(r);n.exports=r,o.inPlace(window.history,["pushState","replaceState"],"-")},{}],7:[function(t,n,e){var r=t("ee").get("raf"),o=t(19)(r),i="equestAnimationFrame";n.exports=r,o.inPlace(window,["r"+i,"mozR"+i,"webkitR"+i,"msR"+i],"raf-"),r.on("raf-start",function(t){t[0]=o(t[0],"fn-")})},{}],8:[function(t,n,e){function r(t,n,e){t[0]=a(t[0],"fn-",null,e)}function o(t,n,e){this.method=e,this.timerDuration=isNaN(t[1])?0:+t[1],t[0]=a(t[0],"fn-",this,e)}var i=t("ee").get("timer"),a=t(19)(i),s="setTimeout",c="setInterval",f="clearTimeout",u="-start",d="-";n.exports=i,a.inPlace(window,[s,"setImmediate"],s+d),a.inPlace(window,[c],c+d),a.inPlace(window,[f,"clearImmediate"],f+d),i.on(c+u,r),i.on(s+u,o)},{}],9:[function(t,n,e){function r(t,n){d.inPlace(n,["onreadystatechange"],"fn-",s)}function o(){var t=this,n=u.context(t);t.readyState>3&&!n.resolved&&(n.resolved=!0,u.emit("xhr-resolved",[],t)),d.inPlace(t,y,"fn-",s)}function i(t){g.push(t),h&&(x?x.then(a):v?v(a):(E=-E,O.data=E))}function a(){for(var t=0;t<g.length;t++)r([],g[t]);g.length&&(g=[])}function s(t,n){return n}function c(t,n){for(var e in t)n[e]=t[e];return n}t(5);var f=t("ee"),u=f.get("xhr"),d=t(19)(u),l=NREUM.o,p=l.XHR,h=l.MO,m=l.PR,v=l.SI,w="readystatechange",y=["onload","onerror","onabort","onloadstart","onloadend","onprogress","ontimeout"],g=[];n.exports=u;var b=window.XMLHttpRequest=function(t){var n=new p(t);try{u.emit("new-xhr",[n],n),n.addEventListener(w,o,!1)}catch(e){try{u.emit("internal-error",[e])}catch(r){}}return n};if(c(p,b),b.prototype=p.prototype,d.inPlace(b.prototype,["open","send"],"-xhr-",s),u.on("send-xhr-start",function(t,n){r(t,n),i(n)}),u.on("open-xhr-start",r),h){var x=m&&m.resolve();if(!v&&!m){var E=1,O=document.createTextNode(E);new h(a).observe(O,{characterData:!0})}}else f.on("fn-end",function(t){t[0]&&t[0].type===w||a()})},{}],10:[function(t,n,e){function r(t){var n=this.params,e=this.metrics;if(!this.ended){this.ended=!0;for(var r=0;r<d;r++)t.removeEventListener(u[r],this.listener,!1);if(!n.aborted){if(e.duration=a.now()-this.startTime,4===t.readyState){n.status=t.status;var i=o(t,this.lastSize);if(i&&(e.rxSize=i),this.sameOrigin){var c=t.getResponseHeader("X-NewRelic-App-Data");c&&(n.cat=c.split(", ").pop())}}else n.status=0;e.cbTime=this.cbTime,f.emit("xhr-done",[t],t),s("xhr",[n,e,this.startTime])}}}function o(t,n){var e=t.responseType;if("json"===e&&null!==n)return n;var r="arraybuffer"===e||"blob"===e||"json"===e?t.response:t.responseText;return h(r)}function i(t,n){var e=c(n),r=t.params;r.host=e.hostname+":"+e.port,r.pathname=e.pathname,t.sameOrigin=e.sameOrigin}var a=t("loader");if(a.xhrWrappable){var s=t("handle"),c=t(11),f=t("ee"),u=["load","error","abort","timeout"],d=u.length,l=t("id"),p=t(14),h=t(13),m=window.XMLHttpRequest;a.features.xhr=!0,t(9),f.on("new-xhr",function(t){var n=this;n.totalCbs=0,n.called=0,n.cbTime=0,n.end=r,n.ended=!1,n.xhrGuids={},n.lastSize=null,p&&(p>34||p<10)||window.opera||t.addEventListener("progress",function(t){n.lastSize=t.loaded},!1)}),f.on("open-xhr-start",function(t){this.params={method:t[0]},i(this,t[1]),this.metrics={}}),f.on("open-xhr-end",function(t,n){"loader_config"in NREUM&&"xpid"in NREUM.loader_config&&this.sameOrigin&&n.setRequestHeader("X-NewRelic-ID",NREUM.loader_config.xpid)}),f.on("send-xhr-start",function(t,n){var e=this.metrics,r=t[0],o=this;if(e&&r){var i=h(r);i&&(e.txSize=i)}this.startTime=a.now(),this.listener=function(t){try{"abort"===t.type&&(o.params.aborted=!0),("load"!==t.type||o.called===o.totalCbs&&(o.onloadCalled||"function"!=typeof n.onload))&&o.end(n)}catch(e){try{f.emit("internal-error",[e])}catch(r){}}};for(var s=0;s<d;s++)n.addEventListener(u[s],this.listener,!1)}),f.on("xhr-cb-time",function(t,n,e){this.cbTime+=t,n?this.onloadCalled=!0:this.called+=1,this.called!==this.totalCbs||!this.onloadCalled&&"function"==typeof e.onload||this.end(e)}),f.on("xhr-load-added",function(t,n){var e=""+l(t)+!!n;this.xhrGuids&&!this.xhrGuids[e]&&(this.xhrGuids[e]=!0,this.totalCbs+=1)}),f.on("xhr-load-removed",function(t,n){var e=""+l(t)+!!n;this.xhrGuids&&this.xhrGuids[e]&&(delete this.xhrGuids[e],this.totalCbs-=1)}),f.on("addEventListener-end",function(t,n){n instanceof m&&"load"===t[0]&&f.emit("xhr-load-added",[t[1],t[2]],n)}),f.on("removeEventListener-end",function(t,n){n instanceof m&&"load"===t[0]&&f.emit("xhr-load-removed",[t[1],t[2]],n)}),f.on("fn-start",function(t,n,e){n instanceof m&&("onload"===e&&(this.onload=!0),("load"===(t[0]&&t[0].type)||this.onload)&&(this.xhrCbStart=a.now()))}),f.on("fn-end",function(t,n){this.xhrCbStart&&f.emit("xhr-cb-time",[a.now()-this.xhrCbStart,this.onload,n],n)})}},{}],11:[function(t,n,e){n.exports=function(t){var n=document.createElement("a"),e=window.location,r={};n.href=t,r.port=n.port;var o=n.href.split("://");!r.port&&o[1]&&(r.port=o[1].split("/")[0].split("@").pop().split(":")[1]),r.port&&"0"!==r.port||(r.port="https"===o[0]?"443":"80"),r.hostname=n.hostname||e.hostname,r.pathname=n.pathname,r.protocol=o[0],"/"!==r.pathname.charAt(0)&&(r.pathname="/"+r.pathname);var i=!n.protocol||":"===n.protocol||n.protocol===e.protocol,a=n.hostname===document.domain&&n.port===e.port;return r.sameOrigin=i&&(!n.hostname||a),r}},{}],12:[function(t,n,e){function r(){}function o(t,n,e){return function(){return i(t,[f.now()].concat(s(arguments)),n?null:this,e),n?void 0:this}}var i=t("handle"),a=t(16),s=t(17),c=t("ee").get("tracer"),f=t("loader"),u=NREUM;"undefined"==typeof window.newrelic&&(newrelic=u);var d=["setPageViewName","setCustomAttribute","setErrorHandler","finished","addToTrace","inlineHit","addRelease"],l="api-",p=l+"ixn-";a(d,function(t,n){u[n]=o(l+n,!0,"api")}),u.addPageAction=o(l+"addPageAction",!0),u.setCurrentRouteName=o(l+"routeName",!0),n.exports=newrelic,u.interaction=function(){return(new r).get()};var h=r.prototype={createTracer:function(t,n){var e={},r=this,o="function"==typeof n;return i(p+"tracer",[f.now(),t,e],r),function(){if(c.emit((o?"":"no-")+"fn-start",[f.now(),r,o],e),o)try{return n.apply(this,arguments)}catch(t){throw c.emit("fn-err",[arguments,this,t],e),t}finally{c.emit("fn-end",[f.now()],e)}}}};a("actionText,setName,setAttribute,save,ignore,onEnd,getContext,end,get".split(","),function(t,n){h[n]=o(p+n)}),newrelic.noticeError=function(t,n){"string"==typeof t&&(t=new Error(t)),i("err",[t,f.now(),!1,n])}},{}],13:[function(t,n,e){n.exports=function(t){if("string"==typeof t&&t.length)return t.length;if("object"==typeof t){if("undefined"!=typeof ArrayBuffer&&t instanceof ArrayBuffer&&t.byteLength)return t.byteLength;if("undefined"!=typeof Blob&&t instanceof Blob&&t.size)return t.size;if(!("undefined"!=typeof FormData&&t instanceof FormData))try{return JSON.stringify(t).length}catch(n){return}}}},{}],14:[function(t,n,e){var r=0,o=navigator.userAgent.match(/Firefox[\/\s](\d+\.\d+)/);o&&(r=+o[1]),n.exports=r},{}],15:[function(t,n,e){function r(t,n){if(!o)return!1;if(t!==o)return!1;if(!n)return!0;if(!i)return!1;for(var e=i.split("."),r=n.split("."),a=0;a<r.length;a++)if(r[a]!==e[a])return!1;return!0}var o=null,i=null,a=/Version\/(\S+)\s+Safari/;if(navigator.userAgent){var s=navigator.userAgent,c=s.match(a);c&&s.indexOf("Chrome")===-1&&s.indexOf("Chromium")===-1&&(o="Safari",i=c[1])}n.exports={agent:o,version:i,match:r}},{}],16:[function(t,n,e){function r(t,n){var e=[],r="",i=0;for(r in t)o.call(t,r)&&(e[i]=n(r,t[r]),i+=1);return e}var o=Object.prototype.hasOwnProperty;n.exports=r},{}],17:[function(t,n,e){function r(t,n,e){n||(n=0),"undefined"==typeof e&&(e=t?t.length:0);for(var r=-1,o=e-n||0,i=Array(o<0?0:o);++r<o;)i[r]=t[n+r];return i}n.exports=r},{}],18:[function(t,n,e){n.exports={exists:"undefined"!=typeof window.performance&&window.performance.timing&&"undefined"!=typeof window.performance.timing.navigationStart}},{}],19:[function(t,n,e){function r(t){return!(t&&t instanceof Function&&t.apply&&!t[a])}var o=t("ee"),i=t(17),a="nr@original",s=Object.prototype.hasOwnProperty,c=!1;n.exports=function(t,n){function e(t,n,e,o){function nrWrapper(){var r,a,s,c;try{a=this,r=i(arguments),s="function"==typeof e?e(r,a):e||{}}catch(f){l([f,"",[r,a,o],s])}u(n+"start",[r,a,o],s);try{return c=t.apply(a,r)}catch(d){throw u(n+"err",[r,a,d],s),d}finally{u(n+"end",[r,a,c],s)}}return r(t)?t:(n||(n=""),nrWrapper[a]=t,d(t,nrWrapper),nrWrapper)}function f(t,n,o,i){o||(o="");var a,s,c,f="-"===o.charAt(0);for(c=0;c<n.length;c++)s=n[c],a=t[s],r(a)||(t[s]=e(a,f?s+o:o,i,s))}function u(e,r,o){if(!c||n){var i=c;c=!0;try{t.emit(e,r,o,n)}catch(a){l([a,e,r,o])}c=i}}function d(t,n){if(Object.defineProperty&&Object.keys)try{var e=Object.keys(t);return e.forEach(function(e){Object.defineProperty(n,e,{get:function(){return t[e]},set:function(n){return t[e]=n,n}})}),n}catch(r){l([r])}for(var o in t)s.call(t,o)&&(n[o]=t[o]);return n}function l(n){try{t.emit("internal-error",n)}catch(e){}}return t||(t=o),e.inPlace=f,e.flag=a,e}},{}],ee:[function(t,n,e){function r(){}function o(t){function n(t){return t&&t instanceof r?t:t?c(t,s,i):i()}function e(e,r,o,i){if(!l.aborted||i){t&&t(e,r,o);for(var a=n(o),s=m(e),c=s.length,f=0;f<c;f++)s[f].apply(a,r);var d=u[g[e]];return d&&d.push([b,e,r,a]),a}}function p(t,n){y[t]=m(t).concat(n)}function h(t,n){var e=y[t];if(e)for(var r=0;r<e.length;r++)e[r]===n&&e.splice(r,1)}function m(t){return y[t]||[]}function v(t){return d[t]=d[t]||o(e)}function w(t,n){f(t,function(t,e){n=n||"feature",g[e]=n,n in u||(u[n]=[])})}var y={},g={},b={on:p,addEventListener:p,removeEventListener:h,emit:e,get:v,listeners:m,context:n,buffer:w,abort:a,aborted:!1};return b}function i(){return new r}function a(){(u.api||u.feature)&&(l.aborted=!0,u=l.backlog={})}var s="nr@context",c=t("gos"),f=t(16),u={},d={},l=n.exports=o();l.backlog=u},{}],gos:[function(t,n,e){function r(t,n,e){if(o.call(t,n))return t[n];var r=e();if(Object.defineProperty&&Object.keys)try{return Object.defineProperty(t,n,{value:r,writable:!0,enumerable:!1}),r}catch(i){}return t[n]=r,r}var o=Object.prototype.hasOwnProperty;n.exports=r},{}],handle:[function(t,n,e){function r(t,n,e,r){o.buffer([t],r),o.emit(t,n,e)}var o=t("ee").get("handle");n.exports=r,r.ee=o},{}],id:[function(t,n,e){function r(t){var n=typeof t;return!t||"object"!==n&&"function"!==n?-1:t===window?0:a(t,i,function(){return o++})}var o=1,i="nr@id",a=t("gos");n.exports=r},{}],loader:[function(t,n,e){function r(){if(!E++){var t=x.info=NREUM.info,n=p.getElementsByTagName("script")[0];if(setTimeout(u.abort,3e4),!(t&&t.licenseKey&&t.applicationID&&n))return u.abort();f(g,function(n,e){t[n]||(t[n]=e)}),c("mark",["onload",a()+x.offset],null,"api");var e=p.createElement("script");e.src="https://"+t.agent,n.parentNode.insertBefore(e,n)}}function o(){"complete"===p.readyState&&i()}function i(){c("mark",["domContent",a()+x.offset],null,"api")}function a(){return O.exists&&performance.now?Math.round(performance.now()):(s=Math.max((new Date).getTime(),s))-x.offset}var s=(new Date).getTime(),c=t("handle"),f=t(16),u=t("ee"),d=t(15),l=window,p=l.document,h="addEventListener",m="attachEvent",v=l.XMLHttpRequest,w=v&&v.prototype;NREUM.o={ST:setTimeout,SI:l.setImmediate,CT:clearTimeout,XHR:v,REQ:l.Request,EV:l.Event,PR:l.Promise,MO:l.MutationObserver};var y=""+location,g={beacon:"bam.nr-data.net",errorBeacon:"bam.nr-data.net",agent:"js-agent.newrelic.com/nr-1118.min.js"},b=v&&w&&w[h]&&!/CriOS/.test(navigator.userAgent),x=n.exports={offset:s,now:a,origin:y,features:{},xhrWrappable:b,userAgent:d};t(12),p[h]?(p[h]("DOMContentLoaded",i,!1),l[h]("load",r,!1)):(p[m]("onreadystatechange",o),l[m]("onload",r)),c("mark",["firstbyte",s],null,"api");var E=0,O=t(18)},{}]},{},["loader",2,10,4,3]);
  </script>
  <script type="text/javascript">
   window.NREUM||(NREUM={});NREUM.info={"beacon":"bam.nr-data.net","queueTime":1,"licenseKey":"1beac94c95","agent":"","transactionName":"NQQGYUZWDUNSVUMPWQxOIkBaVBdZXFgYCUYHDwFRTBkAX0FTGQJcAw8DWlVHE0MdQ0QDRD0AEUFcWU1GWlNAFRgODgNcWmgFX0FbDQpZBQgKalVZB29BU1APRRYTBUFdWA1vVVlFCw==","atts":"GUMRFw5MQVNcWVwPUxE+EFpAVg9vQF9NAxRYUUgXRlISRVZFQzlcFRU7VltYCFlWFA1EWA0VSUdRRhZVQEJSAhROQxZQRUIGQ0dpQhVTED4FUlFZFxIJFHoJTAsNCFQbAk0AERoVE0UHEztcUBVZEn1ZWQMUTkMWUEVCBkNHaVYTQgo+EExEUkEKEUNZB0MWCQFbQF4AUUdTU0RLHw==","applicationID":"3343327","errorBeacon":"bam.nr-data.net","applicationTime":163}
  </script>
  <meta content="width=device-width, initial-scale=1" name="viewport"/>
  <title>
   Sign in or Create Account
 | Harvard Medical School CME Online
  </title>
  <script src="https://prod-edxapp.edx-cdn.org/static/js/i18n/en/djangojs.e37eef1ffc63.js" type="text/javascript">
  </script>
  <script src="https://prod-edxapp.edx-cdn.org/static/js/ie11_find_array.bd1c6dc7a133.js" type="text/javascript">
  </script>
  <link href="https://prod-edxapp.edx-cdn.org/static/cmeonline.hms.harvard.edu/images/favicon.a1c2c3fa3d09.ico" rel="icon" type="image/x-icon"/>
  <link href="https://prod-edxapp.edx-cdn.org/static/cmeonline.hms.harvard.edu/css/lms-style-vendor.7efc5b554ed0.css" rel="stylesheet" type="text/css"/>
  <link href="https://prod-edxapp.edx-cdn.org/static/cmeonline.hms.harvard.edu/css/lms-main-v1.127851fd5376.css" rel="stylesheet" type="text/css"/>
  <script charset="utf-8" src="https://prod-edxapp.edx-cdn.org/static/js/lms-base-vendor.cb449c35a4fc.js" type="text/javascript">
  </script>
  <script charset="utf-8" src="https://prod-edxapp.edx-cdn.org/static/js/lms-base-application.2062f84b79fa.js" type="text/javascript">
  </script>
  <script src="https://prod-edxapp.edx-cdn.org/static/bundles/commons.c5ffc903a4b382f7c8cb.7dd2ab77d852.js" type="text/javascript">
  </script>
  <script>
   window.baseUrl = "https://prod\u002Dedxapp.edx\u002Dcdn.org/static/";
    (function (require) {
      require.config({
          baseUrl: window.baseUrl
      });
    }).call(this, require || RequireJS.require);
  </script>
  <script src="https://prod-edxapp.edx-cdn.org/static/lms/js/require-config.38226099c6ad.js" type="text/javascript">
  </script>
  <script type="text/javascript">
   (function (require) {
          require.config({
              paths: {
                'js/courseware/courseware_factory': 'js/courseware/courseware_factory.1504fc10caef',
'draggabilly': 'js/vendor/draggabilly.26caba6f7187',
'js/courseware/toggle_element_visibility': 'js/courseware/toggle_element_visibility.d5f10bc65ed0',
'hls': 'common/js/vendor/hls.8f15a0109b05',
'js/courseware/link_clicked_events': 'js/courseware/link_clicked_events',
'moment': 'common/js/vendor/moment-with-locales.084396f4103c',
'moment-timezone': 'common/js/vendor/moment-timezone-with-data.60142e6c4416',
'js/student_account/logistration_factory': 'js/student_account/logistration_factory.291ea4b56c0f',
'js/groups/views/cohorts_dashboard_factory': 'js/groups/views/cohorts_dashboard_factory.7f46663f97b4',
'js/dateutil_factory': 'js/dateutil_factory.841c29e02056',
'course_bookmarks/js/views/bookmark_button': 'course_bookmarks/js/views/bookmark_button.d4cfaf3361fa',
'js/courseware/accordion_events': 'js/courseware/accordion_events.6064c7809de5',
'js/views/message_banner': 'js/views/message_banner.bc5a1361d5f5',
'js/groups/discussions_management/discussions_dashboard_factory': 'js/discussions_management/views/discussions_dashboard_factory.2e10d9097343',
'js/courseware/course_info_events': 'js/courseware/course_info_events.2fc35b57627f'
            }
          });
        }).call(this, require || RequireJS.require);
  </script>
  <script id="user-metadata" type="application/json">
   {"username": "", "enrollment_mode": null, "upgrade_link": null, "user_id": null, "course_start": null, "upgrade_deadline": null, "partition_groups": null, "has_non_audit_enrollments": null, "pacing_type": null, "upgrade_price": null, "course_id": null, "has_staff_access": null, "forum_roles": null, "enrollment_time": null, "schedule_start": null, "course_end": null, "program_key_fields": null}
  </script>
  <!-- Remove "with professional certificate" text from order name on order history page -->
  <script>
   $(document).ready(function() {
    var removeHeadingIfNoOrganizationLogo = function($nodes){
        var organizationImg = $nodes.find('.authoring-organizations .orgs img[src!=""]');
        if (organizationImg.length === 0){
            $nodes.find('.authoring-organizations').remove();
        }
    };

    var $accountSettingsTarget = $('.wrapper-account-settings');
    if ($accountSettingsTarget.length) {
      var accountSettingsObserver = new MutationObserver(function (mutations, obv) {
        mutations.forEach(function (mutation) {
          var newNodes = mutation.addedNodes; // DOM NodeList
          if (newNodes !== null) { // If there are new nodes added
            var $orderTitles = $(newNodes).find('.u-field-order-title');
            $orderTitles.text(function () {
              return $(this).text().replace('with professional certificate', '');
            });
            $orderTitles.show();
          }
        });
      });
      accountSettingsObserver.observe($accountSettingsTarget[0], {childList: true, subtree: true});
    }

    // Program Detail Page
    var $programDetailsTarget = $('.js-program-details-wrapper');
    if ($programDetailsTarget.length) {
      var programDetailsObserver = new MutationObserver(function (mutations, obv) {
        mutations.forEach(function (mutation) {
          var newNodes = mutation.addedNodes; // DOM NodeList
          if (newNodes !== null) { // If there are new nodes added
            var $newNodes = $(newNodes);

            // Remove 'verified' from program heading message
            var headingMessage = $newNodes.find('.program-heading-message');
            if (headingMessage.length){
              headingMessage.html(headingMessage.html().replace('verified certificate', 'certificate'));
            }

            //remove the heading "Institutions" if organization logo is missing
            removeHeadingIfNoOrganizationLogo($newNodes);
          }
        });
      });
      programDetailsObserver.observe($programDetailsTarget[0], {childList: true, subtree: true});
    }
  });
  </script>
  <!-- Google Tag Manager -->
  <script>
   (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':
new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],
j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=
'//www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);
})(window,document,'script','dataLayer','GTM-MP2VGKZ');
  </script>
  <!-- End Google Tag Manager -->
  <script src="//cdn.optimizely.com/js/1743970571.js">
  </script>
  <!-- begin Segment -->
  <script type="text/javascript">
   // Asynchronously load Segment's analytics.js library
  !function(){var analytics=window.analytics=window.analytics||[];if(!analytics.initialize)if(analytics.invoked)window.console&&console.error&&console.error("Segment snippet included twice.");else{analytics.invoked=!0;analytics.methods=["trackSubmit","trackClick","trackLink","trackForm","pageview","identify","reset","group","track","ready","alias","page","once","off","on"];analytics.factory=function(t){return function(){var e=Array.prototype.slice.call(arguments);e.unshift(t);analytics.push(e);return analytics}};for(var t=0;t<analytics.methods.length;t++){var e=analytics.methods[t];analytics[e]=analytics.factory(e)}analytics.load=function(t){var e=document.createElement("script");e.type="text/javascript";e.async=!0;e.src=("https:"===document.location.protocol?"https://":"http://")+"cdn.segment.com/analytics.js/v1/"+t+"/analytics.min.js";var n=document.getElementsByTagName("script")[0];n.parentNode.insertBefore(e,n)};analytics.SNIPPET_VERSION="3.1.0";
  analytics.load("8fncv13bt5");
  analytics.page();
  }}();
  // Note: user tracking moved to segment-io-footer.html
  </script>
  <!-- end Segment -->
  <meta content="" name="path_prefix"/>
  <meta content="_mipQ4AtZQDNmbtOkwehQDOgCxUUV2fb_C0b6wbiRHY" name="google-site-verification">
   <meta content="master" name="openedx-release-line">
   </meta>
  </meta>
 </head>
 <body class="ltr lang_en">
  <!-- Google Tag Manager -->
  <noscript>
   <iframe height="0" src="//www.googletagmanager.com/ns.html?id=GTM-MP2VGKZ" style="display:none;visibility:hidden" width="0">
   </iframe>
  </noscript>
  <!-- End Google Tag Manager -->
  <div id="page-prompt">
  </div>
  <div class="window-wrap" dir="ltr">
   <a class="nav-skip sr-only sr-only-focusable" href="#main">
    Skip to main content
   </a>
   <header class="global-header ">
    <div class="main-header">
     <h1 class="header-logo">
      <a href="https://postgraduateeducation.hms.harvard.edu/cme-online">
       <img alt="HMS Logo" class="logo" src="https://prod-edxapp.edx-cdn.org/static/cmeonline.hms.harvard.edu/images/hms-logo.ed43933ffa5f.png"/>
      </a>
     </h1>
     <div aria-controls="mobile-menu" aria-expanded="false" aria-label="Options" class="hamburger-menu" menu="" role="button" tabindex="0">
      <span class="line">
      </span>
      <span class="line">
      </span>
      <span class="line">
      </span>
      <span class="line">
      </span>
     </div>
     <nav class="nav-links">
      <div class="secondary">
       <div class="mobile-nav-item hidden-mobile nav-item">
        <a href="https://postgraduateeducation.hms.harvard.edu/">
         Postgraduate Medical Education
        </a>
       </div>
       <div class="mobile-nav-item hidden-mobile nav-item">
        <a href="https://postgraduateeducation.hms.harvard.edu/cme-online/courses-programs">
         Courses and Programs
        </a>
       </div>
       <div class="mobile-nav-item hidden-mobile nav-item">
        <a class="sign-in-btn btn" href="/login?next=%2Fdashboard">
         Sign in
        </a>
       </div>
       <div class="mobile-nav-item hidden-mobile nav-item">
        <a class="register-btn btn" href="/register?next=%2Fdashboard">
         Create Account
        </a>
       </div>
      </div>
     </nav>
    </div>
    <div aria-label="More" class="mobile-menu hidden" id="mobile-menu" options="" role="menu">
    </div>
   </header>
   <div class="marketing-hero">
   </div>
   <div class="content-wrapper main-container" dir="ltr" id="content">
    <script id="account-tpl" type="text/template">
     <form id="email-change-form" method="post">
    <label for="new-email"><%- gettext("New Address") %></label>
    <input id="new-email" type="text" name="new-email" value="" placeholder="xsy@edx.org" data-validate="required email"/>
    <div id="new-email-status" />

    <label for="password"><%- gettext("Password") %></label>
    <input id="password" type="password" name="password" value="" data-validate="required"/>
    <div id="password-status" />

    <div class="submit-button">
        <input type="submit" id="email-change-submit" value="<%- gettext("Change My Email Address") %>">
    </div>
    <div id="request-email-status" />

    <div id="password-reset">
        <button type="button"><%- gettext("Reset Password") %></button>
    </div>
    <div id="password-reset-status" />
</form>
    </script>
    <script id="access-tpl" type="text/template">
     <section id="login-anchor" class="form-type">
    <div id="login-form" class="form-wrapper <% if ( mode !== 'login' ) { %>hidden<% } %>"></div>
</section>

<section id="register-anchor" class="form-type">
    <div id="register-form" class="form-wrapper <% if ( mode !== 'register' ) { %>hidden<% } %>"></div>
</section>

<section id="password-reset-anchor" class="form-type">
    <div id="password-reset-form" class="form-wrapper hidden"></div>
</section>

<section id="institution_login-anchor" class="form-type">
    <div id="institution_login-form" class="form-wrapper hidden"></div>
</section>

<section id="hinted-login-anchor" class="form-type">
    <div id="hinted-login-form" class="form-wrapper <% if ( mode !== 'hinted_login' ) { %>hidden<% } %>"></div>
</section>
    </script>
    <script id="form_field-tpl" type="text/template">
     <div class="form-field <%- type %>-<%- name %>">
    <% if ( type !== 'checkbox' && type !== 'plaintext') { %>
        <label for="<%- form %>-<%- name %>">
            <span class="label-text"><%- label %></span>
            <% if ( required && type !== 'hidden' ) { %>
                <span id="<%- form %>-<%- name %>-required-label"
                    class="label-required <% if ( !requiredStr ) { %>hidden<% } %>">
                    <% if ( requiredStr ) { %><%- requiredStr %><% }%>
                </span>
                <span class="icon fa" id="<%- form %>-<%- name %>-validation-icon" aria-hidden="true"></span>
            <% } %>
            <% if ( !required && optionalStr && (type !== 'hidden') ) { %>
                <span class="label-optional" id="<%- form %>-<%- name %>-optional-label"><%- optionalStr %></span>
            <% } %>
        </label>
        <% if (supplementalLink && supplementalText) { %>
            <div class="supplemental-link">
                <a href="<%- supplementalLink %>" target="_blank"><%- supplementalText %></a>
            </div>
        <% } %>
    <% } %>

    <% if ( type === 'select' ) { %>
        <select id="<%- form %>-<%- name %>"
            name="<%- name %>"
            class="input-inline"
            <% if ( instructions ) { %>
            aria-describedby="<%- form %>-<%- name %>-desc <%- form %>-<%- name %>-validation-error"
            <% } %>
            <% if ( typeof errorMessages !== 'undefined' ) {
                _.each(errorMessages, function( msg, type ) {%>
                    data-errormsg-<%- type %>="<%- msg %>"
            <%  });
            } %>
            <% if ( required ) { %> aria-required="true" required<% } %>
        >
            <% _.each(options, function(el) { %>
                <option value="<%- el.value%>"<% if ( el.default ) { %> data-isdefault="true" selected<% } %>><%- el.name %></option>
            <% }); %>
        </select>
        <span id="<%- form %>-<%- name %>-validation-error" class="tip error" aria-live="assertive">
            <span class="sr-only"></span>
            <span id="<%- form %>-<%- name %>-validation-error-msg"></span>
        </span>
        <% if ( instructions ) { %> <span class="tip tip-input" id="<%- form %>-<%- name %>-desc"><%- instructions %></span><% } %>
        <% if (supplementalLink && supplementalText) { %>
            <div class="supplemental-link">
                <a href="<%- supplementalLink %>" target="_blank"><%- supplementalText %></a>
            </div>
        <% } %>
    <% } else if ( type === 'textarea' ) { %>
        <textarea id="<%- form %>-<%- name %>"
            type="<%- type %>"
            name="<%- name %>"
            class="input-block"
            <% if ( instructions ) { %>
            aria-describedby="<%- form %>-<%- name %>-desc <%- form %>-<%- name %>-validation-error"
            <% } %>
            <% if ( restrictions.min_length ) { %> minlength="<%- restrictions.min_length %>"<% } %>
            <% if ( restrictions.max_length ) { %> maxlength="<%- restrictions.max_length %>"<% } %>
            <% if ( typeof errorMessages !== 'undefined' ) {
                _.each(errorMessages, function( msg, type ) {%>
                    data-errormsg-<%- type %>="<%- msg %>"
            <%  });
            } %>
            <% if ( required ) { %> aria-required="true" required<% } %>></textarea>
        <span id="<%- form %>-<%- name %>-validation-error" class="tip error" aria-live="assertive">
            <span class="sr-only"></span>
            <span id="<%- form %>-<%- name %>-validation-error-msg"></span>
        </span>
        <% if ( instructions ) { %> <span class="tip tip-input" id="<%- form %>-<%- name %>-desc"><%- instructions %></span><% } %>
        <% if (supplementalLink && supplementalText) { %>
            <div class="supplemental-link">
                <a href="<%- supplementalLink %>" target="_blank"><%- supplementalText %></a>
            </div>
        <% } %>
    <% } else if (type === 'plaintext' ) { %>
            <span class="plaintext-field"><%= HtmlUtils.HTML(label) %></span>
            <input id="<%- form %>-<%- name %>"
               type="hidden"
               name="<%- name %>"
               class="input-block"
               value="true"
            />
    <% } else { %>
        <% if ( type === 'checkbox' ) { %>
            <% if (supplementalLink && supplementalText) { %>
                <div class="supplemental-link">
                    <a href="<%- supplementalLink %>" target="_blank"><%- supplementalText %></a>
                </div>
            <% } %>
        <% } %>
        <input id="<%- form %>-<%- name %>"
           type="<%- type %>"
           name="<%- name %>"
           class="input-block <% if ( type === 'checkbox' ) { %>checkbox<% } %>"
            <% if ( instructions ) { %>
            aria-describedby="<%- form %>-<%- name %>-desc <%- form %>-<%- name %>-validation-error"
            <% } %>
            <% if ( restrictions.min_length ) { %> minlength="<%- restrictions.min_length %>"<% } %>
            <% if ( restrictions.max_length ) { %> maxlength="<%- restrictions.max_length %>"<% } %>
            <% if ( restrictions.readonly )   { %> readonly <% } %>
            <% if ( required ) { %> required<% } %>
            <% if ( typeof errorMessages !== 'undefined' ) {
                _.each(errorMessages, function( msg, type ) {%>
                    data-errormsg-<%- type %>="<%- msg %>"
            <%  });
            } %>
            <% if ( placeholder ) { %> placeholder="<%- placeholder %>"<% } %>
            value="<%- defaultValue %>"
        />
        <% if ( type === 'checkbox' ) { %>
            <label for="<%- form %>-<%- name %>">
                <span class="label-text"><%= HtmlUtils.HTML(label) %></span>
                <% if ( required && type !== 'hidden' ) { %>
                    <span id="<%- form %>-<%- name %>-required-label"
                        class="label-required <% if ( !requiredStr ) { %>hidden<% } %>">
                        <% if ( requiredStr ) { %><%- requiredStr %><% }%>
                    </span>
                    <span class="icon fa" id="<%- form %>-<%- name %>-validation-icon" aria-hidden="true"></span>
                <% } %>
                <% if ( !required && optionalStr ) { %>
                    <span class="label-optional" id="<%- form %>-<%- name %>-optional-label"><%- optionalStr %></span>
                <% } %>
            </label>
        <% } %>

        <span id="<%- form %>-<%- name %>-validation-error" class="tip error" aria-live="assertive">
            <span class="sr-only"></span>
            <span id="<%- form %>-<%- name %>-validation-error-msg"></span>
        </span>
        <% if ( instructions ) { %> <span class="tip tip-input" id="<%- form %>-<%- name %>-desc"><%- instructions %></span><% } %>
    <% } %>

    <% if( form === 'login' && name === 'password' ) { %>
        <button type="button" class="forgot-password field-link"><%- gettext("Need help logging in?") %></button>
    <% } %>
</div>
    </script>
    <script id="login-tpl" type="text/template">
     <div class="js-form-feedback" aria-live="assertive" tabindex="-1">
</div>

<% if ( context.createAccountOption !== false && !context.syncLearnerProfileData && !(context.enterpriseName && context.currentProvider) ) { %>
<div class="toggle-form">
    <span class="text"><%- gettext("First time here?") %></span>
    <a href="#login" class="form-toggle" data-type="register"><%- gettext("Create an Account.") %></a>
</div>
<% } %>

<% // Hide SSO related messages if we are not in the SSO pipeline.  %>
<% if (context.enterpriseName && context.currentProvider) { %>
    <% if (context.pipelineUserDetails && context.pipelineUserDetails.email) { %>
        <h2><%- gettext("Sign in to continue learning as {email}").replace("{email}", context.pipelineUserDetails.email) %></h2>
    <% } else { %>
        <h2><%- gettext("Sign in to continue learning") %></h2>
    <% } %>
    <p>
        <%- gettext("You already have an edX account with your {enterprise_name} email address.").replace(/{enterprise_name}/g, context.enterpriseName) %>
        <% if (context.syncLearnerProfileData) {
            %><%- gettext("Going forward, your account information will be updated and maintained by {enterprise_name}.").replace(/{enterprise_name}/g, context.enterpriseName) %>
        <% } %>
        <%- gettext("You can view your information or unlink from {enterprise_name} anytime in your Account Settings.").replace(/{enterprise_name}/g, context.enterpriseName) %>
    </p>
    <p><%- gettext("To continue learning with this account, sign in below.") %></p>
<% } else { %>
    <h2><%- gettext("Sign In") %></h2>
<% } %>

<form id="login" class="login-form" tabindex="-1" method="POST">

    <p class="sr">
        <% if ( context.providers.length > 0 && !context.currentProvider || context.hasSecondaryProviders ) { %>
            <%- gettext("Sign in here using your email address and password, or use one of the providers listed below.") %>
        <% } else { %>
            <%- gettext("Sign in here using your email address and password.") %>
        <% } %>
        <%- gettext("If you do not yet have an account, use the button below to register.") %>
    </p>

    <%= context.fields %>

    <button type="submit" class="action action-primary action-update js-login login-button"><%- gettext("Sign in") %></button>

    <% if ( context.providers.length > 0 && !context.currentProvider || context.hasSecondaryProviders ) { %>
    <div class="login-providers">
        <div class="section-title lines">
            <h3>
                <span class="text"><%- gettext("or sign in with") %></span>
            </h3>
        </div>

        <% _.each( context.providers, function( provider ) {
            if ( provider.loginUrl ) { %>
                <button type="button" class="button button-primary button-<%- provider.id %> login-provider login-<%- provider.id %>" data-provider-url="<%- provider.loginUrl %>">
                    <div class="icon <% if ( provider.iconClass ) { %>fa <%- provider.iconClass %><% } %>" aria-hidden="true">
                        <% if ( provider.iconImage ) { %>
                            <img class="icon-image" src="<%- provider.iconImage %>" alt="<%- provider.name %> icon" />
                        <% } %>
                    </div>
                    <span aria-hidden="true"><%- provider.name %></span>
                    <span class="sr"><%- _.sprintf( gettext("Sign in with %(providerName)s"), {providerName: provider.name} ) %></span>
                </button>
            <% }
        }); %>

        <% if ( context.hasSecondaryProviders ) { %>
            <button type="button" class="button-secondary-login form-toggle" data-type="institution_login">
                <%- gettext("Use my institution/campus credentials") %>
            </button>
        <% } %>
    </div>
    <% } %>
</form>
    </script>
    <script id="register-tpl" type="text/template">
     <div class="js-form-feedback" aria-live="assertive" tabindex="-1">
</div>

<% if (!context.syncLearnerProfileData) { %>
	<div class="toggle-form">
		<span class="text"><%- edx.StringUtils.interpolate(gettext('Already have an {platformName} account?'), {platformName: context.platformName }) %></span>
		<a href="#login" class="form-toggle" data-type="login"><%- gettext("Sign in.") %></a>
	</div>
<% } %>

<form id="register" class="register-form" autocomplete="off" tabindex="-1" method="POST">

    <% if (!context.currentProvider) { %>
        <% if (context.providers.length > 0 || context.hasSecondaryProviders) { %>
            <div class="login-providers">
                <div class="section-title lines">
                    <h3>
                        <span class="text"><%- gettext("Create an account using") %></span>
                    </h3>
                </div>
                <%
                _.each( context.providers, function( provider) {
                    if ( provider.registerUrl ) { %>
                        <button type="button" class="button button-primary button-<%- provider.id %> login-provider register-<%- provider.id %>" data-provider-url="<%- provider.registerUrl %>">
                            <div class="icon <% if ( provider.iconClass ) { %>fa <%- provider.iconClass %><% } %>" aria-hidden="true">
                                <% if ( provider.iconImage ) { %>
                                    <img class="icon-image" src="<%- provider.iconImage %>" alt="<%- provider.name %> icon" />
                                <% } %>
                            </div>
                            <span aria-hidden="true"><%- provider.name %></span>
                            <span class="sr"><%- _.sprintf( gettext("Create account using %(providerName)s."), {providerName: provider.name} ) %></span>
                        </button>
                <%  }
                }); %>

                <% if ( context.hasSecondaryProviders ) { %>
                    <button type="button" class="button-secondary-login form-toggle" data-type="institution_login">
                        <%- gettext("Use my institution/campus credentials") %>
                    </button>
                <% } %>
            </div>
            <div class="section-title lines">
                <h3>
                    <span class="text"><%- gettext("or create a new one here") %></span>
                </h3>
            </div>
        <% } else { %>
            <h2><%- gettext('Create an Account')%></h2>
        <% } %>
    <% } else if (context.autoRegisterWelcomeMessage) { %>
        <span class="auto-register-message"><%- context.autoRegisterWelcomeMessage %></span>
    <% } %>

    <%= context.fields %>

    <div class="form-field checkbox-optional_fields_toggle">
        <input type="checkbox" id="toggle_optional_fields" class="input-block checkbox"">
        <label for="toggle_optional_fields">
            <span class="label-text">
                <%- gettext("Support education research by providing additional information") %>
            </span>
        </label>
    </div>


    <button type="submit" class="action action-primary action-update js-register register-button">
    	<% if ( context.registerFormSubmitButtonText ) { %><%- context.registerFormSubmitButtonText %><% } else { %><%- gettext("Create Account") %><% } %>
    </button>
</form>
    </script>
    <script id="institution_login-tpl" type="text/template">
     <div class="wrapper-other-login">
    <div class="section-title lines">
        <h2>
            <span class="text">
                <%- gettext("Sign in with Institution/Campus Credentials") %>
            </span>
        </h2>
    </div>

    <p class="instructions"><%- gettext("Choose your institution from the list below:") %></p>

    <ul class="institution-list">
        <% _.each( _.sortBy(providers, "name"), function( provider ) {
            if ( provider.loginUrl ) { %>
                <li class="institution">
                    <a class="institution-login-link" href="<%- provider.loginUrl %>"><%- provider.name %></a>
                </li>
            <% }
        }); %>
    </ul>

    <div class="section-title lines">
        <h2>
            <span class="text"><%- gettext("or") %></span>
        </h2>
    </div>

    <div class="toggle-form">
        <button class="nav-btn form-toggle" data-type="login"><%- gettext("Back to sign in") %></button>
    </div>
</div>
    </script>
    <script id="institution_register-tpl" type="text/template">
     <div class="wrapper-other-login">
    <div class="section-title lines">
        <h2>
            <span class="text">
                <%- gettext("Register with Institution/Campus Credentials") %>
            </span>
        </h2>
    </div>

    <p class="instructions"><%- gettext("Choose your institution from the list below:") %></p>

    <ul class="institution-list">
        <% _.each( _.sortBy(providers, "name"), function( provider ) {
            if ( provider.registerUrl ) { %>
                <li class="institution">
                    <a class="institution-login-link" href="<%- provider.registerUrl %>"><%- provider.name %></a>
                </li>
            <% }
        }); %>
    </ul>

    <div class="section-title lines">
        <h2>
            <span class="text"><%- gettext("or") %></span>
        </h2>
    </div>

    <div class="toggle-form">
        <button class="nav-btn form-toggle" data-type="register"><%- gettext("Register through edX") %></button>
    </div>
</div>
    </script>
    <script id="password_reset-tpl" type="text/template">
     <div class="js-form-feedback" aria-live="assertive" tabindex="-1">
</div>

<h2><%- gettext("Password assistance") %></h2>

<form id="password-reset" class="password-reset-form" tabindex="-1" method="POST">

    <p class="action-label"><%- gettext("Please enter your log-in or recovery email address below and we will send you an email with instructions.") %></p>

    <%= HtmlUtils.HTML(fields) %>

    <button type="submit" class="action action-primary action-update js-reset"><%- gettext("Recover my password") %></button>
</form>
    </script>
    <script id="hinted_login-tpl" type="text/template">
     <div class="wrapper-other-login">
    <div class="section-title lines">
        <h2>
            <span class="text"><%- gettext("Sign in") %></span>
        </h2>
    </div>

    <p class="instructions"><%- _.sprintf( gettext("Would you like to sign in using your %(providerName)s credentials?"), { providerName: hintedProvider.name } ) %></p>

    <button class="action action-primary action-update proceed-button button-<%- hintedProvider.id %> hinted-login-<%- hintedProvider.id %>">
        <span class="icon <% if ( hintedProvider.iconClass ) { %>fa <%- hintedProvider.iconClass %><% } %>" aria-hidden="true">
            <% if ( hintedProvider.iconImage ) { %>
                <img class="icon-image" src="<%- hintedProvider.iconImage %>" alt="<%- hintedProvider.name %> icon" />
            <% } %>
        </span>
        <%- _.sprintf( gettext("Sign in using %(providerName)s"), { providerName: hintedProvider.name } ) %>
    </button>

    <div class="section-title lines">
        <h2>
            <span class="text"><%- gettext("or") %></span>
        </h2>
    </div>

    <div class="toggle-form">
        <button class="nav-btn form-toggle" data-type="login"><%- gettext("Show me other ways to sign in or register") %></button>
    </div>
</div>
    </script>
    <div class="section-bkg-wrapper">
     <main aria-label="Content" id="main" tabindex="-1">
      <div class="login-register-content" id="content-container">
       <div class="login-register " id="login-and-registration-container">
       </div>
      </div>
     </main>
    </div>
   </div>
  </div>
  <script src="https://prod-edxapp.edx-cdn.org/static/js/student_account/logistration_factory.291ea4b56c0f.js?raw" type="text/javascript">
  </script>
  <script type="text/javascript">
   (function (require) {
            require(['js/student_account/logistration_factory'], function (LogistrationFactory) {
                
        var options = {"password_reset_support_link": "https://cmeonline.hms.harvard.edu/contact", "support_link": "https://cmeonline.hms.harvard.edu/contact", "account_recovery_messages": [], "account_activation_messages": [], "login_form_desc": {"submit_url": "/user_api/v1/account/login_session/", "fields": [{"restrictions": {"min_length": 3, "max_length": 254}, "required": true, "name": "email", "type": "email", "supplementalLink": "", "errorMessages": {}, "label": "Email", "supplementalText": "", "placeholder": "username@domain.com", "defaultValue": "", "instructions": "The email address you used to register with Harvard Medical School CME Online"}, {"restrictions": {"max_length": 5000}, "required": true, "name": "password", "type": "password", "supplementalLink": "", "errorMessages": {}, "label": "Password", "supplementalText": "", "placeholder": "", "defaultValue": "", "instructions": ""}, {"restrictions": {}, "required": false, "name": "remember", "type": "checkbox", "supplementalLink": "", "errorMessages": {}, "label": "Remember me", "supplementalText": "", "placeholder": "", "defaultValue": false, "instructions": ""}], "method": "post"}, "third_party_auth": {"errorMessage": null, "finishAuthUrl": null, "syncLearnerProfileData": false, "providers": [], "registerFormSubmitButtonText": "Create Account", "pipeline_user_details": {}, "currentProvider": null, "secondaryProviders": []}, "third_party_auth_hint": "", "registration_form_desc": {"submit_url": "/user_api/v1/account/registration/", "fields": [{"restrictions": {"min_length": 3, "max_length": 254}, "required": true, "name": "email", "type": "email", "supplementalLink": "", "errorMessages": {}, "label": "Email", "supplementalText": "", "placeholder": "", "defaultValue": "", "instructions": "This is what you will use to login."}, {"restrictions": {"max_length": 255}, "required": true, "name": "name", "type": "text", "supplementalLink": "", "errorMessages": {}, "label": "Full Name", "supplementalText": "", "placeholder": "", "defaultValue": "", "instructions": "This name will be used on any certificates that you earn."}, {"restrictions": {"min_length": 2, "max_length": 30}, "required": true, "name": "username", "type": "text", "supplementalLink": "", "errorMessages": {}, "label": "Public Username", "supplementalText": "", "placeholder": "", "defaultValue": "", "instructions": "The name that will identify you in your courses. It cannot be changed later."}, {"restrictions": {"min_alphabetic": 1, "min_length": 8, "max_length": 100, "min_numeric": 1}, "required": true, "name": "password", "type": "password", "supplementalLink": "", "errorMessages": {}, "label": "Password", "supplementalText": "", "placeholder": "", "defaultValue": "", "instructions": "Your password must contain at least 8 characters, including 1 letter \u0026 1 number."}, {"restrictions": {}, "required": true, "name": "first_name", "type": "text", "supplementalLink": "", "errorMessages": {}, "label": "First Name", "supplementalText": "", "placeholder": "", "defaultValue": "", "instructions": ""}, {"restrictions": {}, "required": true, "name": "last_name", "type": "text", "supplementalLink": "", "errorMessages": {}, "label": "Last Name", "supplementalText": "", "placeholder": "", "defaultValue": "", "instructions": ""}, {"restrictions": {}, "required": true, "name": "state", "type": "text", "supplementalLink": "", "errorMessages": {}, "label": "State/Province/Region", "supplementalText": "", "placeholder": "", "defaultValue": "", "instructions": ""}, {"restrictions": {}, "required": true, "name": "country", "type": "select", "supplementalLink": "", "errorMessages": {"required": "Select your country or region of residence."}, "label": "Country or Region of Residence", "options": [{"default": true, "name": "--", "value": ""}, {"default": false, "name": "Afghanistan", "value": "AF"}, {"default": false, "name": "\u00c5land Islands", "value": "AX"}, {"default": false, "name": "Albania", "value": "AL"}, {"default": false, "name": "Algeria", "value": "DZ"}, {"default": false, "name": "American Samoa", "value": "AS"}, {"default": false, "name": "Andorra", "value": "AD"}, {"default": false, "name": "Angola", "value": "AO"}, {"default": false, "name": "Anguilla", "value": "AI"}, {"default": false, "name": "Antarctica", "value": "AQ"}, {"default": false, "name": "Antigua and Barbuda", "value": "AG"}, {"default": false, "name": "Argentina", "value": "AR"}, {"default": false, "name": "Armenia", "value": "AM"}, {"default": false, "name": "Aruba", "value": "AW"}, {"default": false, "name": "Australia", "value": "AU"}, {"default": false, "name": "Austria", "value": "AT"}, {"default": false, "name": "Azerbaijan", "value": "AZ"}, {"default": false, "name": "Bahamas", "value": "BS"}, {"default": false, "name": "Bahrain", "value": "BH"}, {"default": false, "name": "Bangladesh", "value": "BD"}, {"default": false, "name": "Barbados", "value": "BB"}, {"default": false, "name": "Belarus", "value": "BY"}, {"default": false, "name": "Belgium", "value": "BE"}, {"default": false, "name": "Belize", "value": "BZ"}, {"default": false, "name": "Benin", "value": "BJ"}, {"default": false, "name": "Bermuda", "value": "BM"}, {"default": false, "name": "Bhutan", "value": "BT"}, {"default": false, "name": "Bolivia", "value": "BO"}, {"default": false, "name": "Bonaire, Sint Eustatius and Saba", "value": "BQ"}, {"default": false, "name": "Bosnia and Herzegovina", "value": "BA"}, {"default": false, "name": "Botswana", "value": "BW"}, {"default": false, "name": "Bouvet Island", "value": "BV"}, {"default": false, "name": "Brazil", "value": "BR"}, {"default": false, "name": "British Indian Ocean Territory", "value": "IO"}, {"default": false, "name": "Brunei", "value": "BN"}, {"default": false, "name": "Bulgaria", "value": "BG"}, {"default": false, "name": "Burkina Faso", "value": "BF"}, {"default": false, "name": "Burundi", "value": "BI"}, {"default": false, "name": "Cabo Verde", "value": "CV"}, {"default": false, "name": "Cambodia", "value": "KH"}, {"default": false, "name": "Cameroon", "value": "CM"}, {"default": false, "name": "Canada", "value": "CA"}, {"default": false, "name": "Cayman Islands", "value": "KY"}, {"default": false, "name": "Central African Republic", "value": "CF"}, {"default": false, "name": "Chad", "value": "TD"}, {"default": false, "name": "Chile", "value": "CL"}, {"default": false, "name": "China", "value": "CN"}, {"default": false, "name": "Christmas Island", "value": "CX"}, {"default": false, "name": "Cocos (Keeling) Islands", "value": "CC"}, {"default": false, "name": "Colombia", "value": "CO"}, {"default": false, "name": "Comoros", "value": "KM"}, {"default": false, "name": "Congo", "value": "CG"}, {"default": false, "name": "Congo (the Democratic Republic of the)", "value": "CD"}, {"default": false, "name": "Cook Islands", "value": "CK"}, {"default": false, "name": "Costa Rica", "value": "CR"}, {"default": false, "name": "C\u00f4te d'Ivoire", "value": "CI"}, {"default": false, "name": "Croatia", "value": "HR"}, {"default": false, "name": "Cuba", "value": "CU"}, {"default": false, "name": "Cura\u00e7ao", "value": "CW"}, {"default": false, "name": "Cyprus", "value": "CY"}, {"default": false, "name": "Czechia", "value": "CZ"}, {"default": false, "name": "Denmark", "value": "DK"}, {"default": false, "name": "Djibouti", "value": "DJ"}, {"default": false, "name": "Dominica", "value": "DM"}, {"default": false, "name": "Dominican Republic", "value": "DO"}, {"default": false, "name": "Ecuador", "value": "EC"}, {"default": false, "name": "Egypt", "value": "EG"}, {"default": false, "name": "El Salvador", "value": "SV"}, {"default": false, "name": "Equatorial Guinea", "value": "GQ"}, {"default": false, "name": "Eritrea", "value": "ER"}, {"default": false, "name": "Estonia", "value": "EE"}, {"default": false, "name": "Ethiopia", "value": "ET"}, {"default": false, "name": "Falkland Islands  [Malvinas]", "value": "FK"}, {"default": false, "name": "Faroe Islands", "value": "FO"}, {"default": false, "name": "Fiji", "value": "FJ"}, {"default": false, "name": "Finland", "value": "FI"}, {"default": false, "name": "France", "value": "FR"}, {"default": false, "name": "French Guiana", "value": "GF"}, {"default": false, "name": "French Polynesia", "value": "PF"}, {"default": false, "name": "French Southern Territories", "value": "TF"}, {"default": false, "name": "Gabon", "value": "GA"}, {"default": false, "name": "Gambia", "value": "GM"}, {"default": false, "name": "Georgia", "value": "GE"}, {"default": false, "name": "Germany", "value": "DE"}, {"default": false, "name": "Ghana", "value": "GH"}, {"default": false, "name": "Gibraltar", "value": "GI"}, {"default": false, "name": "Greece", "value": "GR"}, {"default": false, "name": "Greenland", "value": "GL"}, {"default": false, "name": "Grenada", "value": "GD"}, {"default": false, "name": "Guadeloupe", "value": "GP"}, {"default": false, "name": "Guam", "value": "GU"}, {"default": false, "name": "Guatemala", "value": "GT"}, {"default": false, "name": "Guernsey", "value": "GG"}, {"default": false, "name": "Guinea", "value": "GN"}, {"default": false, "name": "Guinea-Bissau", "value": "GW"}, {"default": false, "name": "Guyana", "value": "GY"}, {"default": false, "name": "Haiti", "value": "HT"}, {"default": false, "name": "Heard Island and McDonald Islands", "value": "HM"}, {"default": false, "name": "Holy See", "value": "VA"}, {"default": false, "name": "Honduras", "value": "HN"}, {"default": false, "name": "Hong Kong", "value": "HK"}, {"default": false, "name": "Hungary", "value": "HU"}, {"default": false, "name": "Iceland", "value": "IS"}, {"default": false, "name": "India", "value": "IN"}, {"default": false, "name": "Indonesia", "value": "ID"}, {"default": false, "name": "Iran", "value": "IR"}, {"default": false, "name": "Iraq", "value": "IQ"}, {"default": false, "name": "Ireland", "value": "IE"}, {"default": false, "name": "Isle of Man", "value": "IM"}, {"default": false, "name": "Israel", "value": "IL"}, {"default": false, "name": "Italy", "value": "IT"}, {"default": false, "name": "Jamaica", "value": "JM"}, {"default": false, "name": "Japan", "value": "JP"}, {"default": false, "name": "Jersey", "value": "JE"}, {"default": false, "name": "Jordan", "value": "JO"}, {"default": false, "name": "Kazakhstan", "value": "KZ"}, {"default": false, "name": "Kenya", "value": "KE"}, {"default": false, "name": "Kiribati", "value": "KI"}, {"default": false, "name": "Kosovo", "value": "XK"}, {"default": false, "name": "Kuwait", "value": "KW"}, {"default": false, "name": "Kyrgyzstan", "value": "KG"}, {"default": false, "name": "Laos", "value": "LA"}, {"default": false, "name": "Latvia", "value": "LV"}, {"default": false, "name": "Lebanon", "value": "LB"}, {"default": false, "name": "Lesotho", "value": "LS"}, {"default": false, "name": "Liberia", "value": "LR"}, {"default": false, "name": "Libya", "value": "LY"}, {"default": false, "name": "Liechtenstein", "value": "LI"}, {"default": false, "name": "Lithuania", "value": "LT"}, {"default": false, "name": "Luxembourg", "value": "LU"}, {"default": false, "name": "Macao", "value": "MO"}, {"default": false, "name": "Macedonia", "value": "MK"}, {"default": false, "name": "Madagascar", "value": "MG"}, {"default": false, "name": "Malawi", "value": "MW"}, {"default": false, "name": "Malaysia", "value": "MY"}, {"default": false, "name": "Maldives", "value": "MV"}, {"default": false, "name": "Mali", "value": "ML"}, {"default": false, "name": "Malta", "value": "MT"}, {"default": false, "name": "Marshall Islands", "value": "MH"}, {"default": false, "name": "Martinique", "value": "MQ"}, {"default": false, "name": "Mauritania", "value": "MR"}, {"default": false, "name": "Mauritius", "value": "MU"}, {"default": false, "name": "Mayotte", "value": "YT"}, {"default": false, "name": "Mexico", "value": "MX"}, {"default": false, "name": "Micronesia (Federated States of)", "value": "FM"}, {"default": false, "name": "Moldova", "value": "MD"}, {"default": false, "name": "Monaco", "value": "MC"}, {"default": false, "name": "Mongolia", "value": "MN"}, {"default": false, "name": "Montenegro", "value": "ME"}, {"default": false, "name": "Montserrat", "value": "MS"}, {"default": false, "name": "Morocco", "value": "MA"}, {"default": false, "name": "Mozambique", "value": "MZ"}, {"default": false, "name": "Myanmar", "value": "MM"}, {"default": false, "name": "Namibia", "value": "NA"}, {"default": false, "name": "Nauru", "value": "NR"}, {"default": false, "name": "Nepal", "value": "NP"}, {"default": false, "name": "Netherlands", "value": "NL"}, {"default": false, "name": "New Caledonia", "value": "NC"}, {"default": false, "name": "New Zealand", "value": "NZ"}, {"default": false, "name": "Nicaragua", "value": "NI"}, {"default": false, "name": "Niger", "value": "NE"}, {"default": false, "name": "Nigeria", "value": "NG"}, {"default": false, "name": "Niue", "value": "NU"}, {"default": false, "name": "Norfolk Island", "value": "NF"}, {"default": false, "name": "North Korea", "value": "KP"}, {"default": false, "name": "Northern Mariana Islands", "value": "MP"}, {"default": false, "name": "Norway", "value": "NO"}, {"default": false, "name": "Oman", "value": "OM"}, {"default": false, "name": "Pakistan", "value": "PK"}, {"default": false, "name": "Palau", "value": "PW"}, {"default": false, "name": "Palestine, State of", "value": "PS"}, {"default": false, "name": "Panama", "value": "PA"}, {"default": false, "name": "Papua New Guinea", "value": "PG"}, {"default": false, "name": "Paraguay", "value": "PY"}, {"default": false, "name": "Peru", "value": "PE"}, {"default": false, "name": "Philippines", "value": "PH"}, {"default": false, "name": "Pitcairn", "value": "PN"}, {"default": false, "name": "Poland", "value": "PL"}, {"default": false, "name": "Portugal", "value": "PT"}, {"default": false, "name": "Puerto Rico", "value": "PR"}, {"default": false, "name": "Qatar", "value": "QA"}, {"default": false, "name": "R\u00e9union", "value": "RE"}, {"default": false, "name": "Romania", "value": "RO"}, {"default": false, "name": "Russia", "value": "RU"}, {"default": false, "name": "Rwanda", "value": "RW"}, {"default": false, "name": "Saint Barth\u00e9lemy", "value": "BL"}, {"default": false, "name": "Saint Helena, Ascension and Tristan da Cunha", "value": "SH"}, {"default": false, "name": "Saint Kitts and Nevis", "value": "KN"}, {"default": false, "name": "Saint Lucia", "value": "LC"}, {"default": false, "name": "Saint Martin (French part)", "value": "MF"}, {"default": false, "name": "Saint Pierre and Miquelon", "value": "PM"}, {"default": false, "name": "Saint Vincent and the Grenadines", "value": "VC"}, {"default": false, "name": "Samoa", "value": "WS"}, {"default": false, "name": "San Marino", "value": "SM"}, {"default": false, "name": "Sao Tome and Principe", "value": "ST"}, {"default": false, "name": "Saudi Arabia", "value": "SA"}, {"default": false, "name": "Senegal", "value": "SN"}, {"default": false, "name": "Serbia", "value": "RS"}, {"default": false, "name": "Seychelles", "value": "SC"}, {"default": false, "name": "Sierra Leone", "value": "SL"}, {"default": false, "name": "Singapore", "value": "SG"}, {"default": false, "name": "Sint Maarten (Dutch part)", "value": "SX"}, {"default": false, "name": "Slovakia", "value": "SK"}, {"default": false, "name": "Slovenia", "value": "SI"}, {"default": false, "name": "Solomon Islands", "value": "SB"}, {"default": false, "name": "Somalia", "value": "SO"}, {"default": false, "name": "South Africa", "value": "ZA"}, {"default": false, "name": "South Georgia and the South Sandwich Islands", "value": "GS"}, {"default": false, "name": "South Korea", "value": "KR"}, {"default": false, "name": "South Sudan", "value": "SS"}, {"default": false, "name": "Spain", "value": "ES"}, {"default": false, "name": "Sri Lanka", "value": "LK"}, {"default": false, "name": "Sudan", "value": "SD"}, {"default": false, "name": "Suriname", "value": "SR"}, {"default": false, "name": "Svalbard and Jan Mayen", "value": "SJ"}, {"default": false, "name": "Swaziland", "value": "SZ"}, {"default": false, "name": "Sweden", "value": "SE"}, {"default": false, "name": "Switzerland", "value": "CH"}, {"default": false, "name": "Syria", "value": "SY"}, {"default": false, "name": "Taiwan", "value": "TW"}, {"default": false, "name": "Tajikistan", "value": "TJ"}, {"default": false, "name": "Tanzania", "value": "TZ"}, {"default": false, "name": "Thailand", "value": "TH"}, {"default": false, "name": "Timor-Leste", "value": "TL"}, {"default": false, "name": "Togo", "value": "TG"}, {"default": false, "name": "Tokelau", "value": "TK"}, {"default": false, "name": "Tonga", "value": "TO"}, {"default": false, "name": "Trinidad and Tobago", "value": "TT"}, {"default": false, "name": "Tunisia", "value": "TN"}, {"default": false, "name": "Turkey", "value": "TR"}, {"default": false, "name": "Turkmenistan", "value": "TM"}, {"default": false, "name": "Turks and Caicos Islands", "value": "TC"}, {"default": false, "name": "Tuvalu", "value": "TV"}, {"default": false, "name": "Uganda", "value": "UG"}, {"default": false, "name": "Ukraine", "value": "UA"}, {"default": false, "name": "United Arab Emirates", "value": "AE"}, {"default": false, "name": "United Kingdom", "value": "GB"}, {"default": false, "name": "United States Minor Outlying Islands", "value": "UM"}, {"default": false, "name": "United States of America", "value": "US"}, {"default": false, "name": "Uruguay", "value": "UY"}, {"default": false, "name": "Uzbekistan", "value": "UZ"}, {"default": false, "name": "Vanuatu", "value": "VU"}, {"default": false, "name": "Venezuela", "value": "VE"}, {"default": false, "name": "Vietnam", "value": "VN"}, {"default": false, "name": "Virgin Islands (British)", "value": "VG"}, {"default": false, "name": "Virgin Islands (U.S.)", "value": "VI"}, {"default": false, "name": "Wallis and Futuna", "value": "WF"}, {"default": false, "name": "Western Sahara", "value": "EH"}, {"default": false, "name": "Yemen", "value": "YE"}, {"default": false, "name": "Zambia", "value": "ZM"}, {"default": false, "name": "Zimbabwe", "value": "ZW"}], "supplementalText": "", "placeholder": "", "defaultValue": "", "instructions": "The country or region where you live."}, {"restrictions": {}, "required": true, "name": "terms_of_service", "type": "checkbox", "supplementalLink": "", "errorMessages": {"required": "You must agree to the Harvard Medical School CME Online Terms of Service"}, "label": "I agree to the Harvard Medical School CME Online \u003ca href='/tos' target='_blank'\u003eTerms of Service\u003c/a\u003e", "supplementalText": "", "placeholder": "", "defaultValue": false, "instructions": ""}, {"restrictions": {}, "required": true, "name": "profession", "type": "select", "supplementalLink": "", "errorMessages": {"required": "Select your profession."}, "label": "Profession", "options": [{"default": true, "name": "--", "value": ""}, {"default": false, "name": "Physician", "value": "physician"}, {"default": false, "name": "Physician Assistant", "value": "physician assistant"}, {"default": false, "name": "Nurse", "value": "nurse"}, {"default": false, "name": "Nurse Practitioner", "value": "nurse practitioner"}, {"default": false, "name": "Administrator", "value": "administrator"}, {"default": false, "name": "Athletic Trainer", "value": "athletic trainer"}, {"default": false, "name": "Certified Nurse Midwife", "value": "certified nurse midwife"}, {"default": false, "name": "Chiropractor", "value": "chiropractor"}, {"default": false, "name": "Clergy", "value": "clergy"}, {"default": false, "name": "Coach", "value": "coach"}, {"default": false, "name": "Consultant", "value": "consultant"}, {"default": false, "name": "Counselor", "value": "counselor"}, {"default": false, "name": "Dentist", "value": "dentist"}, {"default": false, "name": "Diagnostic Medical Sonographer", "value": "diagnostic medical sonographer"}, {"default": false, "name": "Educator", "value": "educator"}, {"default": false, "name": "Employee of Industry", "value": "employee of industry"}, {"default": false, "name": "Genetic Counselor", "value": "genetic counselor"}, {"default": false, "name": "Lawyer", "value": "lawyer"}, {"default": false, "name": "Massage Therapist", "value": "massage therapist"}, {"default": false, "name": "Nurse Anesthetist", "value": "nurse anesthetist"}, {"default": false, "name": "Nurse Midwife", "value": "nurse midwife"}, {"default": false, "name": "Occupational Therapist", "value": "occupational therapist"}, {"default": false, "name": "Optometrist", "value": "optometrist"}, {"default": false, "name": "Pharmacist", "value": "pharmacist"}, {"default": false, "name": "Physical Therapist", "value": "physical therapist"}, {"default": false, "name": "Podiatrist", "value": "podiatrist"}, {"default": false, "name": "Psychologist", "value": "psychologist"}, {"default": false, "name": "Radiologic Technician", "value": "radiologic technician"}, {"default": false, "name": "Registered Dietitian", "value": "registered dietitian"}, {"default": false, "name": "Researcher", "value": "researcher"}, {"default": false, "name": "Respiratory Therapist", "value": "respiratory therapist"}, {"default": false, "name": "Scientist", "value": "scientist"}, {"default": false, "name": "Social Worker", "value": "social worker"}, {"default": false, "name": "Speech Pathologist", "value": "speech pathologist"}, {"default": false, "name": "Student", "value": "student"}, {"default": false, "name": "Technician", "value": "technician"}, {"default": false, "name": "Veterinarian", "value": "veterinarian"}, {"default": false, "name": "Other", "value": "other"}], "supplementalText": "", "placeholder": "", "defaultValue": "", "instructions": ""}, {"restrictions": {}, "required": true, "name": "specialty", "type": "select", "supplementalLink": "", "errorMessages": {"required": "Select your specialty."}, "label": "Specialty", "options": [{"default": true, "name": "--", "value": ""}, {"default": false, "name": "Addiction Medicine", "value": "addiction medicine"}, {"default": false, "name": "Allergy and Immunology", "value": "allergy and immunology"}, {"default": false, "name": "Anesthesiology", "value": "anesthesiology"}, {"default": false, "name": "Cardiology and Vascular Medicine", "value": "cardiology and vascular medicine"}, {"default": false, "name": "Colon and Rectal Surgery", "value": "colon and rectal surgery"}, {"default": false, "name": "Critical Care and Trauma", "value": "critical care and trauma"}, {"default": false, "name": "Dermatology", "value": "dermatology"}, {"default": false, "name": "Emergency Medicine", "value": "emergency medicine"}, {"default": false, "name": "Endocrinology", "value": "endocrinology"}, {"default": false, "name": "Family Medicine", "value": "family medicine"}, {"default": false, "name": "Gastroenterology", "value": "gastroenterology"}, {"default": false, "name": "Genetics", "value": "genetics"}, {"default": false, "name": "Geriatrics", "value": "geriatrics"}, {"default": false, "name": "Healthcare Education and Leadership", "value": "healthcare education and leadership"}, {"default": false, "name": "Infectious Disease", "value": "infectious disease"}, {"default": false, "name": "Internal Medicine", "value": "internal medicine"}, {"default": false, "name": "Lifestyle and Mind-Body Medicine", "value": "lifestyle and mind-body medicine"}, {"default": false, "name": "Medical Genetics and Genomics", "value": "medical genetics and genomics"}, {"default": false, "name": "Neonatology", "value": "neonatology"}, {"default": false, "name": "Nephrology", "value": "nephrology"}, {"default": false, "name": "Neurology", "value": "neurology"}, {"default": false, "name": "Nutrition", "value": "nutrition"}, {"default": false, "name": "Obstetrics and Gynecology", "value": "obstetrics and gynecology"}, {"default": false, "name": "Obesity Medicine", "value": "obesity medicine"}, {"default": false, "name": "Oncology and Hematology", "value": "oncology and hematology"}, {"default": false, "name": "Ophthalmology", "value": "ophthalmology"}, {"default": false, "name": "Orthopedics", "value": "orthopedics"}, {"default": false, "name": "Otolaryngology", "value": "otolaryngology"}, {"default": false, "name": "Pain Medicine", "value": "pain medicine"}, {"default": false, "name": "Palliative Medicine", "value": "palliative medicine"}, {"default": false, "name": "Pathology", "value": "pathology"}, {"default": false, "name": "Pediatrics and Adolescent Medicine", "value": "pediatrics and adolescent medicine"}, {"default": false, "name": "Pharmacology", "value": "pharmacology"}, {"default": false, "name": "Physical Medicine \u0026 Rehabilitation", "value": "physical medicine \u0026 rehabilitation"}, {"default": false, "name": "Plastic Surgery", "value": "plastic surgery"}, {"default": false, "name": "Podiatry", "value": "podiatry"}, {"default": false, "name": "Preventative Medicine", "value": "preventative medicine"}, {"default": false, "name": "Psychiatry", "value": "psychiatry"}, {"default": false, "name": "Psychology and Mental Health", "value": "psychology and mental health"}, {"default": false, "name": "Public Health", "value": "public health"}, {"default": false, "name": "Pulmonary Medicine", "value": "pulmonary medicine"}, {"default": false, "name": "Radiology and Nuclear Medicine", "value": "radiology and nuclear medicine"}, {"default": false, "name": "Rheumatology", "value": "rheumatology"}, {"default": false, "name": "Sleep Medicine", "value": "sleep medicine"}, {"default": false, "name": "Sports Medicine", "value": "sports medicine"}, {"default": false, "name": "Surgery", "value": "surgery"}, {"default": false, "name": "Thoracic Surgery", "value": "thoracic surgery"}, {"default": false, "name": "Urology", "value": "urology"}, {"default": false, "name": "N/A", "value": "n/a"}, {"default": false, "name": "Other", "value": "other"}], "supplementalText": "", "placeholder": "", "defaultValue": "", "instructions": ""}], "method": "post"}, "platform_name": "Harvard Medical School CME Online", "account_creation_allowed": true, "initial_mode": "login", "password_reset_form_desc": {"submit_url": "/account/password", "fields": [{"restrictions": {"min_length": 3, "max_length": 254}, "required": true, "name": "email", "type": "email", "supplementalLink": "", "errorMessages": {}, "label": "Email", "supplementalText": "", "placeholder": "username@domain.com", "defaultValue": "", "instructions": "The email address you used to register with Harvard Medical School CME Online"}], "method": "post"}, "is_account_recovery_feature_enabled": false, "login_redirect_url": "/dashboard"};
        LogistrationFactory(options);
        if ('newrelic' in window) {
            newrelic.finished();
            // Because of a New Relic bug, the finished() event doesn't show up
            // in Insights, so we have to make a new PageAction that is basically
            // the same thing. We still want newrelic.finished() for session
            // traces though.
            newrelic.addPageAction('xfinished');
        }
    
            });
        }).call(this, require || RequireJS.require);
  </script>
  <!-- begin segment footer -->
  <script type="text/javascript">
  </script>
  <!-- end segment footer -->
  <script charset="utf-8" src="https://prod-edxapp.edx-cdn.org/static/js/vendor/noreferrer.aa62a3e70ffa.js" type="text/javascript">
  </script>
  <script charset="utf-8" src="https://prod-edxapp.edx-cdn.org/static/js/utils/navigation.08930e16ab3d.js" type="text/javascript">
  </script>
  <script src="https://prod-edxapp.edx-cdn.org/static/js/header/header.309a1243e175.js" type="text/javascript">
  </script>
 </body>
</html>

