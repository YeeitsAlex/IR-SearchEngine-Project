https://lms.augusta.edu/
<!DOCTYPE html>
<html lang="en-US">
 <head>
  <meta content="IE=10.000" http-equiv="X-UA-Compatible"/>
  <meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" name="viewport"/>
  <meta content="text/html;charset=utf-8" http-equiv="content-type"/>
  <meta content="no-cache,no-store" http-equiv="cache-control"/>
  <meta content="no-cache" http-equiv="pragma"/>
  <meta content="-1" http-equiv="expires"/>
  <meta content="Connecting to adfs3.augusta.edu" name="mswebdialog-title"/>
  <title>
   Sign In
  </title>
  <script type="text/javascript">
   //<![CDATA[
function LoginErrors(){this.userNameFormatError = 'Enter your user ID in the format \u0026quot;domain\\user\u0026quot; or \u0026quot;user@domain\u0026quot;.'; this.passwordEmpty = 'Enter your password.'; this.passwordTooLong = 'Password must be shorter than 128 characters.';}; var maxPasswordLength = 128;
//]]>
  </script>
  <script type="text/javascript">
   //<![CDATA[
// Copyright (c) Microsoft Corporation.  All rights reserved.
function InputUtil(errTextElementID, errDisplayElementID) {

    if (!errTextElementID)  errTextElementID = 'errorText'; 
    if (!errDisplayElementID)  errDisplayElementID = 'error'; 

    this.hasFocus = false;
    this.errLabel = document.getElementById(errTextElementID);
    this.errDisplay = document.getElementById(errDisplayElementID);
};
InputUtil.prototype.canDisplayError = function () {
    return this.errLabel && this.errDisplay;
}
InputUtil.prototype.checkError = function () {
    if (!this.canDisplayError){
        throw new Error ('Error element not present');
    }
    if (this.errLabel && this.errLabel.innerHTML) {
        this.errDisplay.style.display = '';        
        var cause = this.errLabel.getAttribute('for');
        if (cause) {
            var causeNode = document.getElementById(cause);
            if (causeNode && causeNode.value) {
                causeNode.focus();
                this.hasFocus = true;
            }
        }
    }
    else {
        this.errDisplay.style.display = 'none';
    }
};
InputUtil.prototype.setInitialFocus = function (input) {
    if (this.hasFocus) return;
    var node = document.getElementById(input);
    if (node) {
        if ((/^\s*$/).test(node.value)) {
            node.focus();
            this.hasFocus = true;
        }
    }
};
InputUtil.prototype.setError = function (input, errorMsg) {
    if (!this.canDisplayError) {
        throw new Error('Error element not present');
    }
    input.focus();

    if (errorMsg) {
        this.errLabel.innerHTML = errorMsg;
    }
    this.errLabel.setAttribute('for', input.id);
    this.errDisplay.style.display = '';
};
InputUtil.makePlaceholder = function (input) {
    var ua = navigator.userAgent;

    if (ua != null && 
        (ua.match(/MSIE 9.0/) != null || 
         ua.match(/MSIE 8.0/) != null ||
         ua.match(/MSIE 7.0/) != null)) {
        var node = document.getElementById(input);
        if (node) {
            var placeholder = node.getAttribute("placeholder");
            if (placeholder != null && placeholder != '') {
                var label = document.createElement('input');
                label.type = "text";
                label.value = placeholder;
                label.readOnly = true;
                label.style.position = 'absolute';
                label.style.borderColor = 'transparent';
                label.className = node.className + ' hint';
                label.tabIndex = -1;
                label.onfocus = function () { this.nextSibling.focus(); };

                node.style.position = 'relative';
                node.parentNode.style.position = 'relative';
                node.parentNode.insertBefore(label, node);
                node.onkeyup = function () { InputUtil.showHint(this); };
                node.onblur = function () { InputUtil.showHint(this); };
                node.style.background = 'transparent';

                node.setAttribute("placeholder", "");
                InputUtil.showHint(node);
            }
        }
    }
};
InputUtil.focus = function (inputField) {
    var node = document.getElementById(inputField);
    if (node) node.focus();
};
InputUtil.hasClass = function(node, clsName) {
    return node.className.match(new RegExp('(\\s|^)' + clsName + '(\\s|$)'));
};
InputUtil.addClass = function(node, clsName) {
    if (!this.hasClass(node, clsName)) node.className += " " + clsName;
};
InputUtil.removeClass = function(node, clsName) {
    if (this.hasClass(node, clsName)) {
        var reg = new RegExp('(\\s|^)' + clsName + '(\\s|$)');
        node.className = node.className.replace(reg, ' ');
    }
};
InputUtil.showHint = function (node, gotFocus) {
    if (node.value && node.value != '') {
        node.previousSibling.style.display = 'none';
    }
    else {
        node.previousSibling.style.display = '';
    }
};
//]]>
  </script>
  <link href="/adfs/portal/css/style.css?id=D74D4D6943F32AE6F7F11D14D601DBB0E1A58919176EE512150366B6279AAF99" rel="stylesheet" type="text/css"/>
  <style>
   .illustrationClass {background-image:url(/adfs/portal/illustration/illustration.png?id=183128A3C941EDE3D9199FA37D6AA90E0A7DFE101B37D10B4FEDA0CF35E11AFD);}
  </style>
 </head>
 <body class="body" dir="ltr">
  <div id="noScript" style="position:static; width:100%; height:100%; z-index:100">
   <h1>
    JavaScript required
   </h1>
   <p>
    JavaScript is required. This web browser does not support JavaScript or JavaScript in this web browser is not enabled.
   </p>
   <p>
    To find out if your web browser supports JavaScript or to enable JavaScript, see web browser help.
   </p>
  </div>
  <script language="JavaScript" type="text/javascript">
   document.getElementById("noScript").style.display = "none";
  </script>
  <div id="fullPage">
   <div class="float" id="brandingWrapper">
    <div id="branding">
    </div>
   </div>
   <div class="float" id="contentWrapper">
    <div id="content">
     <div id="header">
      <img alt="adfs3.augusta.edu" class="logoImage" src="/adfs/portal/logo/logo.png?id=36F96090160675188B7B839D89BB6B43F751D5392DDBDE946AA3DDE39A93F83E"/>
     </div>
     <div id="workArea">
      <div class="groupMargin" id="authArea">
       <div id="loginArea">
        <div class="groupMargin" id="loginMessage">
         Sign in with your organizational account
        </div>
        <form action="/adfs/ls/?SAMLRequest=jdE9T8MwEAbgHYn%2fEHmP7XwnVlKpgqVSWVpgYEGufW0jJXbw2Yifj0tVwcjmu9N7enTu18GfzQ4%2bAqBPNo8DQTlP7lq%2fV6ormlLnB62aMs%2b4rI9Fzbu2qrTqFEiSvILD0ZqB5JSTZIMYYGPQS%2bNji2ddyos048%2b8EbwQVUYv8bJs3kiyRgTnY%2fbBGgwzuD24z1HBy247kLP3CwrGphmpDKcQN1LQgel8YtPCZESzyZ5Gwy7c7eVF44wkX%2fNkcCDBGWEljiiMnAGFV2K%2fftqKqBSLs94qO5HV%2fV2S9D9m95%2bgvInJ6uZrC5Bc8jw9al6n8VI6beu8SMsWdJ1DXhUlpx5MvAfSgxtPZ4%2bLVECVnX%2fpPbsiIqhnfz9k9Q0%3d" autocomplete="off" id="loginForm" method="post" novalidate="novalidate" onkeypress="if (event &amp;&amp; event.keyCode == 13) Login.submitLoginRequest();">
         <div class="fieldMargin error smallText" id="error">
          <label for="" id="errorText">
          </label>
         </div>
         <div id="formsAuthenticationArea">
          <div id="userNameArea">
           <input autocomplete="off" class="text fullWidth" id="userNameInput" name="UserName" placeholder="someone@example.com" spellcheck="false" tabindex="1" type="email" value=""/>
          </div>
          <div id="passwordArea">
           <input autocomplete="off" class="text fullWidth" id="passwordInput" name="Password" placeholder="Password" tabindex="2" type="password"/>
          </div>
          <div id="kmsiArea" style="display:none">
           <input id="kmsiInput" name="Kmsi" tabindex="3" type="checkbox" value="true"/>
           <label for="kmsiInput">
            Keep me signed in
           </label>
          </div>
          <div class="submitMargin" id="submissionArea">
           <span class="submit" id="submitButton" onclick="return Login.submitLoginRequest();" onkeypress="if (event &amp;&amp; event.keyCode == 32) Login.submitLoginRequest();" tabindex="4">
            Sign in
           </span>
          </div>
         </div>
         <input id="optionForms" name="AuthMethod" type="hidden" value="FormsAuthentication"/>
        </form>
        <div id="authOptions">
         <form action="https://adfs3.augusta.edu:443/adfs/ls/?SAMLRequest=jdE9T8MwEAbgHYn%2fEHmP7XwnVlKpgqVSWVpgYEGufW0jJXbw2Yifj0tVwcjmu9N7enTu18GfzQ4%2bAqBPNo8DQTlP7lq%2fV6ormlLnB62aMs%2b4rI9Fzbu2qrTqFEiSvILD0ZqB5JSTZIMYYGPQS%2bNji2ddyos048%2b8EbwQVUYv8bJs3kiyRgTnY%2fbBGgwzuD24z1HBy247kLP3CwrGphmpDKcQN1LQgel8YtPCZESzyZ5Gwy7c7eVF44wkX%2fNkcCDBGWEljiiMnAGFV2K%2fftqKqBSLs94qO5HV%2fV2S9D9m95%2bgvInJ6uZrC5Bc8jw9al6n8VI6beu8SMsWdJ1DXhUlpx5MvAfSgxtPZ4%2bLVECVnX%2fpPbsiIqhnfz9k9Q0%3d" id="options" method="post">
          <script type="text/javascript">
           function SelectOption(option) {
                    var i = document.getElementById('optionSelection');
                    i.value = option;
                    document.forms['options'].submit();
                    return false;
                }
          </script>
          <input id="optionSelection" name="AuthMethod" type="hidden"/>
          <div class="groupMargin">
          </div>
         </form>
        </div>
        <div class="groupMargin" id="introduction">
         <p>
          This system is the property of Augusta University or one its cooperative organizations. The system is restricted to authorized users only. The information on this system is also the property of Augusta University or one of its cooperative organizations, unless applicable laws, contracts or policies indicate otherwise. All users should have no expectation of privacy in any data, format, or other kind of information or communications transmitted, received, printed, stored, or recorded on any of our systems unless applicable laws indicate otherwise. Augusta University reserves the right to monitor usage of this system. You consent to such monitoring by authenticating. By authenticating you also agree to abide by the Augusta University use policy located at
          <a href="http://www.augusta.edu/compliance/policyinfo/policies.php">
           http://www.augusta.edu/compliance/policyinfo/policies.php
          </a>
          .
         </p>
        </div>
        <script type="text/javascript">
         //<![CDATA[

            function Login() {
            }

            Login.userNameInput = 'userNameInput';
            Login.passwordInput = 'passwordInput';

            Login.initialize = function () {

                var u = new InputUtil();

                u.checkError();
                u.setInitialFocus(Login.userNameInput);
                u.setInitialFocus(Login.passwordInput);
            }();

            Login.submitLoginRequest = function () { 
                var u = new InputUtil();
                var e = new LoginErrors();

                var userName = document.getElementById(Login.userNameInput);
                var password = document.getElementById(Login.passwordInput);

                if (!userName.value || !userName.value.match('[@\\\\]')) {
                    u.setError(userName, e.userNameFormatError);
                    return false;
                }

                if (!password.value) {
                    u.setError(password, e.passwordEmpty);
                    return false;
                }

                if (password.value.length > maxPasswordLength) {
                    u.setError(password, e.passwordTooLong);
                    return false;
                }

                document.forms['loginForm'].submit();
                return false;
            };

            InputUtil.makePlaceholder(Login.userNameInput);
            InputUtil.makePlaceholder(Login.passwordInput);
        //]]>
        </script>
       </div>
      </div>
     </div>
     <div id="footerPlaceholder">
     </div>
    </div>
    <div id="footer">
     <div class="floatReverse" id="footerLinks">
      <div>
       <span id="copyright">
        © 2013 Microsoft
       </span>
      </div>
     </div>
    </div>
   </div>
  </div>
  <script type="text/javascript">
   //<![CDATA[
// Copyright (c) Microsoft Corporation.  All rights reserved.

// This file contains several workarounds on inconsistent browser behaviors that administrators may customize.
"use strict";

// iPhone email friendly keyboard does not include "\" key, use regular keyboard instead.
// Note change input type does not work on all versions of all browsers.
if (navigator.userAgent.match(/iPhone/i) != null) {
    var emails = document.querySelectorAll("input[type='email']");
    if (emails) {
        for (var i = 0; i < emails.length; i++) {
            emails[i].type = 'text';
        }
    }
}

// Check whether the loginMessage element is present on this page.
var loginMessage = document.getElementById('loginMessage');
if (loginMessage)
{
       // loginMessage element is present, modify its properties.
       loginMessage.innerHTML = 'Sign in with your JagID. If you have an issue signing in, please contact the service desk at 706-721-4000.';
}

// Check whether the userNameInput element is present on this page.
var userNameInput = document.getElementById('userNameInput');
if (userNameInput)
{
// userNameInput element is present, modify its properties.
userNameInput.placeholder = 'Username';
}


// In the CSS file we set the ms-viewport to be consistent with the device dimensions, 
// which is necessary for correct functionality of immersive IE. 
// However, for Windows 8 phone we need to reset the ms-viewport's dimension to its original
// values (auto), otherwise the viewport dimensions will be wrong for Windows 8 phone.
// Windows 8 phone has agent string 'IEMobile 10.0'
if (navigator.userAgent.match(/IEMobile\/10\.0/)) {
    var msViewportStyle = document.createElement("style");
    msViewportStyle.appendChild(
        document.createTextNode(
            "@-ms-viewport{width:auto!important}"
        )
    );
    msViewportStyle.appendChild(
        document.createTextNode(
            "@-ms-viewport{height:auto!important}"
        )
    );
    document.getElementsByTagName("head")[0].appendChild(msViewportStyle);
}

// If the innerWidth is defined, use it as the viewport width.
if (window.innerWidth && window.outerWidth && window.innerWidth !== window.outerWidth) {
    var viewport = document.querySelector("meta[name=viewport]");
    viewport.setAttribute('content', 'width=' + window.innerWidth + 'px; initial-scale=1.0; maximum-scale=1.0');
}

// Gets the current style of a specific property for a specific element.
function getStyle(element, styleProp) {
    var propStyle = null;

    if (element && element.currentStyle) {
        propStyle = element.currentStyle[styleProp];
    }
    else if (element && window.getComputedStyle) {
        propStyle = document.defaultView.getComputedStyle(element, null).getPropertyValue(styleProp);
    }

    return propStyle;
}

// The script below is used for downloading the illustration image 
// only when the branding is displaying. This script work together
// with the code in PageBase.cs that sets the html inline style
// containing the class 'illustrationClass' with the background image.
var computeLoadIllustration = function () {
    var branding = document.getElementById("branding");
    var brandingDisplay = getStyle(branding, "display");
    var brandingWrapperDisplay = getStyle(document.getElementById("brandingWrapper"), "display");

    if (brandingDisplay && brandingDisplay !== "none" &&
        brandingWrapperDisplay && brandingWrapperDisplay !== "none") {
        var newClass = "illustrationClass";

        if (branding.classList && branding.classList.add) {
            branding.classList.add(newClass);
        } else if (branding.className !== undefined) {
            branding.className += " " + newClass;
        }
        if (window.removeEventListener) {
            window.removeEventListener('load', computeLoadIllustration, false);
            window.removeEventListener('resize', computeLoadIllustration, false);
        }
        else if (window.detachEvent) {
            window.detachEvent('onload', computeLoadIllustration);
            window.detachEvent('onresize', computeLoadIllustration);
        }
    }
};

if (window.addEventListener) {
    window.addEventListener('resize', computeLoadIllustration, false);
    window.addEventListener('load', computeLoadIllustration, false);
}
else if (window.attachEvent) {
    window.attachEvent('onresize', computeLoadIllustration);
    window.attachEvent('onload', computeLoadIllustration);
};

// Appends UPN to the user account

if (typeof Login != 'undefined'){
    Login.submitLoginRequest = function () { 
    var u = new InputUtil();
    var e = new LoginErrors();
    var userName = document.getElementById(Login.userNameInput);
    var password = document.getElementById(Login.passwordInput);
    if (userName.value && !userName.value.match('[@\\\\]')) 
    {
        var userNameValue = userName.value + '@augusta.edu'
        document.forms['loginForm'].UserName.value = userNameValue;
    }

    if (!userName.value) {
       u.setError(userName, e.userNameFormatError);
       return false;
    }


    if (!password.value) 
    {
        u.setError(password, e.passwordEmpty);
        return false;
    }
    document.forms['loginForm'].submit();
    return false;
};
}

//]]>
  </script>
 </body>
</html>

