https://giveto.ucsd.edu
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html id="HTML" lang="en-us" xmlns="http://www.w3.org/1999/xhtml">
 <head id="PageHead">
  <title>
   Make a Gift - Online Giving - UC San Diego
  </title>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <meta content="http://schemas.microsoft.com/intellisense/ie5" name="vs_targetSchema"/>
  <link href="/stylesheet0.636585475375170000.css?id=0&amp;iuqt=1" rel="stylesheet" type="text/css"/>
  <link href="/stylesheet30.636754931826770000.css?id=30&amp;nodefaults=1&amp;iuqt=1" rel="stylesheet" type="text/css"/>
  <link href="/Client/Styles/IE8Menu.css?&amp;iuqt=1" rel="stylesheet" type="text/css"/>
  <link href="images/FavIcon.ico" rel="SHORTCUT ICON" type="image/x-icon"/>
  <link href="images/FavIcon.ico" rel="ICON" type="image/x-icon"/>
  <base id="baseId" target="_self"/>
  <meta content="7/27/2018 12:37:31 AM" name="last-modified"/>
 </head>
 <body id="BodyId" style="margin: 0px; padding: 0px; border: 0px">
  <form action="/" id="form1" method="post" onsubmit="javascript:return WebForm_OnSubmit();">
   <div class="aspNetHidden">
    <input id="ScriptManager1_HiddenField" name="ScriptManager1_HiddenField" type="hidden" value=""/>
    <input id="__EVENTTARGET" name="__EVENTTARGET" type="hidden" value=""/>
    <input id="__EVENTARGUMENT" name="__EVENTARGUMENT" type="hidden" value=""/>
    <input id="__VIEWSTATE" name="__VIEWSTATE" type="hidden" value="/wEPDwULLTExMjQ2NDE3ODAPFgQeCkNTUkZfVE9LRU4FIGY0OWQ1MzkzOGFiODRiNzc4ZWQwY2QzYWFmZGE3MTM4HgpNb2RhbExldmVsZhYCZg8WAh4EbGFuZwUFZW4tdXMWAgIDD2QWAgIBDxYCHgZhY3Rpb24FAS8WBAIDD2QWAmYPZBYCAgsPZBYCZg8PFgIeC1ZTX1NDUkVFTklEAv////8PZBYEZg9kFgJmD2QWAmYPFgIeC2RhdGEtcGFydGlkBQQxMzAzFgICAw9kFgJmD2QWAgIBD2QWAgIBD2QWAgIBD2QWAgIBDxAPFgYeDkRhdGFWYWx1ZUZpZWxkBQdFbnRyeUlEHg1EYXRhVGV4dEZpZWxkBQtEZXNjcmlwdGlvbh4LXyFEYXRhQm91bmRnZBAVAw1PbmUtdGltZSBHaWZ0FlJlY3VycmluZyBNb250aGx5IEdpZnQOUGxlZGdlIFBheW1lbnQVAyQyYzg5MDA5ZS00ZjQ4LTQ4YjgtOTY0My01MTNhZTMzMGRmMTckZGRmZjI0YjUtZmExNS00MzBjLTg5MTAtMTFjZWNkMzI1YzhiJDk4OGM1NDIzLTUwYTUtNGI1MS1iNzhhLTRmMDQ4ZjkwN2E0ZBQrAwNnZ2dkZAICDxYCHgdWaXNpYmxlaGQCBQ9kFgJmDxYCHwloZBgBBR5fX0NvbnRyb2xzUmVxdWlyZVBvc3RCYWNrS2V5X18WAgUvUEMyMzg5JGN0bDAwJEFkdmFuY2VkRG9uYXRlRm9ybSRjYlJlY3VycmluZ0dpZnQFL1BDMjM4OSRjdGwwMCRBZHZhbmNlZERvbmF0ZUZvcm0kY2JDb3Jwb3JhdGVHaWZ0IcIL3iYMXBDupD4DqRg2zDTthHI="/>
   </div>
   <script type="text/javascript">
    //<![CDATA[
var theForm = document.forms['form1'];
if (!theForm) {
    theForm = document.form1;
}
function __doPostBack(eventTarget, eventArgument) {
    if (!theForm.onsubmit || (theForm.onsubmit() != false)) {
        theForm.__EVENTTARGET.value = eventTarget;
        theForm.__EVENTARGUMENT.value = eventArgument;
        theForm.submit();
    }
}
//]]>
   </script>
   <script src="/WebResource.axd?d=-EJm3aHq4vZ8ssGCawDDu4CL4tZFPiUoxof-_ojUOEayMtI7-6j68Ngi8J5B5GZsEPvd85Qflq072ShcqBJGVjXkfZA1&amp;t=636767360587389734" type="text/javascript">
   </script>
   <script src="/Client/Scripts/API/BBAPI-min.js" type="text/javascript">
   </script>
   <script src="/Client/Scripts/Bbnccore-min.js" type="text/javascript">
   </script>
   <script type="text/javascript">
    //<![CDATA[
var LOGGEDIN = "";//]]>
   </script>
   <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.3/jquery.min.js" type="text/javascript">
   </script>
   <script src="/Client/Scripts/jquery/jquery-migrate-1.3.0.js" type="text/javascript">
   </script>
   <script src="/Client/Scripts/jqueryui/1.11.3/jquery-ui.js" type="text/javascript">
   </script>
   <script type="text/javascript">
    //<![CDATA[
BLACKBAUD.netcommunity.jQuery.setVersionReference();//]]>
   </script>
   <script src="/Client/Scripts/jquery/jquery.validate.js" type="text/javascript">
   </script>
   <script src="/Client/Scripts/jquery/additional-methods.js" type="text/javascript">
   </script>
   <script src="/Client/Scripts/jquery/jquery.maskedinput-1.1.4.js" type="text/javascript">
   </script>
   <script type="text/javascript">
    //<![CDATA[
ROOT_PATH = 'https://espi.ucsd.edu/'; BLACKBAUD.api.pageInformation.rootPath = 'https://espi.ucsd.edu/';BLACKBAUD.netcommunity.WebMethodsURL = 'https://espi.ucsd.edu/webservices/webmethods.asmx';BLACKBAUD.netcommunity.images = BLACKBAUD.netcommunity.images || {}; BLACKBAUD.netcommunity.images.imageUrlPrefix = 'https://espi.ucsd.edu/view.image?id=';modallvl = 0; ;var isIE = (window.ActiveXObject || "ActiveXObject" in window);;var DebugMode = false; ;var isAdminPage = false;;BLACKBAUD.netcommunity.bbAppFxRoot = 'https://espc.ucsd.edu/bbappfx';;BLACKBAUD.netcommunity.bbAppFxDB = 'BBInfinity';;BLACKBAUD.netcommunity.PageID = 624; BLACKBAUD.api.pageInformation.pageId = 624;;//]]>
   </script>
   <script src="/client/scripts/json2.js" type="text/javascript">
   </script>
   <script src="/ScriptResource.axd?d=ZlR3ECbzrGGo2SFWw72xjGgDXYNs5WLUEG2uEgLaq-_jUMyMFsNtJ8mZ65phmO-e0LeQyfFUwKGF7Wq01hDWw6owag5-s_4FaqLLhK8ezf-RBv9z0&amp;t=ffffffffec54f2d7" type="text/javascript">
   </script>
   <script src="/ScriptResource.axd?d=osNYMVUVBK64FBJej0dU-wSiQBZHoE3X4zMybkQkeqB2aHZ87wk5w2eoyQdW93rTWs41JxYrCkwc9HBXQWaIp5g0TryJqbUquPqRU1KT0MPo18hQILvMXF58lWESCqiFr3Chaw2&amp;t=ffffffffec54f2d7" type="text/javascript">
   </script>
   <script src="/Client/Scripts/webkit.js" type="text/javascript">
   </script>
   <script type="text/javascript">
    //<![CDATA[
function WebForm_OnSubmit() {
BLACKBAUD.netcommunity.setBrowserDateTimeForServer('hidBrowserDateTime');
return true;
}
//]]>
   </script>
   <div class="aspNetHidden">
    <input id="__VIEWSTATEGENERATOR" name="__VIEWSTATEGENERATOR" type="hidden" value="8CAEDFE0"/>
   </div>
   <script type="text/javascript">
    //<![CDATA[
Sys.WebForms.PageRequestManager._initialize('ScriptManager1', 'form1', [], [], [], 90, '');
//]]>
   </script>
   <div id="fullWidth">
    <script src="document.doc?id=2" type="text/javascript">
    </script>
    <div id="loginBar">
     <div class="gutter clearfix">
     </div>
    </div>
    <div class="wrapHeader">
     <div class="topnavbar">
     </div>
     <div class="container">
      <div class="gutter clearfix">
       <div class="wrapLogo">
        <a href="http://campaign.ucsd.edu">
         <img alt="Campaign for UC San Diego" class="header-logo" src="https://espi.ucsd.edu/image/ucsd-giving-4c-logo.svg"/>
        </a>
       </div>
       <div class="wrapUtility">
        <p>
         <a class="titleLink" href="/">
          Give to UC San Diego
         </a>
        </p>
       </div>
      </div>
     </div>
    </div>
    <div class="wrapNav">
     <div class="gutter clearfix">
     </div>
    </div>
    <div class="wrapContentUtility">
     <div class="gutter clearfix">
     </div>
     <div class="breadcrumbs clearfix">
     </div>
    </div>
    <div class="singleCol">
     <div class="BBDonationApiContainer" data-partid="1303" id="PC2389_ctl00_Container">
      <div class="input">
       <span id="PC2389_ctl00_spAdvancedDonation">
        <script type="text/javascript">
         $( 'head' ).append( '<meta name="viewport" content="width=device-width, initial-scale=1">' );
    $( 'head' ).prepend( $( 'head meta:last' ) );
        </script>
        <link href="/Client/Styles/Custom/jquery.dataTables.css" rel="stylesheet" type="text/css"/>
        <script src="/Client/Scripts/jQueryPlugins/jquery.dataTables.min.js" type="text/javascript">
        </script>
        <script src="/client/Scripts/jquery/jquery.blockui.js" type="text/javascript">
        </script>
        <script src="/client/scripts/UCSDCommon.js" type="text/javascript">
        </script>
        <script src="/client/scripts/UCSDOnlineGivingADF.js" type="text/javascript">
        </script>
        <!-- Bootstrap core JS -->
        <script src="/client/styles/bootstrap/js/bootstrap.min.js">
        </script>
        <!-- [ last update: 2018-07-10 9:00 ] -->
        <script type="text/javascript">
         //config class
	//-----------------------------------------------------------------------------------------------------------------
	var ADFConfig = {
		MerchantAccounts: {
			Foundation: "C5991CFE-737D-4CF0-A2D2-8ABC0A728A94",
			Regents: "F1993D0A-0031-468D-B1FC-24C2B8923626"
		},
		Queries: {
			GreatestNeeds: "580B94B7-35AA-4E52-A8D5-C7F8FBFAD535",
			SKQuery: '2FBE8893-CCAA-4B2F-873B-92974424CDCC'
		},
		Attributes:{
			GiftType: '6EBD0189-7718-4EE0-91D4-39DF28167B47',
			RecurringGift: '5FDA9BAF-06D3-44B2-B2D3-0FF797C4A8D1',
			SpecialInstructions: '39048B32-ECBE-45FE-B56F-436BA0C3D962'
		},
		MatchFinderURL: 'http://matchfinderonline.blackbaud.com/MatchGiftInquiry.aspx?cid=45905',
		PayrollDeductionURL: '/DonationSavePayrollDeduction'
	};

    var isIE = false;

	// google class
	//-----------------------------------------------------------------------------------------------------------------

	//var googlePlaces = (function () {
	//	function init() {
	//		// Create the autocomplete object, restricting the search
	//		// to geographical location types.
	//		autocomplete = new google.maps.places.Autocomplete(
	//		/** @type {HTMLInputElement} */(document.getElementById('googlePlaceLookup')),
    //            { types: ['geocode'] });
	//		// When the user selects an address from the dropdown,
	//		// populate the address fields in the form.
	//		google.maps.event.addListener(autocomplete, 'place_changed', function () {
	//			fillInAddress();
	//		});

	//		$('#googlePlaceLookup').on('focus', function(e) {
	//			geolocate();
	//		});
	//	}

	//	var componentForm = {
	//		street_number: 'short_name',
	//		route: 'long_name',
	//		locality: 'long_name',
	//		administrative_area_level_1: 'short_name',
	//		country: 'long_name',
	//		postal_code: 'short_name'
	//	};

	//	function geolocate() {
	//		if (navigator.geolocation) {
	//			navigator.geolocation.getCurrentPosition(function (position) {
	//				var geolocation = new google.maps.LatLng(
    //                    position.coords.latitude, position.coords.longitude);
	//				autocomplete.setBounds(new google.maps.LatLngBounds(geolocation,
    //                    geolocation));
	//			});
	//		}
	//	}

	//	function fillInAddress() {
	//		// Get the place details from the autocomplete object.
	//		var place = autocomplete.getPlace(), values = place.address_components;

	//		// Get each component of the address from the place details
	//		// and fill the corresponding field on the form.
	//		var streetNumber, route, city, state, country, postalCode;
	//		for (var i = 0; i < place.address_components.length; i++) {
	//			var addressType = place.address_components[i].types[0];
	//			if (componentForm[addressType]) {
	//				var val = place.address_components[i][componentForm[addressType]],
    //                    formCtrl;

	//				switch (addressType) {
	//					case "route":
	//						route = val;
	//						break;
	//					case "street_number":
	//						streetNumber = val;
	//						break;
	//					case "locality":
	//						city = val;
	//						break;
	//					case "administrative_area_level_1":
	//						state = val;
	//						break;
	//					case "country":
	//						country = val;
	//						break;
	//					case "postal_code":
	//						postalCode = val;
	//						break;
	//				}
	//			}
	//		}
	//		$('#streetAddress').val(streetNumber + ' ' + route);
	//		$('#city').val(city);
	//		$('#state').val(state);
	//		$('#country').val(country);
	//		$('#postalCode').val(postalCode);
	//		aafStateMessage();
	//	}

	//	return {
	//		init: init,
	//		geolocate: geolocate
	//	};
	//})();

    /*
    Function Name:  Function aafStateMessage()
    Two main functions:
    1.  When a donor enters American Armed Force Address with state AA, AE, AP, a warning message will be displayed to notify donor that
        our current secure system we currently use to process credit card gift is not able to accept billing address from American Armed Force locations
    2.  Hide a payment button to prvent donor continue to submit the payment.

    Function will be called in fillInAddress() and bindEvents()

    Added by Suki Chui on July 7, 2015
    */
	function aafStateMessage() {
	    var aafState = $('#state').val();

	    if (aafState == 'AA' || aafState == 'AE' || aafState == 'AP') {
	        $('#warnAAFSection').html("<span style=\"color:brown;\">Important: </span>Unfortunately, the secure system we currently use to process credit card gifts is unable to accept billing addresses from American Armed Forces locations. We deeply regret this inconvenience and want to assure you that we are actively pursuing a solution with them. In the meantime, we thank you for your desire to make a gift to UC San Diego and would be happy to facilitate your gift over the phone at (858) 246-1090. You can also email us <a href=\"mailto:annualgiving@ucsd.edu\">here</a> with any questions. Thank you for your service to our country and your support of UC San Diego.");
	        $('#tributeSection').hide("fast");
	        $('#postalCodeSection').hide("fast");
	        $('#btnBillingInformation').css({ 'display': 'none' });
	        $('#warnSection').hide("fast");
	    } else {
	        $('#warnAAFSection').html("");
	        $('#tributeSection').show("fast");
	        $('#postalCodeSection').show("fast");
	        $('#btnBillingInformation').css({ 'display': '' });
	        $('#warnSection').show("fast");
	    }
	}

	// MAIN FUNCTION HERE
	//-----------------------------------------------------------------------------------------------------------------
    //(function(utility, config, google) {
	( function ( utility, config)
	{
		var blocked,
			donationService,
			part,
			partInstanceId,
			addressLinesCaption,
			cityCaption,
			stateCaption,
			postCodeCaption,
			pages = ['donationInformation', 'billingInformation'],
			fundItem = "";

      // variables for progress meter
      var $point_arr,
         $points,
         $progress,
         activePoint,
         maxPoints,
         progressIndexStart;

		// page Load
		//-----------------------------------------------------------------------------------------------------------------
		//outline of what happens on page load
		//the page loads twice, once by the user, once by the Blackbaud payment page
		//the Blackbaud payment page passes a "t" in the querystring
		$(window).load(function() {
			var t;
			blocked = false;
			part = $(".donationForm");
			partInstanceId = part.parents(".BBDonationApiContainer").attr("data-partid");
			donationService = new BLACKBAUD.api.DonationService(partInstanceId);
			t = BLACKBAUD.api.querystring.getQueryStringValue("t");

			if (t) {
				$(".donationForm").hide();
				$(".confirmation").show();
				completeBBSPPayment(t);
			} else {
				$(".donationForm").show();
				$(".confirmation").hide();
				donationFormLoad();
			}

         // Initialize progress meter
         $points = $('.progress-points').first();
         $point_arr = $('.progress-point');
         $progress = $('.progress').first();
         progressIndexStart = $points.data('current') - 1; // get initial progress point index
         maxPoints = $point_arr.length - 1;
         tracker = 0;
         activePoint = 0;

         updateProgress(progressIndexStart);

         // Event listener for progress points
         $points.on('click', 'li', function(event) {
            var progressIndexClicked;
            progressIndexClicked = $point_arr.index(this); //index of progress point that was clicked (0-3)

            // Can only go back in the process, not forward
            if (progressIndexClicked < activePoint) {
               if (progressIndexClicked === 0) {
                  tracker = 1;
               }
               else if (progressIndexClicked === progressIndexStart) {
                  tracker = 0;
               }

               if (progressIndexClicked == 0) {
                  location.href = "/";
               }
               else if (progressIndexClicked == 1) {
                  $('#donationInformation input').removeClass('ignoreClass');
                  $('#personalInfoSection input').removeClass('ignoreClass');
                  $('.chkMain').trigger('change');
                  hidePersonalInfoSection();
                  showGiftInfoSection();
               }
               updateProgress(progressIndexClicked);
            }
         });

			// Set isIE flag: Is the browser Internet Explorer?
			var ua = window.navigator.userAgent;
			var msie = ua.indexOf("MSIE ");
			if (msie > 0 || !!navigator.userAgent.match(/Trident.*rv\:11\./)) { isIE = true; } else { isIE = false; }

		});


		//if getFundByFilterNameAndValue is called, then its callback finishes the donation pagesetup
		function donationFormLoad() {
			bindGreatestNeeds();
			bindCountryDropdown('country', 'state');
			bindCountryDropdown('tributeCountry', 'tributeState');
			bindEvents();
			$('#noResults').hide(); // hide the no results error until a search is run
			$('#searchResultsPanel').hide(); //hide the search results table until a search is run
			setupValidation();
			//google.init();

			//check direct link to page2
			var queryfundID = BLACKBAUD.api.querystring.getQueryStringValue('id');
			var fundNum = BLACKBAUD.api.querystring.getQueryStringValue('txtfundno');
			fundNum = fundNum == "" ? BLACKBAUD.api.querystring.getQueryStringValue('x_fundno') : fundNum;
			var siteKey = BLACKBAUD.api.querystring.getQueryStringValue('sk');

			if (queryfundID != "") {
				getFundByFilterNameAndValue("Designation ID", queryfundID);
			}  else if (fundNum != "") {
				getFundByFilterNameAndValue("Fund Number", fundNum);
			} else if (siteKey != "") {
				getFundByFilterNameAndValue("Key", siteKey);
			} else {
				completePageSetup(1);
			};
		};


		//page setup helper
		function getFundByFilterNameAndValue(filterName, filterValue) {
			var queryService = new BLACKBAUD.api.QueryService();
			var filter = { columnName: filterName, value: filterValue };
			queryService.getResults(config.Queries.SKQuery, function (obj) {
			    var fundInfo = UCSDCommonJS.arrayJoiner(obj);
			    if (fundInfo.length > 0) {
			        fundInfo.sort(function(a, b) { return a['Fund Number'].length - b['Fund Number'].length; });
					fundItem = fundInfo[0];
			    }

			    // Code added by Suki Chui for footprint ticket 27712 - Begin
			    /*
                Date:           09/02/2015
                Description:    Basically, we had a few Provosts funds that were closed, but the giving buttons on their sites were not updated.
                                When you clocked on them, we discovered it was redirecting to totally unrelated funds.
                Discovery:      Using SQL Profiler to investigate the issue and noticed that the ad hoc query appended with like statement, this is the reason causing the issue.
                Example:        https://espi.ucsd.edu/?sk=3&txtFundName=Revelle+Provost%27s+Fund+(2229)&txtFundNo=2229&txtSolicCode=&pk=
                                Expected Result: 2229 is an inactive fund. It should redirect user to the home page of online giving site. Instead, it stays on page 2 with a fund 42229.
                Solution:       Provided below code to verify the fund information. If the fund from search result is not the same as querystring clear the search result. This will redirect users back to the
                                Home page of the online giving site. Otherwise, it remains on page 2.
                Notification:   Notified user on 09/02/2015 and informed them that we will run more testing and requested them to run testing as well.
                */
			    var queriedFundNum = fundItem['Fund Number'];
			    var queriedID = fundItem['Designation ID'];
			    var queriedKey = fundItem['Key'];
			    var queriedDescription = fundItem['Description'];

			   if (filterName == 'Fund Number') {
			        if (queriedFundNum != filterValue) {
			            fundItem = "";
			        }
			    } else if (filterName == 'Designation ID') {
			        if (queriedID != filterValue) {
			            fundItem = "";
			        }
			    } else if (filterName == 'Key') {
			        if (queriedKey != filterValue) {
			            fundItem = "";
			        }
			    }


			   sessionStorage.setItem("fundDesc", queriedDescription);

			    // Code added by Suki Chui for footprint ticket 27712 - End
			    completePageSetup(2);

			}, null, [filter]);
		}


		//logic to display page 1 or page 2
		function completePageSetup(pageNum) {

			if (pageNum == 1 || fundItem == '') {
				$('#donationInformation input').removeClass('ignoreClass');
				$('#billingInformation input').addClass('ignoreClass');
				$('#billingInformation textarea').addClass('ignoreClass');
				showPage(1);
				$('#donationInformation').show();
			} else {
				$('#donationInformation input').addClass('ignoreClass');
				$('#billingInformation input').removeClass('ignoreClass');
				$('#billingInformation textarea').removeClass('ignoreClass');
				$('#fundNameText').html(getFundNameOnly());

            // Check browser support for session storage
            if (typeof(Storage) !== "undefined") {
               $('#fundDescriptionText').html(sessionStorage.getItem("fundDesc"));
            } else {
               $('#fundDescriptionText').html("Fund description not available");
            }
				$('#fundNumberText').html(getFundNumber());
				showPage(2);
				$('#billingInformation').show();
			}
		}


		// page 1 - Greatest needs
		//-----------------------------------------------------------------------------------------------------------------
		function bindGreatestNeeds() {
			blockForm();
			var queryService = new BLACKBAUD.api.QueryService();
			var statusFilter = { columnName: 'Is active', value: 'True' };
			queryService.getResults(config.Queries.GreatestNeeds, GreatestNeedsCallback, null, [statusFilter]);
		}

		function GreatestNeedsCallback(obj) {
			var greatNeeds = UCSDCommonJS.arrayJoiner(obj);
			var numNeeds = 0;
			// The maximum number of "greatest needs" funds to display is six.
			if (greatNeeds.length > 6) {
				numNeeds = 6;
			} else {
				numNeeds = greatNeeds.length;
			}
			for (i = 0; i < numNeeds; i++) {
            var gn = greatNeeds[i],
            	cleanTitle = gn['ESPI Marketing Name Attribute\\Value'],
            	cleanHoverText = gn['ESPI Marketing Text Attribute\\Value'].replace(/'/g, "&#39;"),
               // + " (" + gn['Designation Extension\\Fund Number'] + ")",
            	fundTitle = $("<span class='noTab'>" + cleanTitle + "</span>"),
            	listElement = $("<li><label class='btn btn-default btn-block btn-funds'><input type='radio' name='fundID' value='" + gn['System record ID']
               + "' data-description='"
               + cleanHoverText
               + "'></label></li>");
            listElement.find("label").append(fundTitle);
            $("#greatestNeeds").append(listElement);
			}
			// This class ensures that user cannot tab into the control
			$('.noTab').attr('tabindex', '-1');
			unblockForm();

         // Take user to next step when fund is clicked on
         $('input:radio[name=fundID]').on('change', function (e) {
            console.log("radio click");
            e.preventDefault();
            var fundDescriptionData = $('input:radio:checked[name=fundID]').data('description');
            // Check browser support
            if (typeof(Storage) !== "undefined") {
                // Store
                sessionStorage.setItem("fundDesc", fundDescriptionData);
            } else {
                console.log("Sorry, your browser does not support Web Storage...");
            }
            location.href = '/make-a-gift?id=' + $('input:radio:checked[name=fundID]').val();
         });
		}


		// page2 misc helpers
		//-----------------------------------------------------------------------------------------------------------------
		//helper - pageLoad
		function showPage(pageNum) {
			var i, section, numPages;
			for (i = 0, numPages = pages.length; i < numPages; i++) {
				section = part.find('#' + pages[i]);
				if (pageNum === i + 1) {
					section.show();
				} else
					section.hide();
			}
            // hide sections for new checkout process
            if (pageNum == 2) {
               updateProgress(1);
               hidePersonalInfoSection();
            }
			setTitle();
		}

      function hidePersonalInfoSection() {
         $("#personalInfoSection").hide();
         $("#btnBillingInformation").hide();
         $("#btnBackToStep2").hide();
         $("#warnSection").hide();
      }

      function showPersonalInfoSection() {
         $('#personalInfoSection input').removeClass('ignoreClass');
         $("#personalInfoSection").show();
         $("#btnBillingInformation").show();
         $("#btnBackToStep2").show();
         $("#warnSection").show();
      }

      function hideGiftInfoSection() {
         $(".giftInfoSection").hide();
         $("#btnYourInformation").hide();
         $("#btnBackToStep1").hide();
         $("#tributeSection").hide();
      }

      function showGiftInfoSection() {
         $(".giftInfoSection").show();
         $("#btnYourInformation").show();
         $("#btnBackToStep1").show();
         $("#tributeSection").show();
      }

		function setTitle() {
			$('#ADFTitle').text('Thanks For Your Gift');
		}

		//used in one place, but leave for now
		function returnURL() {
			return [location.protocol, '//', location.host, location.pathname].join('');
		}

		function setValidationMessage(html) {
			part.find("#validationErrors").html(html);
		}

		function blockForm() {
			if (!blocked) {
				BLACKBAUD.api.blockElement($('.donationForm'));
				blocked = true;
			}
		}

		function unblockForm() {
			BLACKBAUD.api.unblockElement($('.donationForm'));
			blocked = false;
		}


		//used in the save and in the payroll deduction link
		function getDonationAmount() {
			return $('#txtDonationAmount').val();
		}

		//used in the page2 display and in the payroll deduction link
		function getFundName() {
			return fundItem['Public Name'] + " (" + fundItem['Fund Number'] + ")";
		}

      function getFundNameOnly() {
         return fundItem['Public Name'];
      }

      function getFundNumber() {
         return fundItem['Fund Number'];
      }

		//used in greatest needs and the fund search
		function checkFundControl(data) {
			$('input:radio[value=' + data.fundID + ']').attr('checked', 'checked');
		}


		//display event handler helper
		function getRecurringGiftAndCredit() {
		    var idSelected = $( '#PC2389_ctl00_AdvancedDonateForm_rbGiftTypeList' ).find( ":checked" ).attr( "id" );
		    console.log( "idSelected: " + idSelected.substr( -1 ) );
		    var isRecurringGift = idSelected.substr( -1 ) == "1";
		    var isCreditPayment = $('#PC2389_ctl00_AdvancedDonateForm_rbPaymentTypeList').find(":checked").val() == "0";
		    var result = isRecurringGift && isCreditPayment;
		    return result;
		}


		// helpers - country / state / address
		//-----------------------------------------------------------------------------------------------------------------
		function bindCountryDropdown(ddlCountryID, ddlStateID) {
			var countryService, $ddlCountry;
			blockForm();
			countryService = new BLACKBAUD.api.CountryService();
			$ddlCountry = $("#" + ddlCountryID);
			$ddlCountry.find("option[value='UNITED STATES']").attr("selected", "selected");
			$ddlCountry.change({ 'ddlStateID': ddlStateID, 'ddlCountryID': ddlCountryID }, bindStateDropdown);
			$ddlCountry.trigger('change');

			countryService.getCountries(function(d) {
				var countryArr = [];
				$.each(d, function() {
					countryArr.push("<option value='" + this["Description"] + "' id='" + this["Id"] + "'>" + this["Description"] + "</option>");
				});
				$ddlCountry.html(countryArr.join());
				$ddlCountry.find("option[value='UNITED STATES']").attr("selected", "selected");
				$ddlCountry.change({ 'ddlStateID': ddlStateID, 'ddlCountryID': ddlCountryID }, bindStateDropdown);
				$ddlCountry.trigger('change');
			});
		}


		function bindStateDropdown(e) {
			var stateID, countryID, $stateDDL, $countryDDL;
			blockForm();
			stateID = e.data.ddlStateID;
			countryID = e.data.ddlCountryID;
			$stateDDL = $('#' + stateID);
			$countryDDL = $('#' + countryID);
			$stateDDL.empty();

			var selectedCountryID = $countryDDL.find(":selected").attr("id");

			var countryService = new BLACKBAUD.api.CountryService();
			if (selectedCountryID) {
			    countryService.getStates(selectedCountryID, function (d) {
			        var stateArr = [];
			        $.each(d, function () {
			            stateArr.push("<option value='" + this["Abbreviation"] + "'>" + this["Description"] + "</option>");
			        });
			        $stateDDL.html(stateArr.join());
			        $stateDDL.find("option[value='CA']").attr("selected", "selected");
			        unblockForm();

			        updateAddressLabels(selectedCountryID, countryID);
			    });
			}
		}

		function updateAddressLabels(selectedCountryID, countryID) {
			var $lblStreetAddress, $lblCity, $lblState, $lblZip;
			if (countryID === 'tributeCountry') {
				$lblStreetAddress = $('#lblTributeStreetAddress');
				$lblCity = $('#lblTributeCity');
				$lblState = $('#lblTributeState');
				$lblZip = $('#lblTributeZip');
			} else {
				$lblStreetAddress = $('#lblStreetAddress');
				$lblCity = $('#lblCity');
				$lblState = $('#lblState');
				$lblZip = $('#lblZip');
			}
			blockForm();

			var countryService = new BLACKBAUD.api.CountryService();
			countryService.getAddressCaptions(selectedCountryID, function(d) {
				if (!!d) {
					addressLinesCaption = d["AddressLines"];
					cityCaption = d["City"];
					stateCaption = d["State"];
					postCodeCaption = d["PostCode"];
				} else {
					addressLinesCaption = "Address lines";
					cityCaption = "City";
					stateCaption = "State/Providence";
					postCodeCaption = "Zip/Postal code";
				}

				$lblStreetAddress.find("label").text(addressLinesCaption);
				$lblCity.find("label").text(cityCaption);
				$lblState.find("label").text(stateCaption);
				$lblZip.find("label").text(postCodeCaption);

				unblockForm();
			}, function() {
				unblockForm();
			});
		}

      // Updates the progress meter
      function updateProgress(progressIndex) {
         if (progressIndex !== activePoint) {
            activePoint = progressIndex;
            var $_activePoint = $point_arr.eq(activePoint);

            $point_arr
               .removeClass('completed active')
               .slice(0, activePoint).addClass('completed');

            $_activePoint.addClass('active');

            $progress.css('width', (progressIndex / maxPoints * 100) + "%");
         }
      };


		// bind events section
		//-----------------------------------------------------------------------------------------------------------------

		function bindEvents() {
			var subsection;

			//help buttons - page 1
			

			$('#aDedicateGiftHelp').on('click', function() {
				$('#PC2389_ctl00_AdvancedDonateForm_DedicateGiftHelpText').toggle();
				return false;
			});

			//matchfinder link
			$('#matchFinderLink').on('click', function(e) {
				e.preventDefault();
				window.open(config.MatchFinderURL, 'matchFinderWindow', 'toolbar=no, scrollbars=yes, resizable=yes, top=50, left=50, width=750, height=850');
			});


			//developer note: you may have to uncheck the recurring box too
			$('#PC2389_ctl00_AdvancedDonateForm_rbGiftTypeList').on('change', function() {
			    $( '#recurringThanks' ).toggle( getRecurringGiftAndCredit() );
			});

			//developer note: if you open the tribute sections, then hide them here will the validators will fire?
			$('#PC2389_ctl00_AdvancedDonateForm_rbPaymentTypeList').on('change', function(e) {
			    $( '#recurringThanks' ).toggle( getRecurringGiftAndCredit() );
				var isPayrollDeduction = $('#PC2389_ctl00_AdvancedDonateForm_rbPaymentTypeList').find(":checked").val() == "Payroll";
			    $('#PC2389_ctl00_AdvancedDonateForm_payrollBeAware').toggle(isPayrollDeduction);
			    if (isPayrollDeduction) {
			        $('#recurringThanks').toggle(false);
                 $("#warnSection").toggle(isPayrollDeduction);
			        } else {
                 $("#warnSection").toggle(isPayrollDeduction);
			    }
			    // $('#personalInfoSection').toggle(!isPayrollDeduction);
				$('#tributeSection').toggle(!isPayrollDeduction);
				// $('#btnBillingInformation').toggle(!isPayrollDeduction);
				$('#btnYourInformation').toggle(!isPayrollDeduction);
				$('#payrollLink').toggle(isPayrollDeduction);
			});


		    // Code added by Suki Chui for footprint ticket 29064 - Begin (Section 1)
		    /*
            Date:           11/18/2015
            Description:    Gift Processing requested to add a function to distinguish the source of gifts whether is from individual or from corporate.
            Solution:       Added a checkbox for the above matter, if it's a croporate Gift, cbCorporateGift will be checked and display companyName field to capture the name of company
            Notification:   Notified user on 11/18/2015 and informed them that we will run more testing and requested them to run testing as well.

            Section 1:      Corporate Gift Section
		                    If a checkbox of "This is a Corporate Gift is checked, the following information will be displayed.
		    */
            $('#PC2389_ctl00_AdvancedDonateForm_cbCorporateGift').on('change', function (e) {
		        if (this.checked) {
		            $('#lblAbout').text("About You & Your Corporation");
		            $('#divCardHolder').show();
		            $('#divCorporate').show();
		            $('#divCorporateName').show();
		        } else {
		            $('#lblAbout').text("About You");
		            $('#divCardHolder').hide();
		            $('#divCorporate').hide();
		            $('#divCorporateName').hide();
		            $('#companyName').val("");
		        }

		    });
		    // Code added by Suki Chui for footprint ticket 29064 - End  (Section 1)

		    //Tribute section
			//developer note: not sure if .trigger is necessary - test later
			$('#chkTribute').on('change', function(e) {
				subsection = $('#tributeSubSection');
				var letterSection = $('#tributeLetterSection');
				if (this.checked) {
					subsection.show();
					$('input', subsection).removeClass('ignoreClass');
					letterSection.show();
				} else {
					$('input', subsection).addClass('ignoreClass');
					subsection.hide();
					$('#chkTributeLetter').prop('checked', false);
					$('#chkTributeLetter').trigger('change');
					letterSection.hide();
				}
			});

			//Tribute letter section
			$('#chkTributeLetter').on('change', function(e) {
				subsection = $('#tributeLetterSubSection');
				if (this.checked) {
					$('#tributeLetterSubSection').show();
					$('input', subsection).removeClass('ignoreClass');
				} else {
					$('input', subsection).addClass('ignoreClass');
					$('#tributeLetterSubSection').hide();
				}
			});
			$('#chkTribute').trigger('change');


			//unsure about what this does
			part.find('.chkMain').trigger('change');


			//fund search for enter key
			$(document).keypress(function (e) {
				var key = e.which;
				if (key == 13) // the enter key code
				{
					fundSearchControl.fundSearch();
				}
			});


			//middle step button for new checkout process
			$('#btnYourInformation').on('click', function(e) {
            e.preventDefault();
				$('#donationInformation input').addClass('ignoreClass');
				$('#personalInfoSection input').addClass('ignoreClass');
            $('.chkMain').trigger('change');
				if ($('form').valid()) {
               hideGiftInfoSection();
               showPersonalInfoSection();
               window.scrollTo(0,0);
               updateProgress(2);
				}
            else {
               e.preventDefault();
            }
         });

			// button to go back to step 2
			$('#btnBackToStep2').on('click', function(e) {
            e.preventDefault();
				$('#donationInformation input').removeClass('ignoreClass');
				$('#personalInfoSection input').removeClass('ignoreClass');
            $('.chkMain').trigger('change');
            hidePersonalInfoSection();
            showGiftInfoSection();
            updateProgress(1);
         });

			// button to go back to step 1
			$('#btnBackToStep1').on('click', function(e) {
            e.preventDefault();
            location.href = "/";
            updateProgress(0);
         });

			//2nd step button
			$('#btnBillingInformation').on('click', onSubmitClick);

			//payroll link
			$('#payrollLink').on('click', function(e) {
				e.preventDefault();
				$('#donationInformation input').addClass('ignoreClass');
				$('#personalInfoSection input').addClass('ignoreClass');
				$('.chkMain').trigger('change');
				if ($('form').valid()) {
					location.href = config.PayrollDeductionURL + '?Amount=' + getDonationAmount() + '&Fund=' + getFundName();
				}
			});

            $("#state").change(function (e) {
			    aafStateMessage();
			});

		}

		// validation
		//-----------------------------------------------------------------------------------------------------------------
      function setupValidation() {
			$.validator.addMethod("donationamountminimum", function() {
				var floatDonationAmount = document.getElementById('txtDonationAmount').value;
				floatDonationAmount = floatDonationAmount.replace(",", "");
				var isValid = ($('#txtDonationAmount').val() !== '' && floatDonationAmount >= 1.00 && floatDonationAmount < 100000.00);
				if (isValid) {
					$('#txtDonationAmount').removeClass('error');
				}
				return isValid;
			}, 'The donation amount must be between $1 and $99,999');

			$.validator.addMethod("nameCheck", function() {
				var isValid = ($('#firstName').val() !== '' && $('#lastName').val() !== '');
				if (isValid) {
					$('#firstName').removeClass('error');
					$('#lastName').removeClass('error');
				}
				return isValid;
			}, 'Please enter a first and last name.');

			$.validator.addMethod("tributeNameCheck", function() {
				var isValid = ($('#tributeFirstName').val() !== '' && $('#tributeLastName').val() !== '');
				if (isValid) {
					$('#tributeFirstName').removeClass('error');
					$('#tributeLastName').removeClass('error');
				}
				return isValid;
			}, 'Please enter a first and last name.');

			$.validator.addMethod("tributeLetterNameCheck", function() {
				var isValid = ($('#tributeLetterFirstName').val() !== '' && $('#tributeLetterLastName').val() !== '');
				if (isValid) {
					$('#tributeLetterFirstName').removeClass('error');
					$('#tributeLetterLastName').removeClass('error');
				}
				return isValid;
			}, 'Please enter a first and last name.');

		    // Code added by Suki Chui for footprint ticket 29064 - Begin (Section 2)
		    /*
            Date:           11/18/2015
            Description:    Gift Processing requested to add a function to distinguish the source of gifts whether is from individual or from corporate.
            Solution:       Added a checkbox for the above matter, if it's a croporate Gift, cbCorporateGift will be checked and display companyName field to capture the name of company
            Notification:   Notified user on 11/18/2015 and informed them that we will run more testing and requested them to run testing as well.

            Section 2:      Validation:
		                    To validate if the Company Name field whether is empty or not.
                                Once donor checked "Donation being made on behalf of a company or organization", Company Name field cannot be empty.
                            To validate the email address
                                If there is a white space in the end of the email address, it trims it
                            To Validate the Special Instruction
                                We discovered that if the Special Instruction contains more than 255 characters, it won't continue the process.
                                Thus, we added this validate function to check it the length of characters exceeded 255.
		    */
		    $.validator.addMethod("companyNameCheck", function () {

			    var checkIsGiftCorporate = $('#PC2389_ctl00_AdvancedDonateForm_cbCorporateGift').prop('checked');
			    var isValid = true;

			    if (checkIsGiftCorporate == true) {
			        isValid = ($('#companyName').val().trim() !== '');
			        if (isValid) {
			            $('#companyName').removeClass('error');
			        }
			    }
			    //alert("isValid: " + isValid);
			    return isValid;
			}, 'Please enter a company Name.');

		    $.validator.addMethod("emailCheck", function () {
		        var emailAddressTrimmed = $('#emailAddress').val().trim();
		        $('#emailAddress').val(emailAddressTrimmed);
		        var isValid = ($('#emailAddress').val() !== '');
		        if (isValid) {
		            $('#emailAddress').removeClass('error');
		        }
		        return isValid;
		    }, 'Please enter a valid email address.');

		    $.validator.addMethod("txtCommentsCheck", function () {
		        var txtCommentsLength = $('#txtComments').val().trim().length;

		        isValid = (txtCommentsLength >= 0 && txtCommentsLength < 256);

		        if (isValid) {
		            $('#txtComments').removeClass('error');
		        }
		        return isValid;
		    }, 'Please enter a special instruction no more than 255 characters.');

		    // Code added by Suki Chui for footprint ticket 29064 - End (Section 2)

			$('#validationErrors').hide();
			$('form').validate({
				onfocusout: function() {
					return true;
				},
				ignore: '.ignoreClass',
				rules: {
					txtDonationAmount: {
						required: true,
						number: true,
						donationamountminimum: true
					},
					fundID: {
						required: true
					},
					firstName: {
						nameCheck: true
					},
					lastName: {
						nameCheck: true
					},
					emailAddress: {
					    required: true,
                        emailCheck: true,
					    email: true
					},
					streetAddress: {
						required: true
					},
					country: {
						required: true
					},
					city: {
						required: true
					},
					state: {
						required: true
					},
					postalCode: {
						required: true
					},
					tributeFirstName: {
						tributeNameCheck: true
					},
					tributeLastName: {
						tributeNameCheck: true
					},
					tributeLetterFirstName: {
						tributeLetterNameCheck: true
					},
					tributeLetterLastName: {
						tributeLetterNameCheck: true
					},
					tributeStreetAddress: { required: true },
					tributeCity: { required: true },
					tributeZip: { required: true },
					companyName: { companyNameCheck: true },
					txtComments:{txtCommentsCheck: true}
				},
				messages: {
					"txtDonationAmount": {
						required: "Please enter an amount between $1 and $99,999."
					},
					fundID: {
						required: "A fund is required. Please choose a fund to give to.<br />"
					}
				},
				errorPlacement: function(error, element) {
					if (error.prop("htmlFor") == "fundID") {
						$('#fundSelectError').html(error);
					} else {
						$(element).closest('.field').find('.errorClass').html(error);
					}
				},
				showErrors: function() {
					this.defaultShowErrors();
				},
				success: function() {
				}

			});
		}


		function getRemoteContent(list1or2) {
		    var strRecipientList = "";
		    var xmlHttp = null;
		    var theUrl = '/make-a-gift-email-config'
		    xmlHttp = new XMLHttpRequest();
		    xmlHttp.open("GET", theUrl, false);
		    xmlHttp.send(null);
		    //if (xmlHttp.readyState == 4 && xmlHttp.status == 200) {
		        if (xmlHttp.responseText == "Not found") {
		            strRecipientList = "";
		            consoleLog("Make-A-Gift-email-config page not found");
		        }
		        else {
		            // parse returned HTML to find either of two strings containing ';' send email address lists
		            var responseBig = xmlHttp.responseText;
		            var stringBig = responseBig.toString();
		            var indLeft = 0
		            if (list1or2 == "1") {
		                indLeft = stringBig.indexOf("divSmtpRecipients1") + 20;
		            } else {
		                indLeft = stringBig.indexOf("divSmtpRecipients2") + 20;
		            }
		            var indRight = stringBig.indexOf("</div>", indLeft);
		            var strRecipientList = "";
		            if (indLeft > 0) {
		                strRecipientList = stringBig.substring(indLeft, indRight);
		            } else {
		                strRecipientList = "";
		            }
		        }
		        return strRecipientList;
		    //}
		}


		// save methods
		//-----------------------------------------------------------------------------------------------------------------
		function onSubmitClick(e) {
			var data;
			e.preventDefault();
			$('#donationInformation input').addClass('ignoreClass');
			$('.chkMain').trigger('change');
			if ($('form').valid()) {
            updateProgress(3);
			   data = extractDataFromForm();
			   sendEmail(data);
				submitDonationToServer(data);
			} else {
				e.preventDefault();
			}
		}


		function sendEmail(dataObj) {

		    var currentdate = new Date();
		    var datetime = "" + (currentdate.getMonth()+1) + "/"
                            + currentdate.getDate() + "/"
                            + currentdate.getFullYear() + " @ "
                            + currentdate.getHours() + ":"
                            + currentdate.getMinutes();

		    var recipientList = ""
		    if (dataObj) {
		        if (dataObj.confirmFundName) {
		            // send the second internal confirmation e-mail
		            var recipientList = getRemoteContent("2");
		            $.ajax({
		                url: "/Custom/Handlers/SendAdfEmail.ashx",
		                type: 'post',
		                datatype: 'json',
		                data: {
		                    RecipientList: recipientList,
		                    ConfirmFirstName: dataObj.confirmFirstName,
		                    ConfirmFundName: dataObj.confirmFundName,
		                    GiftDate: datetime
		                },
		                success: function (results) {
		                    consoleLog(results);
		                },
		                error: function (xhr, status, error) {
		                    var err = eval("(" + xhr.responseText + ")");
		                    alert('Error: ' + err.Message);
		                }
		            });
		        } else {
		            // send the first internal confirmation e-mail
		            var recipientList = getRemoteContent("1");
		            var fundInfoText = getFundName();
		            $.ajax({
		                url: "/Custom/Handlers/SendAdfEmail.ashx",
		                type: 'post',
		                datatype: 'json',
		                data: {
		                    RecipientList: recipientList,
		                    DonorFirstName: dataObj.Donor.FirstName,
		                    DonorLastName: dataObj.Donor.LastName,
		                    GiftDate: datetime,
		                    GiftAmount: dataObj.Gift.Designations[0].Amount,
		                    DonorEmail: dataObj.Donor.EmailAddress,
		                    FundInfo: fundInfoText
		                },
		                success: function (results) {
		                    consoleLog(results);
		                },
		                error: function (xhr, status, error) {
		                    var err = eval("(" + xhr.responseText + ")");
		                    consoleLog(err);
		                }
		            });
		        }
		    }
		}

	    // Internet Explorer (IE) does not support console.log()
		function consoleLog(inMessage) {
		    if (!isIE) { console.log(inMessage); }
		}

		function extractDataFromForm() {
			//set vars
			var paymentMethod = 0;  //we are setting payment method to always go to the BBPS, we pass the gift type in a revenue attribute
			var giftType = $( '#PC2389_ctl00_AdvancedDonateForm_rbGiftTypeList' ).find( ":checked" ).val();
		    var idSelected = $( '#PC2389_ctl00_AdvancedDonateForm_rbGiftTypeList' ).find( ":checked" ).attr( "id" );
		    var isRecurring = idSelected.substr( -1 ) == "1";
		    var specialInstructions = $('#txtComments').val();
		    // Code added by Suki Chui for footprint ticket 29064 - Begin (Section 3)
		    /*
            Date:           11/18/2015
            Description:    Gift Processing requested to add a function to distinguish the source of gifts whether is from individual or from corporate.
            Solution:       Added a checkbox for the above matter, if it's a croporate Gift, cbCorporateGift will be checked and display companyName field to capture the name of company
            Notification:   Notified user on 11/18/2015 and informed them that we will run more testing and requested them to run testing as well.

            Section 4:      Include Company Name in xml file
                            added Company Name into the form
            */
			var isCorporate = $('#PC2389_ctl00_AdvancedDonateForm_cbCorporateGift').prop('checked'); //get a boolean value to see if it is a corporate gift
		    // Code added by Suki Chui for footprint ticket 29064 - End (Section 3)

            //set result
			var result = {};
			result.Donor = {
				FirstName: part.find("#firstName").val(),
				LastName: part.find("#lastName").val(),

			    // Code added by Suki Chui for footprint ticket 29064 - Begin (Section 4)
			    /*
                Date:           11/18/2015
                Description:    Gift Processing requested to add a function to distinguish the source of gifts whether is from individual or from corporate.
                Solution:       Added a checkbox for the above matter, if it's a croporate Gift, cbCorporateGift will be checked and display companyName field to capture the name of company
                Notification:   Notified user on 11/18/2015 and informed them that we will run more testing and requested them to run testing as well.

                Section 4:      Include Company Name in xml file
                                added Company Name into the form
                */
				OrganizationName: part.find('#companyName').val(),
			    // Code added by Suki Chui for footprint ticket 29064 - End (Section 4)
				EmailAddress: part.find("#emailAddress").val(),
				Address: {
					Country: part.find("#country").val(),
					State: part.find("#state").val(),
					City: part.find("#city").val(),
					StreetAddress: part.find("#streetAddress").val(),
					PostalCode: part.find("#postalCode").val()
				}
			};

			// Load the two standard attributes
			var attributesArray = [
					{
						AttributeId: config.Attributes.GiftType,
						Value: giftType
					},
					{
						AttributeId: config.Attributes.RecurringGift,
						Value: isRecurring
					}
				];


			// If there are Special Instructions, they're loaded as "Comments", but must also be loaded into the array of attributes
			if (specialInstructions) {
				attributesArray.push({
						AttributeId: config.Attributes.SpecialInstructions,
						Value: specialInstructions
					});
			};

			result.Gift = {
			    // Code added by Suki Chui for footprint ticket 29064 - Begin (Section 5)
			    /*
                Date:           11/18/2015
                Description:    Gift Processing requested to add a function to distinguish the source of gifts whether is from individual or from corporate.
                Solution:       Added a checkbox for the above matter, if it's a croporate Gift, cbCorporateGift will be checked and display companyName field to capture the name of company
                Notification:   Notified user on 11/18/2015 and informed them that we will run more testing and requested them to run testing as well.

                Section 5:      Pass the value of isCorporate to IsCorporate. The value is either true or false. If the value is true, then the gift will be marked it as a corporate gift.
                                The Corporate will become a primary constituent in CRM when transaction is downloaded into a batch.
                */
			    IsCorporate: isCorporate,
			    // Code added by Suki Chui for footprint ticket 29064 - End (Section 5)
			    PaymentMethod: paymentMethod,
			    Comments: specialInstructions,
			    Designations: [
					{
					    Amount: getDonationAmount(),
					    DesignationId: fundItem["Designation ID"]
					}
			    ],
			    Attributes: attributesArray
			};


			if ($('input:checked[id=chkTribute]').length > 0) {
			    var tributeType = $('#PC2389_ctl00_AdvancedDonateForm_tributeType').find(":checked").val()
			    var tributeFirstName = $('#tributeFirstName').val()
			    var tributeLastName = $('#tributeLastName').val()
				result.Gift.Tribute = {
					TributeDefinition:
					{
					    Description: "**DELETE** " + tributeType + " " + tributeFirstName + " " + tributeLastName,
					    FirstName: tributeFirstName,
					    LastName: tributeLastName,
						Type: tributeType
					},
					TributeId: null
				};
			}

			if ($('input:checked[id=chkTributeLetter]').length > 0) {
				result.Gift.Tribute.Acknowledgee = {
					AddressLines: $('#tributeStreetAddress').val(),
					City: $('#tributeCity').val(),
					Country: $('#tributeCountry').val(),
					Email: '',
					FirstName: $('#tributeLetterFirstName').val(),
					LastName: $('#tributeLetterLastName').val(),
					Phone: '',
					PostalCode: $('#tributeZip').val(),
					State: $('#tributeState').val() !== null ? $('#tributeState').val() : ''
				};
			}
			result.Origin = {
				PageId: BLACKBAUD.api.pageInformation.pageId
			};

			result.BBSPTemplateSitePageId = BLACKBAUD.api.pageInformation.pageId;

			if (paymentMethod == 0) {
				result.BBSPReturnUri = window.location.href;
			}

			result.MerchantAccountId = fundItem['Fund Type'].toLowerCase() == "foundation" ? config.MerchantAccounts.Foundation : config.MerchantAccounts.Regents;

			return result;
		}

		function submitDonationToServer(data) {
			onSuccess = function (d) {
				// For Pledge, go ahead and show the confirmation.  For credit card, you will be redirected to BBSP already.
				if (d.Donation.TransactionStatus === 1) {
					$(".donationForm").hide();
					$(".confirmation").show();
					getConfirmationHtml(d.Donation.Id);
				}
			};

			onFail = function (d) {
				setValidationMessage(convertErrorsToHtml(d));
				unblockForm();
			};

			blockForm();
			donationService.createDonation(data, onSuccess, onFail);
		}

		function completeBBSPPayment( id )
		{
		    onSuccess = function ( d )
		    {
		        getConfirmationHtml( d.Id );
		    };

		    onFail = function ( d )
		    {

		        try
		        {
		            switch ( d[0].ErrorCode )
		            {
		                case 201:
		                    getConfirmationHtml( d.Id );
		                    break;
		                case 203:
		                    consoleLog( "Donation not completed on BBSP." );
		                    // IE must go back two pages; all other browsers just go back one page
		                    if ( isIE )
		                    {
		                        window.history.go( -2 );
		                    } else
		                    {
		                        window.history.back();
		                    }
		                    break;
		                default:
		                    consoleLog( "Error code: " + d[0].ErrorCode );
		                    setValidationMessage( convertErrorsToHtml( d ) );
		                    unblockForm();
		                    break;
		            }

		        } catch ( e )
		        {
		            location.href = returnURL();
		        }
		    };
		    blockForm();
		    donationService.completeBBSPDonation( id, onSuccess, onFail );
		}

		function getConfirmationHtml(id) {
			var onSuccess = function (d) {
				$(".confirmation").html(d);
				unblockForm();
				var donationAmt = $("#donationAmount");
				var src = "https://secure.adnxs.com/px?id=523044&seg=2748539&order_id=" + id + "&value=" + donationAmt.text().replace("$", "") + "&t=2";
				$("#campaignTracking").attr('src', src);
				donationAmt.hide();
				var confirmFirstName = "";
				if (d.indexOf('class="thankYouHero"') > 0) {
				    var xBegin = d.indexOf('class="thankYouHero"') + 40;
				    var strEnd = d.substring(xBegin);
				    var xEnd = strEnd.indexOf("</span>");
				    confirmFirstName = strEnd.substring(0, xEnd);
				} else {
				    confirmFirstName = "error"
				}
				var confirmFundName = "";
				if (d.indexOf("confirmationDesignationMerge") > 0) {
				    var xBegin = d.indexOf("confirmationDesignationMerge") + 36;
				    var strEnd = d.substring(xBegin);
				    var xEnd = strEnd.indexOf("</span>");
				    confirmFundName = strEnd.substring(0, xEnd);
				} else {
				    confirmFundName = "error"
				}
				var dataObj = {};
				dataObj.confirmFirstName = confirmFirstName;
				dataObj.confirmFundName = confirmFundName;
				sendEmail(dataObj);
			};

			var onFail = function (d) {
				setValidationMessage(convertErrorsToHtml(d));
				unblockForm();
			};
			donationService.getDonationConfirmationHtml(id, onSuccess, onFail);
		}


		//helper -- error handling for the save methods
		function convertErrorToString(error) {
			if (error) {
				if (error.Message) return error.Message;
				switch (error.ErrorCode) {
					case 101:
						return error.Field + " is required.";
					case 105:
						return error.Field + " is not valid.";
					case 106:
						return "Record for " + error.Field + " was not found.";
					case 203:
						return "Donation not completed on BBSP.";
					default:
						return "Error code " + error.ErrorCode + ".";
				}
			}
			return "";
		}

		//helper -- error handling for the save methods
		function convertErrorsToHtml(errors) {
			var i, message = "Unknown error.<br/>";
			if (errors) {
				message = "";
				for (i = 0; i < errors.length; i++) {
					message = message + convertErrorToString(errors[i]) + "<br/>";
				}
			}
			return message;
		}

	    //}(UCSDCommonJS, ADFConfig, googlePlaces));
	}( UCSDCommonJS, ADFConfig ) );
        </script>
        <div class="ADF">
         <div class="confirmation" style="display:none;">
          <h3>
           Please wait while your confirmation loads...
          </h3>
         </div>
         <div class="donationForm">
          <div class="container">
           <div class="progress-meter-wrapper">
            <div class="progress-meter">
             <div class="track">
              <span class="progress">
              </span>
             </div>
             <ul class="progress-points" data-current="1">
              <li class="progress-point active">
               <span>
                Select Gift
               </span>
              </li>
              <li class="progress-point">
               <span>
                Gift Details
               </span>
              </li>
              <li class="progress-point">
               <span>
                Your Info
               </span>
              </li>
              <li class="progress-point">
               <span>
                Payment
               </span>
              </li>
             </ul>
            </div>
           </div>
          </div>
          <div class="msg error" id="validationErrors" style="display:none;">
          </div>
          <!--===================================================STEP 1=====================================================//-->
          <fieldset id="donationInformation" style="display:none;">
           <div class="container">
            <div class="row">
             <div class="col-md-6 col-md-offset-3">
              <h1 class="blue">
               Continue the
               <span class="gray">
                non
               </span>
               tradition.
              </h1>
              <p class="intro">
               By supporting any area on campus with a gift of any size, you are part of the Campaign for UC San Diego. Help us make waves — here and across the globe.
              </p>
             </div>
            </div>
            <div class="row">
             <div class="col-md-6 col-md-offset-3">
              <div class="mainContent mainFirst">
               <h2>
                Select a Giving Priority
               </h2>
               <div data-toggle="buttons">
                <ul id="greatestNeeds">
                </ul>
               </div>
               <div class="or-divider">
                <hr/>
                <p class="or-text">
                 OR
                </p>
               </div>
               <script type="text/javascript">
                // [ last update: 2018-07-09 10:45 ]

	fundSearchControl = function(){
		function init() {
			//assign events
			$("input.magnifyingGlassSearch").on('click', fundSearch);
		};

		function checkFundControl(data) {
			$('input:radio[value=' + data.fundID + ']').attr('checked', 'checked');
		}

		function fundSearch() {
			var searchText = $('#txtSearchFund').val() == "" ? "none" : $('#txtSearchFund').val();
			$('#searchResultsPanel').show();
			$.getJSON("/Custom/Handlers/ADF_FundSearchHandler.ashx?searchText=" + searchText)
			.done( function(data) {
				var jsonLength = data.aaData.length;
				$("#searchResults").empty();
				$("#searchResults").next().remove(); // remove "load more" button if it exists
				$.each(data.aaData, function(i) {
					$("#searchResults").append("<li class='fundItem'><label class='btn btn-default btn-block btn-funds btn-fund-results'><input type='radio' name='fundID' value='"
					+ data.aaData[i].ID
					+ "' data-description='"
					+ data.aaData[i].PurposeDescription
					+ "'>"
					+ "<span class='noTab'>"
					+ data.aaData[i].VanityName
					+ "</span>"
					+ "</label></li>");
				});

				// Take user to next step when fund is clicked on
				$('input:radio[name=fundID]').on('change', function (e) {
					console.log("radio click");
					e.preventDefault();
					var fundDescriptionData = $('input:radio:checked[name=fundID]').data('description');
					// Check browser support for session storage
					if (typeof(Storage) !== "undefined") {
					    sessionStorage.setItem("fundDesc", fundDescriptionData);
					} else {
					    console.log("Sorry, your browser does not support Web Storage...");
					}
					location.href = '/make-a-gift?id=' + $('input:radio:checked[name=fundID]').val();
				});

				// load more results ten at a time
				$('#searchResultsPanel #searchResults').loadMoreResults({
					tag: {
						name: 'li',
						'class': 'fundItem'
					},
					displayedItems: 10,
					showItems: 10
				});

				console.log("jsonLength: " + jsonLength);
				if (!jsonLength) {
					$("#searchResultsMessage").html('No results found for &ldquo;' + searchText.trim() + '&rdquo;'
						+ '<div class="alert alert-info">Having trouble finding the fund you&rsquo;re looking for? Call (858) 534-1610 or email <a href="mailto:giving@ucsd.edu">giving@ucsd.edu</a> for help.</div>');
				}
				else {
					$("#searchResultsMessage").html(jsonLength + ' results found for &ldquo;' + searchText.trim() + '&rdquo;');
				}
			});
		}

		return{
			init:init,
			fundSearch: fundSearch
		}
	}();
	$(document).ready(function () {
		fundSearchControl.init();
	});
               </script>
               <div>
                <div class="form-group">
                 <label>
                  Explore more giving options
                 </label>
                 <div class="input-group">
                  <input class="form-control" id="txtSearchFund" placeholder="Search" type="text"/>
                  <span class="input-group-btn">
                   <input class="btn btn-default magnifyingGlassSearch" type="button"/>
                  </span>
                 </div>
                 <div id="PC2389_ctl00_AdvancedDonateForm_FundSearch1_FundSearchHelpText">
                  <span class="help-block">
                   Use a comma to separate keywords
                  </span>
                 </div>
                </div>
                <div id="searchResultsPanel">
                 <div id="searchResultsMessage">
                 </div>
                 <ul class="styled" id="searchResults">
                 </ul>
                </div>
               </div>
               <script type="text/javascript">
                /**
	*	Load More Results v1.0.0
	* Author: Cenk Ã‡algan
	*
	* Options:
	* - tag (object):
	*		- name (string)
	*		- class (string)
	* - displayedItems (int)
	*	- showItems (int)
	* - button (object):
	*		- class (string)
	*		- text (string)
*/
jQuery.fn.loadMoreResults = function (options) {
	var defaults = {
		tag: {
			name: 'div',
			'class': 'item'
		},
		displayedItems: 10,
		showItems: 10,
		button: {
			'class': 'btn btn-default',
			text: 'Load More'
		}
	};

	var opts = $.extend(true, {}, defaults, options);

	var alphaNumRE = /^[A-Za-z][-_A-Za-z0-9]+$/;
	var numRE = /^[0-9]+$/;

	$.each(opts, function validateOptions(key, val) {
		if (key === 'tag') {
			formatCheck(key, val, 'name', 'string');
			formatCheck(key, val, 'class', 'string');
		}
		if (key === 'displayedItems') {
			formatCheck(key, val, null, 'number');
		}
		if (key === 'showItems') {
			formatCheck(key, val, null, 'number');
		}
		if (key === 'button') {
			formatCheck(key, val, 'class', 'string');
		}
	});

	function formatCheck(key, val, prop, typ) {
		if (prop !== null && typeof prop !== 'object') {
			if (typeof val[prop] !== typ || String(val[prop]).match(typ == 'string' ? alphaNumRE : numRE) === null) {
				opts[key][prop] = defaults[key][prop];
			}
		} else {
			if (typeof val !== typ || String(val).match(typ == 'string' ? alphaNumRE : numRE) === null) {
				opts[key] = defaults[key];
			}
		}
	};

	return this.each(function (index, element) {
		// lc = total number of items, dc = number of currently displayed items, sc = number of items to load at a time
		var $list = $(element),
				lc = $list.find(' > ' + opts.tag.name + '.' + opts.tag.class).length,
				dc = parseInt(opts.displayedItems),
				sc = parseInt(opts.showItems);

		function showMore(ev) {
			ev.preventDefault();
			dc = (dc + sc <= lc) ? dc + sc : lc;

			$list.find(' > ' + opts.tag.name + '.' + opts.tag.class + ':lt(' + dc + ')').fadeIn();
			if (dc == lc) {
				return true;
			}
      return false;
		}

		$list.find(' > ' + opts.tag.name + '.' + opts.tag.class + ':lt(' + dc + ')').css("display", "block");
		$list.find(' > ' + opts.tag.name + '.' + opts.tag.class + ':gt(' + (dc - 1) + ')').css("display", "none");

		// Don't show load more button if there no results
		if (lc > dc) {
    		$list.parent().append('<div class="text-center"><button class="btn-view ' + opts.button.class + '">' + opts.button.text + '</button></div>');
    		$list.parent().off().on("click", ".btn-view", function(event) {
    			var endOfResults = showMore(event);
          if (endOfResults) {
            $(this).hide();
    			}
    		});
      }
  	});

};
               </script>
               <br/>
               <div class="errorClass" id="fundSelectError">
               </div>
              </div>
             </div>
             <!-- col -->
            </div>
            <!-- row -->
           </div>
           <!-- container -->
          </fieldset>
          <!--===================================================STEP 2=====================================================//-->
          <fieldset id="billingInformation" style="display:none;">
           <div class="mainContent mainFirst giftInfoSection">
            <div class="container">
             <div class="row">
              <div class="col-md-6 col-md-offset-3">
               <div class="back-link">
                <a id="btnBackToStep1">
                 &lt; Previous Step
                </a>
               </div>
               <h2>
                Your Gift Will Support
               </h2>
               <div class="panel panel-default fund-confirm">
                <div class="panel-heading">
                 <h3 class="panel-title">
                  <div id="fundNameText">
                  </div>
                 </h3>
                </div>
                <div class="panel-body">
                 <div class="row">
                  <div class="col-md-12">
                   <p class="fund-description">
                    <span id="fundDescriptionText">
                    </span>
                   </p>
                  </div>
                 </div>
                 <!-- row -->
                 <!-- <div class="row">
                        <div class="col-md-6">
                           <p class="fund-detail">
                              Department: <span id="">xxxx xxxxxxxxxx xxxxxxx</span>
                           </p>
                        </div>
                        <div class="col-md-6">
                           <p class="fund-detail">
                              Lead Researcher: <span id="">xxxxxx xxxxxxxxxx</span>
                           </p>
                        </div>
                     </div> -->
                 <div class="row">
                  <div class="col-md-6">
                   <p class="fund-detail">
                    Fund Number:
                    <span id="fundNumberText">
                    </span>
                   </p>
                  </div>
                 </div>
                 <!-- row -->
                </div>
               </div>
              </div>
              <!-- col -->
             </div>
             <!-- row -->
             <div class="row">
              <div class="col-md-3 col-md-offset-3">
               <div class="field">
                <div class="form-group">
                 <label>
                  Amount
                 </label>
                 <div class="input input-dollar-symbol">
                  <input class="donationAmountInput form-control" id="txtDonationAmount" name="txtDonationAmount" type="text"/>
                  <div class="errorClass">
                  </div>
                 </div>
                </div>
               </div>
              </div>
              <!-- col -->
              <div class="spacer">
              </div>
              <div class="col-md-3">
               <div class="field">
                <div class="form-group">
                 <label>
                  Gift Type
                 </label>
                 <div class="input">
                  <table id="PC2389_ctl00_AdvancedDonateForm_rbGiftTypeList">
                   <tr>
                    <td>
                     <input checked="checked" id="PC2389_ctl00_AdvancedDonateForm_rbGiftTypeList_0" name="PC2389$ctl00$AdvancedDonateForm$rbGiftTypeList" type="radio" value="2c89009e-4f48-48b8-9643-513ae330df17"/>
                     <label for="PC2389_ctl00_AdvancedDonateForm_rbGiftTypeList_0">
                      One-time Gift
                     </label>
                    </td>
                   </tr>
                   <tr>
                    <td>
                     <input id="PC2389_ctl00_AdvancedDonateForm_rbGiftTypeList_1" name="PC2389$ctl00$AdvancedDonateForm$rbGiftTypeList" type="radio" value="ddff24b5-fa15-430c-8910-11cecd325c8b"/>
                     <label for="PC2389_ctl00_AdvancedDonateForm_rbGiftTypeList_1">
                      Recurring Monthly Gift
                     </label>
                    </td>
                   </tr>
                   <tr>
                    <td>
                     <input id="PC2389_ctl00_AdvancedDonateForm_rbGiftTypeList_2" name="PC2389$ctl00$AdvancedDonateForm$rbGiftTypeList" type="radio" value="988c5423-50a5-4b51-b78a-4f048f907a4d"/>
                     <label for="PC2389_ctl00_AdvancedDonateForm_rbGiftTypeList_2">
                      Pledge Payment
                     </label>
                    </td>
                   </tr>
                  </table>
                 </div>
                </div>
               </div>
              </div>
              <!-- col -->
             </div>
             <!-- row -->
             <div class="row">
              <div class="col-md-6 col-md-offset-3">
               <div class="help alert alert-info" id="recurringThanks">
                Thank you for becoming a sustaining donor! Your gift will be charged to the credit/debit card provided in the amount indicated above on a monthly basis. You may change or cancel your sustaining gift at any time by contacting Gift Processing at
                <a href="mailto:onlinegift@ucsd.edu">
                 onlinegift@ucsd.edu
                </a>
                .
               </div>
              </div>
             </div>
             <div class="row">
              <div class="col-md-6 col-md-offset-3">
               <div class="field">
                <div class="form-group">
                 <label>
                  Payment Method
                 </label>
                 <div class="input">
                  <table id="PC2389_ctl00_AdvancedDonateForm_rbPaymentTypeList">
                   <tr>
                    <td>
                     <input checked="checked" id="PC2389_ctl00_AdvancedDonateForm_rbPaymentTypeList_0" name="PC2389$ctl00$AdvancedDonateForm$rbPaymentTypeList" type="radio" value="0"/>
                     <label for="PC2389_ctl00_AdvancedDonateForm_rbPaymentTypeList_0">
                      Credit/Debit
                     </label>
                    </td>
                   </tr>
                   <tr>
                    <td>
                     <input id="PC2389_ctl00_AdvancedDonateForm_rbPaymentTypeList_1" name="PC2389$ctl00$AdvancedDonateForm$rbPaymentTypeList" type="radio" value="Payroll"/>
                     <label for="PC2389_ctl00_AdvancedDonateForm_rbPaymentTypeList_1">
                      Payroll Deduction
                     </label>
                    </td>
                   </tr>
                  </table>
                 </div>
                </div>
               </div>
               <div class="help alert alert-info" id="PC2389_ctl00_AdvancedDonateForm_payrollBeAware">
                <strong>
                 NOTE:
                </strong>
                At this time, payroll deduction can only be used for ongoing, recurring gifts. To make a one-time gift, please select the "Credit/Debit" payment method. For more information or assistance making your gift, call (858) 534-1610.
               </div>
               <!-- <div class="checkbox" id="divRecurring">
						<label class="label-check">
							<input name="PC2389$ctl00$AdvancedDonateForm$cbRecurringGift" type="checkbox" id="PC2389_ctl00_AdvancedDonateForm_cbRecurringGift" class="chkMain" />I&rsquo;d like to make this gift every month!
						</label>
					</div> -->
              </div>
              <!-- col -->
              <div class="mainContent" id="tributeSection">
               <!-- <div class="field">
               <h2>Anything else?</h2>
            </div> -->
               <div class="col-md-6 col-md-offset-3">
                <div class="field">
                 <div class="checkbox">
                  <label class="label-check">
                   <input class="chkMain" id="chkTribute" type="checkbox"/>
                   My gift is in honor/memory
                   <a class="info-icon info" id="aDedicateGiftHelp">
                    <i class="mdi mdi-information">
                    </i>
                   </a>
                  </label>
                 </div>
                 <div class="input">
                  <div class="help alert alert-info" id="PC2389_ctl00_AdvancedDonateForm_DedicateGiftHelpText">
                   Click this checkbox to dedicate your gift to another person. You’ll also get the option to send a letter on your behalf.
                  </div>
                 </div>
                </div>
                <div class="formSubSection" id="tributeSubSection">
                 <div class="field">
                  <label>
                   Tribute Type
                  </label>
                  <table id="PC2389_ctl00_AdvancedDonateForm_tributeType">
                   <tr>
                    <td>
                     <input checked="checked" id="PC2389_ctl00_AdvancedDonateForm_tributeType_0" name="PC2389$ctl00$AdvancedDonateForm$tributeType" type="radio" value="in honor of"/>
                     <label for="PC2389_ctl00_AdvancedDonateForm_tributeType_0">
                      In honor of
                     </label>
                    </td>
                   </tr>
                   <tr>
                    <td>
                     <input id="PC2389_ctl00_AdvancedDonateForm_tributeType_1" name="PC2389$ctl00$AdvancedDonateForm$tributeType" type="radio" value="in memory of"/>
                     <label for="PC2389_ctl00_AdvancedDonateForm_tributeType_1">
                      In memory of
                     </label>
                    </td>
                   </tr>
                  </table>
                 </div>
                 <div class="field">
                  <div class="form-group">
                   <label>
                    First Name
                   </label>
                   <div class="input">
                    <input class="nameClass form-control" id="tributeFirstName" name="tributeFirstName" type="text"/>
                   </div>
                  </div>
                  <div class="form-group">
                   <label>
                    Last Name
                   </label>
                   <div class="input">
                    <input class="nameClass form-control" id="tributeLastName" name="tributeLastName" type="text"/>
                    <div class="errorClass">
                    </div>
                   </div>
                  </div>
                 </div>
                 <div class="field">
                  <div class="checkbox">
                   <label class="label-check">
                    <input class="chkMain" id="chkTributeLetter" type="checkbox"/>
                    Send an acknowledgement to
                   </label>
                  </div>
                 </div>
                </div>
                <div class="formSubsection" id="tributeLetterSubSection">
                 <div class="field">
                  <div class="form-group">
                   <label>
                    First Name
                   </label>
                   <div class="input">
                    <input class="nameClass form-control" id="tributeLetterFirstName" name="tributeLetterFirstName" type="text"/>
                   </div>
                  </div>
                  <div class="form-group">
                   <label>
                    Last Name
                   </label>
                   <div class="input">
                    <input class="nameClass form-control" id="tributeLetterLastName" name="tributeLetterLastName" type="text"/>
                    <div class="errorClass">
                    </div>
                   </div>
                  </div>
                 </div>
                 <div class="field">
                  <div class="form-group">
                   <label>
                    Country
                   </label>
                   <div class="input">
                    <select class="form-control" id="tributeCountry" name="tributeCountry">
                    </select>
                    <div class="errorClass">
                    </div>
                   </div>
                  </div>
                 </div>
                 <div class="field">
                  <div class="form-group">
                   <div id="lblTributeStreetAddress">
                    <label>
                     Street Address
                    </label>
                   </div>
                   <div class="input">
                    <input class="form-control" id="tributeStreetAddress" name="tributeStreetAddress" type="text"/>
                    <div class="errorClass">
                    </div>
                   </div>
                  </div>
                 </div>
                 <div class="field">
                  <div class="form-group">
                   <div id="lblTributeCity">
                    <label>
                     City
                    </label>
                   </div>
                   <div class="input">
                    <input class="form-control" id="tributeCity" name="tributeCity" type="text"/>
                    <div class="errorClass">
                    </div>
                   </div>
                  </div>
                 </div>
                 <div class="field">
                  <div class="form-group">
                   <div id="lblTributeState">
                    <label>
                     State
                    </label>
                   </div>
                   <div class="input">
                    <select class="form-control" id="tributeState" name="tributeState">
                    </select>
                   </div>
                   <div class="errorClass">
                   </div>
                  </div>
                 </div>
                 <div class="field">
                  <div class="form-group">
                   <div id="lblTributeZip">
                    <label>
                     Zip
                    </label>
                   </div>
                   <div class="input">
                    <input class="form-control" id="tributeZip" name="tributeZip" type="text"/>
                    <div class="errorClass">
                    </div>
                   </div>
                  </div>
                 </div>
                </div>
               </div>
               <!-- col-3 -->
               <div class="col-md-6 col-md-offset-3">
                <div class="field">
                 <div class="form-group">
                  <label>
                   Special Instructions
                  </label>
                  <span class="help" style="font-weight:normal; display:inline;">
                   (optional)
                  </span>
                  <div class="input">
                   <input class="form-control" id="txtComments" name="txtComments" type="text"/>
                   <div class="errorClass">
                   </div>
                  </div>
                 </div>
                </div>
               </div>
               <!-- col-6 -->
              </div>
             </div>
             <!-- row -->
            </div>
            <!-- container 1 -->
           </div>
           <div class="container">
            <div class="row">
             <div class="col-md-6 col-md-offset-3">
              <div class="mainContent" id="personalInfoSection">
               <div class="back-link">
                <a class="back-link" id="btnBackToStep2">
                 &lt; Previous Step
                </a>
               </div>
               <div class="field">
                <h2 id="lblAbout">
                 About you
                </h2>
               </div>
               <div class="checkbox" id="divCorporateGift">
                <label class="label-check">
                 <input class="chkMain" id="PC2389_ctl00_AdvancedDonateForm_cbCorporateGift" name="PC2389$ctl00$AdvancedDonateForm$cbCorporateGift" type="checkbox"/>
                 Donation being made on behalf of a company or organization
                </label>
               </div>
               <div class="field" id="divCorporate">
                <div class="form-group">
                 <label>
                  Name of the Company to be receipted
                 </label>
                </div>
               </div>
               <div class="field" id="divCorporateName">
                <div class="form-group">
                 <div id="lblCompanyName">
                  <label>
                   Company Name
                  </label>
                 </div>
                 <div class="input">
                  <input class="form-control" id="companyName" name="companyName" type="text"/>
                  <div class="errorClass">
                  </div>
                 </div>
                </div>
               </div>
               <div class="field" id="divCardHolder">
                <div class="form-group">
                 <label>
                  Cardholder's Information
                 </label>
                </div>
               </div>
               <div class="field">
                <div class="form-group">
                 <label>
                  First Name
                 </label>
                 <div class="input">
                  <input class="nameClass form-control" id="firstName" maxlength="30" name="firstName" type="text"/>
                 </div>
                </div>
                <div class="form-group">
                 <label>
                  Last Name
                 </label>
                 <div class="input">
                  <input class="nameClass form-control" id="lastName" maxlength="60" name="lastName" type="text"/>
                  <div class="errorClass">
                  </div>
                 </div>
                </div>
               </div>
               <div class="field">
                <div class="form-group">
                 <label>
                  Email
                 </label>
                 <div class="input">
                  <input class="fieldMedium form-control" id="emailAddress" maxlength="120" name="emailAddress" type="text"/>
                  <div class="errorClass">
                  </div>
                 </div>
                </div>
               </div>
               <div class="field">
                <div class="form-group">
                 <label>
                  Country
                 </label>
                 <div class="input">
                  <select class="form-control" id="country" name="country">
                  </select>
                  <br/>
                  <div class="errorClass">
                  </div>
                 </div>
                </div>
               </div>
               <div class="field">
                <div class="form-group">
                 <div id="lblStreetAddress">
                  <label>
                   Street Address
                  </label>
                 </div>
                 <div class="input">
                  <input class="form-control" id="streetAddress" name="streetAddress" type="text"/>
                  <div class="errorClass">
                  </div>
                 </div>
                </div>
               </div>
               <div class="field">
                <div class="form-group">
                 <div id="lblCity">
                  <label>
                   City
                  </label>
                 </div>
                 <div class="input">
                  <input class="form-control" id="city" maxlength="50" name="city" type="text"/>
                  <div class="errorClass">
                  </div>
                 </div>
                </div>
               </div>
               <div class="field">
                <div class="form-group">
                 <div id="lblState">
                  <label>
                   State/Province
                  </label>
                 </div>
                 <div class="input">
                  <select class="form-control" id="state" name="state">
                  </select>
                  <div class="errorClass">
                  </div>
                 </div>
                </div>
               </div>
               <div class="field" id="postalCodeSection">
                <div class="form-group">
                 <div id="lblZip">
                  <label>
                   ZIP/Postal code
                  </label>
                 </div>
                 <div class="input">
                  <input class="form-control" id="postalCode" maxlength="10" name="postalCode" type="text"/>
                  <div class="errorClass">
                  </div>
                 </div>
                </div>
               </div>
              </div>
              <div id="btnSection">
               <a class="btn btn-block btn3" id="btnYourInformation">
                Next: Your Info
               </a>
               <a class="btn btn-block btn3" id="btnBillingInformation">
                <img alt="lock icon" src="/client/styles/custom/img/lock.png"/>
                Next: Secure Payment
               </a>
               <a class="btn btn-block btn3" id="payrollLink" style="display: none;">
                Continue
               </a>
              </div>
              <div id="warnAAFSection">
              </div>
              <div class="alert alert-warning" id="warnSection">
               <strong>
                Important:
               </strong>
               You are being redirected to a secure site. Please keep your browser window open until you get to the confirmation page. Thank you.
              </div>
             </div>
            </div>
           </div>
          </fieldset>
         </div>
        </div>
       </span>
      </div>
     </div>
    </div>
    <div class="leftCol">
    </div>
    <div class="rightCol">
    </div>
    <div class="singleCol">
    </div>
    <div class="halfCol">
    </div>
    <div class="halfCol">
    </div>
    <div class="singleCol">
    </div>
    <div class="halfCol">
    </div>
    <div class="halfCol">
    </div>
    <div>
     <!--footer bar-->
     <div class="footer-bar">
      <div class="container">
       <div class="row">
        <div class="col-sm-4">
         <h5>
          Other Ways to Give
         </h5>
         <ul>
          <li>
           <a href="http://giftplanning.ucsd.edu/">
            Planned Gifts
           </a>
          </li>
          <li>
           <a href="https://crowdsurf.ucsd.edu/">
            Crowdsurf
           </a>
          </li>
          <li>
           <a href="http://campaign.ucsd.edu/ways-to-give/">
            Find Out More
           </a>
          </li>
         </ul>
        </div>
        <div class="col-sm-4 footer-address">
         <h5>
          Mailing Address:
         </h5>
         <address>
          9500 Gilman Drive #0937
          <br/>
          La Jolla, CA 92093-0937
         </address>
         <p>
          <a href="tel:858.534.1610">
           858.534.1610
          </a>
          <strong>
           |
          </strong>
          <a href="mailto:giving@ucsd.edu">
           giving@ucsd.edu
          </a>
         </p>
         <p>
          <a href="https://campaign.ucsd.edu/advancement-privacy-policy/" target="_blank">
           Privacy Policy
          </a>
         </p>
        </div>
        <div class="col-sm-4">
         <p class="wrapLogo">
          <a href="http://campaign.ucsd.edu">
           <img alt="Campaign for UC San Diego" src="https://espi.ucsd.edu/image/ucsd-giving-4c-logo.svg"/>
          </a>
         </p>
        </div>
       </div>
      </div>
     </div>
     <!--footer bar-->
    </div>
   </div>
   <input id="hidBrowserDateTime" name="hidBrowserDateTime" type="hidden"/>
   <script type="text/javascript">
    //<![CDATA[
var BBNCAnalyticsURL = BuildBBNCAnalyticsURL('https://espi.ucsd.edu/', 'pagename;pid', 'Make+a+Gift;624');//]]>
   </script>
   <script>
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

  ga('create', 'UA-3409104-35', 'ucsd.edu');
  ga('send', 'pageview');
   </script>
  </form>
 </body>
</html>

